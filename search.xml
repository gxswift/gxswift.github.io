<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>nRF DFU</title>
    <url>/2024/12/24/NRF52/DFU/</url>
    <content><![CDATA[<h1 id="NRF52-DFU"><a href="#NRF52-DFU" class="headerlink" title="NRF52 DFU"></a>NRF52 DFU</h1><p><a href="https://github.com/kmackay/micro-ecc">micrc-ecc</a></p>
<p>Nordic的DFU采用了micro-ecc实现ECDSA算法,需要用到micro-ecc源码编译</p>
<p><a href="https://github.com/NordicSemiconductor/pc-nrfutil">pc-nrfutil</a></p>
<p>生成加密密钥</p>
<h2 id="1-编译micro-ecc库"><a href="#1-编译micro-ecc库" class="headerlink" title="1.编译micro-ecc库"></a>1.编译micro-ecc库</h2><blockquote>
<p>1.将micro-ecc源码放在SDK\external\micro-ecc下<br>2.选择对应编译项编译，生成对应的库</p>
</blockquote>
<h2 id="2-安装pc-nrfutil"><a href="#2-安装pc-nrfutil" class="headerlink" title="2.安装pc-nrfutil"></a>2.安装pc-nrfutil</h2><blockquote>
<p>python setup.py install</p>
</blockquote>
<h2 id="3-生成private-key和public-key"><a href="#3-生成private-key和public-key" class="headerlink" title="3.生成private_key和public_key"></a>3.生成private_key和public_key</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">nrfutil keys generate private.pem</span><br><span class="line">nrfutil keys display --key pk --format code private.pem --out_file dfu_public_key.c</span><br></pre></td></tr></table></figure>

<h2 id="4-编译bootloader"><a href="#4-编译bootloader" class="headerlink" title="4.编译bootloader"></a>4.编译bootloader</h2><p>1.使用生成的dfu_public_key.c替换examples\dfu下的文件<br>2.编译对应的bootloader，烧录运行后，手机打开nRF Connect，可扫描到DfuTarg</p>
<h2 id="5-打包升级文件"><a href="#5-打包升级文件" class="headerlink" title="5.打包升级文件"></a>5.打包升级文件</h2><p>1.对应工程examples\ble_app_buttonless_dfu编译<br>2.将编译后的hex文件和private.pem放入一个文件夹中<br>3.输入命令打包<br>例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrfutil pkg generate --hw-version 52 --application-version 1 --application nrf52832_xxaa.hex --sd-req 0xAF --key-file private.pem dfufile.zip</span><br></pre></td></tr></table></figure>
<p>hardware version：硬件版本nRF52832设置为52<br>softdevice firmware ID：协议栈ID,输入对应版本的ID<br>application-version 程序版本号<br>nrfutil pkg generate –help 可查询命令使用说明<br>可在SDK\components\softdevice\s132\doc\s132_nrf52_7.2.0_release-notes.pdf 查看获取The Firmware ID of this SoftDevice<br>7.2.0 对应0x0101</p>
<h2 id="6-代码的烧写和合并"><a href="#6-代码的烧写和合并" class="headerlink" title="6.代码的烧写和合并"></a>6.代码的烧写和合并</h2><p>预先烧好协议栈和bootloader，然后通过DFU，可以正常运行。如果直接烧写协议栈bootloader和应用程序，是无法正常运行的，因为bootloader会检查settings页面的CRC,如果settings页面不存在，程序会继续停留在bootloader不会跳转</p>
<h3 id="1-生成settings文件的方法"><a href="#1-生成settings文件的方法" class="headerlink" title="1.生成settings文件的方法"></a>1.生成settings文件的方法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nrfutil settings generate --family NRF52 app.hex --application-version 1 --bootloader-version 1 --bl-settings-version 1 settings.hex</span><br></pre></td></tr></table></figure>
<h3 id="2-mergehex合并烧写"><a href="#2-mergehex合并烧写" class="headerlink" title="2.mergehex合并烧写"></a>2.mergehex合并烧写</h3><p>mergehex在command line tools中<br>命令格式</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mergehex -m file1.hex file2.hex file3.hex -o output output_file.hex</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nrf</category>
        <category>DFU</category>
      </categories>
      <tags>
        <tag>nrf</tag>
        <tag>DFU</tag>
      </tags>
  </entry>
  <entry>
    <title>nRF52832环境</title>
    <url>/2024/12/24/NRF52/nrf52/</url>
    <content><![CDATA[<h1 id="nRF52832环境"><a href="#nRF52832环境" class="headerlink" title="nRF52832环境"></a>nRF52832环境</h1><h2 id="gcc-和-keil"><a href="#gcc-和-keil" class="headerlink" title="gcc 和 keil"></a>gcc 和 keil</h2><p>keil管理稍大的工程操作繁杂，添加文件，修改文件路径令人崩溃</p>
<p>gcc加makefile比较简洁方便</p>
<ul>
<li><h2 id="windows"><a href="#windows" class="headerlink" title="windows:"></a><code>windows:</code></h2><ul>
<li>toolchain:<br><code>arm-none-eabi-gcc</code></li>
<li>make</li>
</ul>
</li>
</ul>
<blockquote>
<p>修改<code>\components\toolchain\gcc\Makefile.windows</code></p>
</blockquote>
<h2 id="linux"><a href="#linux" class="headerlink" title="linux:"></a><code>linux:</code></h2><p><code>arm-none-eabi-gcc</code>和<code>libnewlib-arm-none-eabi</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt install gcc-arm-none-eabi  </span><br><span class="line"><span class="built_in">sudo</span> apt install libnewlib-arm-none-eabi</span><br></pre></td></tr></table></figure>
<blockquote>
<p>修改<code>\components\toolchain\gcc\Makefile.posix</code></p>
</blockquote>
<h2 id="工程："><a href="#工程：" class="headerlink" title="工程："></a>工程：</h2><p>makefile路径，如:</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">SDK_ROOT := ../../nRF5_SDK_17.0.2_d674dde</span><br><span class="line">PROJ_DIR := ../</span><br></pre></td></tr></table></figure>

<blockquote>
<p>armgcc和config文件夹同一级,或修改config路径SDK_CONFIG_FILE</p>
</blockquote>
<blockquote>
<p>makefile中看具体指令</p>
</blockquote>
<blockquote>
<p><a href="https://www.cnblogs.com/iini/p/9095551.html">SDK结构和应用参考</a></p>
</blockquote>
<h2 id="Debug"><a href="#Debug" class="headerlink" title="Debug"></a>Debug</h2><p>串口log，局限性较大</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> NRF_LOG_BACKEND_UART_ENABLED 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> NRF_LOG_BACKEND_UART_TX_PIN 13</span></span><br><span class="line"></span><br><span class="line">NRF_LOG_PROCESS();<span class="comment">//一次打印一条</span></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nrf</category>
      </categories>
      <tags>
        <tag>nrf</tag>
      </tags>
  </entry>
  <entry>
    <title>思考</title>
    <url>/2024/12/24/doc/think/</url>
    <content><![CDATA[<h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>农民把3000斤萝卜送到1000公里外去卖,骆驼最高载重1000斤,而骆驼每走一公里就要吃掉一斤萝卜,问农民最多可以卖掉多少斤萝卜?   </p>
<span id="more"></span>  
<p>这道题一开始看上去好像是无解的，因为你的骆驼每一公里就要消耗一斤萝卜，而到目的地有1000公里，而骆驼最多只能装1000斤萝卜。如果你的骆驼可以全部装下，到目的地也会被全部吃光，一丁点也不剩。所以，很多人的第一反应都是觉得这个不太可能。    </p>
<p>如果一开始就觉得不太可能的话，这是很正常的。我一开始也觉得不可能，思考下去，后来想到一个解法可以运送500斤萝卜到市场<br>方法如下:</p>
<ul>
<li>1、装1000斤萝卜，走250公里，扔下500斤回去  </li>
<li>2、装1000斤萝卜，走250公里，拿起250斤萝卜，走到500公里处，扔下500斤回去  </li>
<li>3、装1000斤萝卜，走到500公里处，装上500斤走到目的地**<br>于是有了500斤运到市场</li>
</ul>
<p>好像很不错了，不过还有更好的方法能运更多萝卜。  </p>
<h2 id="解答"><a href="#解答" class="headerlink" title="解答:"></a>解答:</h2><p>抽象解答使用递推公式:  </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">f(1) = 1  </span><br><span class="line">f(2) = f(1) + 1/3  </span><br><span class="line">f(3) = f(2) + 1/5  </span><br><span class="line">…  </span><br><span class="line">f(n) = f(n-1) + 1/(2*n+1)  </span><br></pre></td></tr></table></figure>
<p>通项公式: <code>f(n) = Σ(1/(2*i)+1) (1 &lt;= i &lt;=n) </code> </p>
<p>题目对应是能走的最远距离减去已知的距离，即 (f(3) – 1) * 1000 &#x3D; 533  </p>
<p>就是说最多可以运533斤萝卜<br>具体如下： </p>
<ul>
<li>1、装1000斤萝卜，走200公里，扔下600斤回去  </li>
<li>2、装1000斤萝卜，走200公里，装200斤，再走333公里，扔下334斤，往回走  </li>
<li>3、走到200公里处，装上200斤，回去，此时200公里处还剩200斤  </li>
<li>4、装1000斤萝卜，走至200公里处，装200斤，走至533公里处，装334斤，走到终点，剩533斤</li>
</ul>
<p>这是之前遇到的一个面试题</p>
]]></content>
      <categories>
        <category>思考</category>
      </categories>
      <tags>
        <tag>思考</tag>
      </tags>
  </entry>
  <entry>
    <title>Hexo 博客搭建</title>
    <url>/2024/12/24/blog/blog/</url>
    <content><![CDATA[<h1 id="Hexo-blog-搭建"><a href="#Hexo-blog-搭建" class="headerlink" title="Hexo blog 搭建"></a>Hexo blog 搭建</h1><h2 id="HEXO"><a href="#HEXO" class="headerlink" title="HEXO"></a>HEXO</h2><ul>
<li>安装</li>
</ul>
<p><a href="https://hexo.io/">HEXO官网</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br><span class="line">hexo init blog</span><br><span class="line">cd blog</span><br><span class="line">npm install</span><br><span class="line">hexo server</span><br></pre></td></tr></table></figure>

<ul>
<li>更换主题</li>
</ul>
<p><a href="https://hexo.io/themes/">主题</a></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$ cd HEXO_PATH/themes</span><br><span class="line">$ git clone https://github.com/cocowool/wave.git</span><br><span class="line">$ npm install --save  hexo-renderer-sass</span><br><span class="line">$ cd ..</span><br><span class="line">$ hexo s</span><br></pre></td></tr></table></figure>

<ul>
<li>推送</li>
</ul>
<ol>
<li><p>安装推送工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br><span class="line"># 搜索功能需要安装`hexo-generator-searchdb`</span><br></pre></td></tr></table></figure></li>
<li><p>_congif.yml文件,找到 deploy 字段，把以下代码放进去，填写新建的仓库地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># Deployment</span><br><span class="line">## Docs: https://hexo.io/docs/deployment.html</span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: &lt;你的仓库地址&gt;</span><br><span class="line">branch: master</span><br></pre></td></tr></table></figure></li>
<li><p>静态文件生成</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo  g</span><br></pre></td></tr></table></figure>
</li>
<li><p>清除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure>
</li>
<li><p>部署</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>博客</category>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>Doxygen使用</title>
    <url>/2024/12/27/blog/doxygen/</url>
    <content><![CDATA[<h1 id="Doxygen使用"><a href="#Doxygen使用" class="headerlink" title="Doxygen使用"></a>Doxygen使用</h1><h2 id="生成配置文件"><a href="#生成配置文件" class="headerlink" title="生成配置文件"></a>生成配置文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">doxygen -g</span><br></pre></td></tr></table></figure>
<h2 id="Doxygenfile-示例"><a href="#Doxygenfile-示例" class="headerlink" title="Doxygenfile 示例"></a>Doxygenfile 示例</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 项目名称，将作为于所生成的程序文档首页标题</span></span><br><span class="line">PROJECT_NAME        = <span class="string">&quot;Test&quot;</span></span><br><span class="line"><span class="comment"># 文档版本号，可对应于项目版本号，譬如 svn、cvs 所生成的项目版本号</span></span><br><span class="line">PROJECT_NUMBER      = <span class="string">&quot;1.0.0&quot;</span></span><br><span class="line"><span class="comment"># 程序文档输出目录</span></span><br><span class="line">OUTPUT_DIRECTORY    =  doc</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 程序文档输入目录 </span></span><br><span class="line">INPUT                = User src inc Utilities</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 程序文档语言环境</span></span><br><span class="line">OUTPUT_LANGUAGE      = Chinese</span><br><span class="line">DOXYFILE_ENCODING  = UTF-8</span><br><span class="line"><span class="comment"># 只对头文件中的文档化信息生成程序文档 </span></span><br><span class="line">FILE_PATTERNS        = </span><br><span class="line"><span class="comment"># 递归遍历当前目录的子目录，寻找被文档化的程序源文件 </span></span><br><span class="line">RECURSIVE            = YES </span><br><span class="line"><span class="comment"># 如果是制作 C 程序文档，该选项必须设为 YES，否则默认生成 C++ 文档格式</span></span><br><span class="line">OPTIMIZE_OUTPUT_FOR_C  = YES</span><br><span class="line"><span class="comment">#提取信息，包含类的私有数据成员和静态成员</span></span><br><span class="line">EXTRACT_ALL            = yes</span><br><span class="line">EXTRACT_PRIVATE        = yes</span><br><span class="line">EXTRACT_STATIC        = yes</span><br><span class="line"><span class="comment"># 对于使用 typedef 定义的结构体、枚举、联合等数据类型，只按照 typedef 定义的类型名进行文档化</span></span><br><span class="line">TYPEDEF_HIDES_STRUCT  = YES</span><br><span class="line"><span class="comment"># 在 C++ 程序文档中，该值可以设置为 NO，而在 C 程序文档中，由于 C 语言没有所谓的域/名字空间这样的概念，所以此处设置为 YES</span></span><br><span class="line">HIDE_SCOPE_NAMES      = YES</span><br><span class="line"><span class="comment"># 让 doxygen 静悄悄地为你生成文档，只有出现警告或错误时，才在终端输出提示信息</span></span><br><span class="line">QUIET  = YES</span><br><span class="line"><span class="comment"># 递归遍历示例程序目录的子目录，寻找被文档化的程序源文件</span></span><br><span class="line">EXAMPLE_RECURSIVE      = YES</span><br><span class="line"><span class="comment"># 允许程序文档中显示本文档化的函数相互调用关系</span></span><br><span class="line">REFERENCED_BY_RELATION = YES</span><br><span class="line">REFERENCES_RELATION    = YES</span><br><span class="line">REFERENCES_LINK_SOURCE = YES</span><br><span class="line"><span class="comment"># 不生成 latex 格式的程序文档 PDF</span></span><br><span class="line">GENERATE_LATEX        = NO</span><br><span class="line"><span class="comment"># 在程序文档中允许以图例形式显示函数调用关系，前提是你已经安装了 graphviz 软件包</span></span><br><span class="line"><span class="comment"># HAVE_DOT              = YES</span></span><br><span class="line"><span class="comment"># CALL_GRAPH            = YES</span></span><br><span class="line"><span class="comment"># CALLER_GRAPH          = YES</span></span><br><span class="line"><span class="comment">#在最后生成的文档中，把所有的源代码包含在其中</span></span><br><span class="line">SOURCE_BROWSER        = YES</span><br><span class="line"><span class="comment"># 这会在HTML文档中，添加一个侧边栏，并以树状结构显示包、类、接口等的关系</span></span><br><span class="line">GENERATE_TREEVIEW      = ALL</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="生成注释"><a href="#生成注释" class="headerlink" title="生成注释"></a>生成注释</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">doxygen ./Doxygenfile</span><br></pre></td></tr></table></figure>

<h2 id="Doxygen-注释规范"><a href="#Doxygen-注释规范" class="headerlink" title="Doxygen 注释规范"></a>Doxygen 注释规范</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"># 块注释</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">......</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"># 行注释</span><br><span class="line"><span class="comment">///&lt; ......</span></span><br><span class="line"><span class="comment">/** ...... */</span></span><br><span class="line"><span class="comment">/**&lt; ...... */</span></span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注释命令	描述</span><br><span class="line">@brief	概要信息</span><br><span class="line">@details	详细描述</span><br><span class="line">@par	开始一个段落，段名自定义</span><br><span class="line">@param	标记参数意义</span><br><span class="line">@return	描述返回意义</span><br><span class="line">@retval	描述返回值意义</span><br><span class="line">@todo	对将要做的事情进行注释</span><br><span class="line">@bug	缺陷，链接到所有缺陷汇总的缺陷列表</span><br><span class="line">@since	通常用来说明从什么版本、时间写此部分代码</span><br><span class="line">@pre	用来说明代码项的前提条件</span><br><span class="line">@post	用来说明代码项之后的使用条件</span><br><span class="line">@code	在注释中开始说明一段代码，直到@endcode命令</span><br><span class="line">@endcode	注释中代码段的结束</span><br><span class="line">@fn	函数说明</span><br><span class="line">@include	包含文件</span><br><span class="line">@var	标注变量</span><br><span class="line">@enum	标注枚举</span><br><span class="line">@struct	标注结构体</span><br><span class="line">@class	标注类</span><br><span class="line">@note	描述一些注意事项</span><br><span class="line">@addtogroup	添加到一个组</span><br></pre></td></tr></table></figure>

<h2 id="自动注释模板（VSCode-settings-json-配置）"><a href="#自动注释模板（VSCode-settings-json-配置）" class="headerlink" title="自动注释模板（VSCode settings.json 配置）"></a>自动注释模板（VSCode settings.json 配置）</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// Doxygen documentation generator set</span></span><br><span class="line">    <span class="comment">// 文件注释：版权信息模板</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.file.copyrightTag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;@copyright Copyright (c) &#123;year&#125;  by 作者&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 文件注释：自定义模块，这里我添加一个修改日志</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.file.customTag&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;@par 修改日志:&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;&lt;table&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;&lt;tr&gt;&lt;th&gt;Date       &lt;th&gt;Version &lt;th&gt;Author  &lt;th&gt;Description&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;&lt;tr&gt;&lt;td&gt;&#123;date&#125;     &lt;td&gt;1.0     &lt;td&gt;作者    &lt;td&gt;内容&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;&lt;/table&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 文件注释的组成及其排序</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.file.fileOrder&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;file&quot;</span><span class="punctuation">,</span>		<span class="comment">// @file</span></span><br><span class="line">        <span class="string">&quot;brief&quot;</span><span class="punctuation">,</span>	<span class="comment">// @brief 简介</span></span><br><span class="line">        <span class="string">&quot;author&quot;</span><span class="punctuation">,</span>	<span class="comment">// 作者</span></span><br><span class="line">        <span class="string">&quot;version&quot;</span><span class="punctuation">,</span>	<span class="comment">// 版本</span></span><br><span class="line">        <span class="string">&quot;date&quot;</span><span class="punctuation">,</span>		<span class="comment">// 日期</span></span><br><span class="line">        <span class="string">&quot;empty&quot;</span><span class="punctuation">,</span>	<span class="comment">// 空行</span></span><br><span class="line">        <span class="string">&quot;copyright&quot;</span><span class="punctuation">,</span><span class="comment">// 版权</span></span><br><span class="line">        <span class="string">&quot;empty&quot;</span><span class="punctuation">,</span>    <span class="comment">// 空行</span></span><br><span class="line">        <span class="string">&quot;custom&quot;</span>	<span class="comment">// 自定义</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 下面时设置上面标签tag的具体信息</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.file.fileTemplate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@file &#123;name&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.file.versionTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@version 1.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.authorEmail&quot;</span><span class="punctuation">:</span> <span class="string">&quot;邮箱@qq.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.authorName&quot;</span><span class="punctuation">:</span> <span class="string">&quot;作者&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.authorTag&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@author &#123;author&#125; (&#123;email&#125;)&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="comment">// 日期格式与模板</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.dateFormat&quot;</span><span class="punctuation">:</span> <span class="string">&quot;YYYY-MM-DD&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.dateTemplate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@date &#123;date&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 根据自动生成的注释模板（目前主要体现在函数注释上）</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.order&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="string">&quot;brief&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;tparam&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;param&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="string">&quot;return&quot;</span></span><br><span class="line">    <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.paramTemplate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@param&#123;indent:8&#125;&#123;param&#125;&#123;indent:25&#125;MyParamDoc&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.returnTemplate&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@return &#123;type&#125; &quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;doxdocgen.generic.splitCasingSmartText&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;[json]&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"> </span><br><span class="line">        <span class="attr">&quot;editor.quickSuggestions&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;strings&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;editor.suggest.insertMode&quot;</span><span class="punctuation">:</span> <span class="string">&quot;replace&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>


<h2 id="手动注释模板"><a href="#手动注释模板" class="headerlink" title="手动注释模板"></a>手动注释模板</h2><h3 id="文件注释模板"><a href="#文件注释模板" class="headerlink" title="文件注释模板"></a>文件注释模板</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file 文件名</span></span><br><span class="line"><span class="comment"> * @brief 文件概要信息描述</span></span><br><span class="line"><span class="comment"> * @author 作者</span></span><br><span class="line"><span class="comment"> * @version 版本</span></span><br><span class="line"><span class="comment"> * @date 日期</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @copyright 版权信息</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @par 修改日志:</span></span><br><span class="line"><span class="comment"> * &lt;table&gt;</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;th&gt;Date	 &lt;th&gt;Version  &lt;th&gt;Author  &lt;th&gt;Description</span></span><br><span class="line"><span class="comment"> * &lt;tr&gt;&lt;td&gt;日期 	&lt;td&gt;版本     &lt;td&gt;作者      &lt;td&gt;说明</span></span><br><span class="line"><span class="comment"> * &lt;/table&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>
<h3 id="函数注释模板"><a href="#函数注释模板" class="headerlink" title="函数注释模板"></a>函数注释模板</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  函数功能概要信息</span></span><br><span class="line"><span class="comment"> * @param[in]  输入参数       输入参数描述信息</span></span><br><span class="line"><span class="comment"> * @param[out] 输出参数       输出参数描述信息</span></span><br><span class="line"><span class="comment"> * @return 返回类型				</span></span><br><span class="line"><span class="comment"> * @retval 返回值	返回值意义描述信息 </span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>博客</category>
        <category>Doxygen</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Doxygen</tag>
      </tags>
  </entry>
  <entry>
    <title>markdown语法</title>
    <url>/2023/12/26/blog/grammer/</url>
    <content><![CDATA[<h1 id="markdown语法"><a href="#markdown语法" class="headerlink" title="markdown语法"></a>markdown语法</h1><p><a href="main.md">返回主页</a></p>
<h1 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><h3 id="标题3"><a href="#标题3" class="headerlink" title="标题3"></a>标题3</h3><h4 id="标题4"><a href="#标题4" class="headerlink" title="标题4"></a>标题4</h4><h5 id="标题5"><a href="#标题5" class="headerlink" title="标题5"></a>标题5</h5><h6 id="标题6"><a href="#标题6" class="headerlink" title="标题6"></a>标题6</h6><pre><code># 标题1
## 标题2
### 标题3
#### 标题4
##### 标题5
###### 标题6
</code></pre>
<h1 id="标题-1"><a href="#标题-1" class="headerlink" title="标题"></a>标题</h1><h2 id="标题2-1"><a href="#标题2-1" class="headerlink" title="标题2"></a>标题2</h2><pre><code>标题
===
标题2
---
</code></pre>
<h1 id="文本"><a href="#文本" class="headerlink" title="文本"></a>文本</h1><p><em>斜体文本</em><br><em>斜体文本</em></p>
<p><strong>粗体文本</strong><br><strong>粗体文本</strong></p>
<p><em><strong>粗斜体文本</strong></em><br><em><strong>粗斜体文本</strong></em></p>
<p><del>删除线</del></p>
<pre><code>*斜体文本*
_斜体文本_

**粗体文本**
__粗体文本__

***粗斜体文本***
___粗斜体文本___

~~删除线~~
</code></pre>
<h1 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h1><ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
<ul>
<li><p>第一项</p>
</li>
<li><p>第二项</p>
</li>
<li><p>第三项</p>
<ul>
<li><p>第一项</p>
</li>
<li><p>第二项</p>
</li>
<li><p>第三项</p>
<ul>
<li><p>第一项</p>
</li>
<li><p>第二项</p>
</li>
<li><p>第三项</p>
<ul>
<li>第一项</li>
<li>第二项</li>
<li>第三项</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
<li><pre><code>    - 第一项
    - 第二项
    - 第三项
    - *+相同
</code></pre>
</li>
</ul>
<h1 id="区块"><a href="#区块" class="headerlink" title="区块"></a>区块</h1><blockquote>
<p>最外层</p>
<blockquote>
<p>第一层嵌套</p>
<blockquote>
<p>第二层嵌套</p>
</blockquote>
</blockquote>
</blockquote>
<pre><code>&gt; 最外层
&gt; &gt; 第一层嵌套
&gt; &gt; &gt; 第二层嵌套
</code></pre>
<h1 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h1><p>这是一个链接 <a href="main.md">主页</a></p>
<pre><code>这是一个链接 [主页](main.md)
</code></pre>
<p>我经常去的几个网站<a href="http://www.google.com/" title="Google">Google</a>、<a href="http://www.leanote.com/" title="Leanote">Leanote</a>以及<a href="%22%E4%BC%9A%E6%98%BE%E7%A4%BA%E8%BD%AC%E6%8D%A2%E5%90%8E%E7%9A%84%22">自己的博客</a><br><a href="http://www.leanote.com/" title="Leanote">Leanote 笔记</a>是一个不错的<a href="http://www.baidu.com/" title="百度">网站</a>。</p>
<pre><code>我经常去的几个网站[Google][1]、[Leanote][2]以及[自己的博客][3]
[Leanote 笔记][2]是一个不错的[网站][]。

[1]:http://www.google.com &quot;Google&quot;
[2]:http://www.leanote.com &quot;Leanote&quot;
[3]: &quot;会显示转换后的&quot;
[网站]:http://www.baidu.com &quot;百度&quot;
</code></pre>
<h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><p>这是一张图片 </p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">![alt text](29E3BA89.png)</span><br><span class="line">![RUNOOB 图标](markdown.jpg &quot;RUNOOB&quot;)</span><br></pre></td></tr></table></figure>
<h1 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h1><table>
<thead>
<tr>
<th align="left">左对齐</th>
<th align="right">右对齐</th>
<th align="center">居中对齐</th>
</tr>
</thead>
<tbody><tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
<tr>
<td align="left">单元格</td>
<td align="right">单元格</td>
<td align="center">单元格</td>
</tr>
</tbody></table>
<h1 id="锚点"><a href="#锚点" class="headerlink" title="锚点"></a>锚点</h1><p><a id="index">锚点位置</a></p>
<p>跳转到<a href="#index">锚点</a></p>
<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">a</span> <span class="attr">id</span>=<span class="string">&quot;index&quot;</span>&gt;</span></span>锚点位置<span class="language-xml"><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">跳转到[<span class="string">锚点</span>](<span class="link">#index</span>)</span><br></pre></td></tr></table></figure>

<h1 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h1><div style='display: none'>
哈哈我是注释，不会在浏览器中显示。
我也是注释。
</div>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;div style=&#x27;display: none&#x27;&gt;</span><br><span class="line">哈哈我是注释，不会在浏览器中显示。</span><br><span class="line">我也是注释。</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<!--
多段
注释，
不会在浏览器中显示。
-->
<pre><code>&lt;!--
多段
注释，
不会在浏览器中显示。
--&gt;
</code></pre>
<h1 id="标记"><a href="#标记" class="headerlink" title="标记"></a>标记</h1><p><code>标记1</code>   <code>标记2</code>  <code>标记3</code> <code>标记4</code></p>
<pre><code>`标记1`   ``标记2``  ```标记3``` ````标记4````
</code></pre>
<h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//注释</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>使用 <kbd>Ctrl</kbd>+<kbd>Alt</kbd>+<kbd>Del</kbd> 重启电脑</p>
<pre><code>目前支持的 HTML 元素有：&lt;kbd&gt; &lt;b&gt; &lt;i&gt; &lt;em&gt; &lt;sup&gt; &lt;sub&gt; &lt;center&gt;
支持反斜杠添加特殊符号\
tab标记段
</code></pre>
]]></content>
      <categories>
        <category>博客</category>
        <category>markdown</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP8266编译环境</title>
    <url>/2024/12/24/esp8266/environment/</url>
    <content><![CDATA[<h1 id="esp8266环境"><a href="#esp8266环境" class="headerlink" title="esp8266环境"></a>esp8266环境</h1><h2 id="编译速度"><a href="#编译速度" class="headerlink" title="编译速度"></a>编译速度</h2><table>
<thead>
<tr>
<th></th>
<th>linux</th>
<th>windows</th>
</tr>
</thead>
<tbody><tr>
<td>make</td>
<td>real	0m47.489s</td>
<td>real    6m33.019s</td>
</tr>
<tr>
<td></td>
<td>user	0m36.469s</td>
<td>user    0m23.129s</td>
</tr>
<tr>
<td></td>
<td>sys	0m10.939s</td>
<td>sys     0m46.835s</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
<tr>
<td>make -j4</td>
<td>real	0m18.424s</td>
<td>real    2m8.387s</td>
</tr>
<tr>
<td></td>
<td>user	0m50.240s</td>
<td>user    0m19.590s</td>
</tr>
<tr>
<td></td>
<td>sys	0m14.509s</td>
<td>sys     0m44.509s</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>linux编译速度比windows快8倍左右</p>
<p><a href="https://blog.csdn.net/qq_35757234/article/details/88396676">编译环境参考</a></p>
<h3 id="环境下载（附带SDK-Toolchain）"><a href="#环境下载（附带SDK-Toolchain）" class="headerlink" title="环境下载（附带SDK Toolchain）"></a>环境下载（附带SDK Toolchain）</h3><p><a href="https://dl.espressif.com/dl/xtensa-lx106-elf-linux64-1.22.0-92-g8facf4c-5.2.0.tar.gz">esp32_win32_msys2_environment_and_toolchain-20180110.zip</a>  </p>
<h3 id="win11修改用户名"><a href="#win11修改用户名" class="headerlink" title="win11修改用户名"></a>win11修改用户名</h3><p>win+r 运行 netplwiz</p>
<h3 id="SDK"><a href="#SDK" class="headerlink" title="SDK"></a>SDK</h3><p><a href="https://github.com/espressif/ESP8266_RTOS_SDK">ESP8266_RTOS_SDK</a>  </p>
<h3 id="Toolchain"><a href="#Toolchain" class="headerlink" title="Toolchain"></a>Toolchain</h3><p><a href="https://dl.espressif.com/dl/xtensa-lx106-elf-win32-1.22.0-92-g8facf4c-5.2.0.tar.gz">Toolchain xtensa-lx106-elf</a></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">python -m pip install --user -r <span class="variable">$IDF_PATH</span>/requirements.txt</span><br></pre></td></tr></table></figure>
<h3 id="新建工程编译"><a href="#新建工程编译" class="headerlink" title="新建工程编译"></a>新建工程编译</h3><p>新建<code>export_path.sh</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">export</span> IDF_PATH=~/esp/ESP8266_RTOS_SDK</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:~/esp/toolchain/xtensa-lx106-elf/bin</span><br></pre></td></tr></table></figure>
<p>执行<code>. export_path.sh</code>加入环境变量</p>
<p>修改配置</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">make menuconfig</span><br></pre></td></tr></table></figure>
<p>下载</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">make flash monitor</span><br></pre></td></tr></table></figure>

<p><a href="https://blog.csdn.net/wutongpro/article/details/109902462">环境参考</a></p>
<p><a href="https://blog.csdn.net/jasper_JA/article/details/103799890">工程自定义文件夹参考</a></p>
<p>如腾讯IoT工程</p>
]]></content>
      <categories>
        <category>esp</category>
      </categories>
      <tags>
        <tag>esp</tag>
      </tags>
  </entry>
  <entry>
    <title>ESP-IDF</title>
    <url>/2024/12/24/esp8266/espidf/</url>
    <content><![CDATA[<h1 id="ESP-IDF"><a href="#ESP-IDF" class="headerlink" title="ESP-IDF"></a>ESP-IDF</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="https://gitee.com/EspressifSystems/esp-idf">esp-idf</a></p>
<p><a href="https://gitee.com/EspressifSystems/esp-gitee-tools">esp-gitee-tools</a></p>
<p>使用esp-gitee-tools加速环境搭建，详情看install使用</p>
<p>cmd环境下在esp-idf文件夹下运行export.bat&#x2F;export.sh加入环境变量，然后运行idf.py build编译</p>
<h2 id="组件配置相关文件"><a href="#组件配置相关文件" class="headerlink" title="组件配置相关文件"></a>组件配置相关文件</h2><table>
<thead>
<tr>
<th>文件</th>
<th>位置</th>
<th>作用</th>
<th>概括</th>
</tr>
</thead>
<tbody><tr>
<td>Kconfig</td>
<td>组件目录【手动创建】</td>
<td>用于生成menuconfig中的菜单于Component Configuration子菜单</td>
<td>菜单模板</td>
</tr>
<tr>
<td>Kconfig.projbuild</td>
<td>组件目录【手动创建】</td>
<td>用于生成menuconfig中的菜单于顶层菜单</td>
<td>菜单模板</td>
</tr>
<tr>
<td>sdkconfig</td>
<td>项目根目录【自动生成】</td>
<td>用于以键值对的形式保存Kconfig设置手动改动无效</td>
<td>保存设置</td>
</tr>
<tr>
<td>sdkconfig.h</td>
<td>工程编译生成文件build&#x2F;config&#x2F;【自动生成】</td>
<td>C语言访问Kconfig配置的方式手动改动无效</td>
<td>C语言接口</td>
</tr>
<tr>
<td>sdkconfig.default</td>
<td>项目根目录【手动创建】</td>
<td>自定义sdkconfig的默认值，与sdkconfig文件格式相同，不会被构建系统更改。构建系统自动使用此文件的配置填充sdkconfig中未设置的值</td>
<td>缺省值清单</td>
</tr>
<tr>
<td>sdkconfig.old</td>
<td>项目根目录【自动生成】</td>
<td>当保存旧的menuconfig设置时，构建系统自动备份一个原来的sdkconfig文件</td>
<td>备份</td>
</tr>
<tr>
<td>sdkconfig.ci</td>
<td></td>
<td>该文件是 CI（持续集成）测试框架的一部分，在正常构建过程中会被忽略。</td>
<td>单元测试时</td>
</tr>
<tr>
<td>sdkconfig.remane</td>
<td></td>
<td>用于重命名弃用的配置名，方便旧配置文件快速用于新配置</td>
<td>向前兼容</td>
</tr>
</tbody></table>
<h2 id="新建工程"><a href="#新建工程" class="headerlink" title="新建工程"></a>新建工程</h2><ul>
<li>方法一<br>通过idf.py指令<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">idf.py create-project projName</span><br></pre></td></tr></table></figure></li>
<li>方法二<br>在esp-idf的example-&gt;’get-started’里面是有一个sample_project的样板文件，可以复制修改</li>
</ul>
<h2 id="文件内容以及作用分析"><a href="#文件内容以及作用分析" class="headerlink" title="文件内容以及作用分析"></a>文件内容以及作用分析</h2><h3 id="ProjDir-CMakeLists-txt文件"><a href="#ProjDir-CMakeLists-txt文件" class="headerlink" title="ProjDir&#x2F;CMakeLists.txt文件"></a><strong>ProjDir&#x2F;CMakeLists.txt文件</strong></h3><p>这是工程目录下的给CMake使用的文件，我们可以在里面指定我们需要用的componnent路径。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># For more information about build system see</span><br><span class="line"># https://docs.espressif.com/projects/esp-idf/en/latest/api-guides/build-system.html</span><br><span class="line"># The following five lines of boilerplate have to be in your project&#x27;s</span><br><span class="line"># CMakeLists in this exact order for cmake to work correctly</span><br><span class="line">cmake_minimum_required(VERSION 3.5)</span><br><span class="line"></span><br><span class="line">set(EXTRA_COMPONENT_DIRS $ENV&#123;IDF_PATH&#125;/examples/common_components/led_strip)</span><br><span class="line">#这一行就是指定项目用到的componnent路径</span><br><span class="line"></span><br><span class="line">include($ENV&#123;IDF_PATH&#125;/tools/cmake/project.cmake)</span><br><span class="line">project(ws2812_master)</span><br></pre></td></tr></table></figure>
<h3 id="ProjDir-Makefile文件"><a href="#ProjDir-Makefile文件" class="headerlink" title="ProjDir&#x2F;Makefile文件"></a><strong>ProjDir&#x2F;Makefile文件</strong></h3><p>这个文件就是给CMake的编译文件，这里面的信息还是比较有用的。同样，我们也需要在这里面声明用到的componnent路径，给CMake指路。要注意需改PROJECT_NAME :&#x3D;为你的项目名称。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#</span><br><span class="line"># This is a project Makefile. It is assumed the directory this Makefile resides in is a</span><br><span class="line"># project subdirectory.</span><br><span class="line">#</span><br><span class="line"></span><br><span class="line">PROJECT_NAME := ws2812_master</span><br><span class="line"></span><br><span class="line">EXTRA_COMPONENT_DIRS = $(IDF_PATH)/examples/common_components/led_strip</span><br><span class="line"></span><br><span class="line">include $(IDF_PATH)/make/project.mk</span><br></pre></td></tr></table></figure>
<h3 id="ProjDir-main-CMakeLists-txt文件"><a href="#ProjDir-main-CMakeLists-txt文件" class="headerlink" title="ProjDir&#x2F;main&#x2F;CMakeLists.txt文件"></a><strong>ProjDir&#x2F;main&#x2F;CMakeLists.txt文件</strong></h3><p>这个文件用来个CMake指路，告诉它main文件的位置，注意修改main文件的名称。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">idf_component_register(SRCS &quot;ws2812_master_main.c&quot;</span><br><span class="line">                    INCLUDE_DIRS &quot;.&quot;)</span><br></pre></td></tr></table></figure>
<h3 id="ProjDir-main-Kconfig-projbuild文件"><a href="#ProjDir-main-Kconfig-projbuild文件" class="headerlink" title="ProjDir&#x2F;main&#x2F;Kconfig.projbuild文件"></a><strong>ProjDir&#x2F;main&#x2F;Kconfig.projbuild文件</strong></h3><p>这不是一个必须的文件，它的作用就是把一些常量放进idf.config menuconfig里面，可以方便针对情况修改工程，而不需要进入到代码里面。<br>它的格式请参考下面的格式，或者示例工程里面也有这个文件。<br>在代码中使用需要注意：WS2812_RMT_GPIO 这个配置项在使用的时候应该为CONFIG_WS2812_RMT_GPIO</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">menu &quot;WS2812 RMT Configuration&quot;</span><br><span class="line">    config WS2812_RMT_GPIO</span><br><span class="line">        int &quot;RMT TX GPIO&quot;</span><br><span class="line">        default 48</span><br><span class="line">        help</span><br><span class="line">            Set the GPIO numbers used for transmitting the RMT single.</span><br><span class="line"></span><br><span class="line">    config WS2812_STRIP_LED_NUMBER</span><br><span class="line">        int &quot;Number of LEDs in strip&quot;</span><br><span class="line">        default 25</span><br><span class="line">        help</span><br><span class="line">            A single RGB strip contains serveral LEDs.</span><br><span class="line">endmenu</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>esp</category>
      </categories>
      <tags>
        <tag>esp</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG录屏</title>
    <url>/2024/12/24/linux/ffmpeg%E5%BD%95%E5%B1%8F/</url>
    <content><![CDATA[<h1 id="FFMPEG录屏"><a href="#FFMPEG录屏" class="headerlink" title="FFMPEG录屏"></a>FFMPEG录屏</h1><p>使用 FFMpeg录屏通常有两种方式：</p>
<ol>
<li>基于 gdigrab (使用CPU录制)</li>
<li>基于 DirectShow （使用显卡录制）</li>
</ol>
<p><code>gdigrab</code>方式实现更简单，更轻量，兼容性也更好。<code>DirectShow</code>方案需要额外下载 <code>screen-capture-recorder</code></p>
<p>基于该方法，主要核心就是 ffmpeg的命令编写，具体命令如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -f gdigrab -framerate 30 -offset_x 0 -offset_y 0 -video_size 1920x1080 -i desktop -r 30 -vcodec libx264 -pix_fmt yuv420p -y <span class="string">&quot;output.mp4&quot;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//注意：ffmpeg 的命令输入，也需要考虑输入顺序的。先指定输入参数，再指定输出参数。</span><br><span class="line">    // -f 表示指定文件格式或采集数据的设备，如果是 DirectShow 方案，就需要指定为 screen-capture-recorder。    </span><br><span class="line">    //对于输入，如果不指定-f,ffmpeg 会根据输入数据，来判断数据的封装格式.    </span><br><span class="line">    //对于输出，如果不指定-f,ffmpeg 也可以通过输出文件名进行推导.    </span><br><span class="line">//ffmpeg -formats 可以列出所有的formats</span><br><span class="line">// -framerate 指定录制的视频帧率</span><br><span class="line">// -offset_x -offset_y 指定录制的区域左上角坐标</span><br><span class="line">// -video_size 指定录制的视频尺寸</span><br><span class="line">// -i 指定从哪儿采集数据，它是一个文件索引号。这里是指定输入的视频源。（i 表示input，不一定是表示视频文件，表示输入。如也可以是音频文件输入等）</span><br><span class="line">// -r 指定帧率</span><br><span class="line">// -vcodec 指定编码格式。libx264 这种格式录制出来的视频，清晰度更清晰，占用的文件大小更小，推荐使用。</span><br><span class="line">// -pix_fmt 像素格式，常规使用yuv420p</span><br><span class="line">// -y 表示强制覆盖，如果输出文件已经存在，就覆盖输出文件路径。这里需要注意下：输出文件路径带上 双引号 ，防止不合法路径将命令拆分了。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ffmpeg</tag>
        <tag>录屏</tag>
      </tags>
  </entry>
  <entry>
    <title>强制网络门户</title>
    <url>/2024/12/24/esp8266/cap/</url>
    <content><![CDATA[<h1 id="强制网络门户"><a href="#强制网络门户" class="headerlink" title="强制网络门户"></a>强制网络门户</h1><p>强制网络门户（captive portal）就是手机在连接上某个wifi的时候，自动弹出一个页面，这个页面通常是要我们输入账号密码才能连接网络。wifi还没有大面积普及的时候，在商场或餐厅提供的wifi常常使用这个功能。现在wifi设备多了，这个功能逐渐被遗忘了，但是仍然有一定的用处，比如手机连上wifi自动后弹出配网页面。</p>
<h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><p>手机连上wifi后，但不能保证能连接到互联网，所以手机连上某个wifi的第一件事就是检查下这个wifi是否有网。不同品牌的手机检查网络方式略有不同，但基本上大同小异。一般是向某个固定的地址发起一个HTTP请求，如果请求到正确的数据，则证明这个wifi可以正常连接互联网，如果请求不到数据，或者请求到了错误的数据，则说明这个wifi不能正常连接互联网。<br>上述检查网络的过程可分为三种情况：</p>
<ul>
<li>1.请求到正常的数据(该wifi可直接上网)</li>
<li>2.没有请求到数据(该wifi无法连接网络)</li>
<li>3.请求到错误(非手机期待)的数据(可能需要认证才能连接网络)</li>
</ul>
<p>如果遇到上述第三种情况，那么手机就会打开相应的页面，就是所谓的自动弹出页面。<br>HTTP请求的过程，首先通过DNS获取服务器的IP地址，然后再向服务器发起HTTP请求。<br>以苹果手机为例，连上某个wifi后会访问如下页面<br><a href="http://captive.apple.com/hotspot-detect.html">http://captive.apple.com/hotspot-detect.html</a><br>访问过程如下，先向DNS服务器发起DNS请求，获得captive.apple.com对应的IP地址，然后再向刚刚获取到的地址发送HTTP请求，如果DNS请求失败，则不会（也不能）发起Http请求。</p>
<h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><p>手机连上ESP8266后，默认的DNS地址就是模块的地址（192.168.4.1），所以我们要在模块上建立一个DNS服务器，响应手机发来的DNS请求，将所有的域名都解析到模块本身的IP地址上，那么手机访问<a href="http://captive.apple.com/hotspot-detect.html%E5%B0%B1%E7%9B%B8%E5%BD%93%E4%BA%8E%E8%AE%BF%E9%97%AEhttp://192.168.4.1/hotspot-detect.html%EF%BC%8C%E6%88%91%E4%BB%AC%E7%9A%84%E6%A8%A1%E7%BB%84%E5%B0%B1%E8%83%BD%E6%88%90%E5%8A%9F%E7%9A%84%E6%8D%95%E8%8E%B7%E5%88%B0%E6%89%8B%E6%9C%BA%E5%8F%91%E6%9D%A5%E7%9A%84HTTP%E8%AF%B7%E6%B1%82%E4%BA%86%E3%80%82%EF%BC%88%E8%BF%99%E7%A7%8D%E5%81%9A%E6%B3%95%E9%80%9A%E5%B8%B8%E5%8F%AB%E5%81%9ADNS%E6%8B%A6%E6%88%AA%EF%BC%89%E3%80%82">http://captive.apple.com/hotspot-detect.html就相当于访问http://192.168.4.1/hotspot-detect.html，我们的模组就能成功的捕获到手机发来的HTTP请求了。（这种做法通常叫做DNS拦截）。</a><br>捕获到HTTP请求后，还要做相应的HTTP响应，才能让手机弹出页面。所以模组还需要建立一个HTTP服务器，相应手机发来的HTTP请求。HTTP底层协议是TCP，默认使用的是80端口，我们只需要建立一个TCP服务器，监听80端口，收到数据后做相应的回复即可。</p>
<h2 id="实现代码"><a href="#实现代码" class="headerlink" title="实现代码"></a>实现代码</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">initialise_wifi</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    tcpip_adapter_init();</span><br><span class="line">    wifi_event_group = xEventGroupCreate();</span><br><span class="line">    ESP_ERROR_CHECK( esp_event_loop_init(event_handler, <span class="literal">NULL</span>) );</span><br><span class="line">    <span class="type">wifi_init_config_t</span> cfg = WIFI_INIT_CONFIG_DEFAULT();</span><br><span class="line">    ESP_ERROR_CHECK( esp_wifi_init(&amp;cfg) );</span><br><span class="line"></span><br><span class="line">    <span class="type">wifi_config_t</span> wifi_ap_config = &#123;</span><br><span class="line">        .ap = &#123;</span><br><span class="line">            .ssid = <span class="string">&quot;Free Wifi&quot;</span>,</span><br><span class="line">            .ssid_len = <span class="built_in">strlen</span>(<span class="string">&quot;Free Wifi&quot;</span>),</span><br><span class="line">            .authmode = WIFI_AUTH_OPEN,</span><br><span class="line">            .max_connection = <span class="number">3</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    ESP_ERROR_CHECK( esp_wifi_set_mode(WIFI_MODE_AP) );</span><br><span class="line"></span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;Setting WiFi softAP SSID %s...&quot;</span>, wifi_ap_config.ap.ssid);</span><br><span class="line">    ESP_ERROR_CHECK( esp_wifi_set_config(ESP_IF_WIFI_AP, &amp;wifi_ap_config) );</span><br><span class="line">    ESP_ERROR_CHECK( esp_wifi_start() );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">app_main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    ESP_ERROR_CHECK( nvs_flash_init() );</span><br><span class="line">    initialise_wifi();   <span class="comment">//初始化wifi</span></span><br><span class="line"></span><br><span class="line">    dns_server_start();  <span class="comment">//开启DNS服务</span></span><br><span class="line">    web_server_start();  <span class="comment">//开启http服务</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="DNS报文解析"><a href="#DNS报文解析" class="headerlink" title="DNS报文解析"></a>DNS报文解析</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">my_dns_server</span><span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> data[<span class="number">128</span>];</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">client</span> =</span> &#123; <span class="number">0</span> &#125;;</span><br><span class="line">    <span class="type">socklen_t</span>  client_len=<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in);</span><br><span class="line">    <span class="type">uint32_t</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    ESP_LOGI(TAG,<span class="string">&quot;DNS server start ...&quot;</span>);</span><br><span class="line">    <span class="type">int</span> sock = create_udp_socket(<span class="number">53</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (sock &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        ESP_LOGE(TAG,<span class="string">&quot;Failed to create IPv4 multicast socket&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        len=recvfrom(sock,data,<span class="number">100</span>,<span class="number">0</span>,(<span class="keyword">struct</span> sockaddr *)&amp;client,&amp;client_len); <span class="comment">//阻塞式</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>((len &lt; <span class="number">0</span>) || ( len &gt; <span class="number">100</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            ESP_LOGE(TAG,<span class="string">&quot;recvfrom error\n&quot;</span>);</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//过滤掉一些杂乱的域名</span></span><br><span class="line">        <span class="keyword">if</span>( <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;taobao&quot;</span>)||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;qq&quot;</span>)    ||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;sogou&quot;</span>) ||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;amap&quot;</span>)  ||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;alipay&quot;</span>)||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;youku&quot;</span>) ||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;iqiyi&quot;</span>) ||</span><br><span class="line">            <span class="built_in">strstr</span>((<span class="type">const</span> <span class="type">char</span> *)data+<span class="number">0xc</span>,<span class="string">&quot;baidu&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        data[<span class="number">2</span>] |= <span class="number">0x80</span>;</span><br><span class="line">        data[<span class="number">3</span>] |= <span class="number">0x80</span>;</span><br><span class="line">        data[<span class="number">7</span>] =<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        data[len++] =<span class="number">0xc0</span>;</span><br><span class="line">        data[len++] =<span class="number">0x0c</span>;</span><br><span class="line"></span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x01</span>;</span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x01</span>;</span><br><span class="line"></span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x0A</span>;</span><br><span class="line"></span><br><span class="line">        data[len++] =<span class="number">0x00</span>;</span><br><span class="line">        data[len++] =<span class="number">0x04</span>;</span><br><span class="line"></span><br><span class="line">        data[len++] =<span class="number">192</span>;</span><br><span class="line">        data[len++] =<span class="number">168</span>;</span><br><span class="line">        data[len++] =<span class="number">4</span>;</span><br><span class="line">        data[len++] =<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        sendto(sock,data,len,<span class="number">0</span>,(<span class="keyword">struct</span> sockaddr*)&amp;client,client_len);</span><br><span class="line"></span><br><span class="line">        vTaskDelay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ESP_LOGE(TAG,<span class="string">&quot;DNS server stop ...&quot;</span>);</span><br><span class="line">    shutdown(sock, <span class="number">0</span>);</span><br><span class="line">    close(sock);</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">webserver</span><span class="params">(<span class="type">void</span> *pvParameters)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> sockfd,new_fd;<span class="comment">/*socket句柄和建立连接后的句柄*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">my_addr</span>;</span><span class="comment">/*本方地址信息结构体，下面有具体的属性赋值*/</span></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">their_addr</span>;</span><span class="comment">/*对方地址信息*/</span></span><br><span class="line">    <span class="type">socklen_t</span> sin_size;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">struct</span> <span class="title">timeval</span> <span class="title">tv</span>;</span><span class="comment">//发送接收超时时间</span></span><br><span class="line">    tv.tv_sec = <span class="number">10</span>;</span><br><span class="line">    tv.tv_usec = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    sin_size=<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr_in);</span><br><span class="line">    sockfd=socket(AF_INET,SOCK_STREAM,<span class="number">0</span>);<span class="comment">//建立socket </span></span><br><span class="line">    <span class="keyword">if</span>(sockfd==<span class="number">-1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    ESP_LOGE(TAG, <span class="string">&quot;socket failed:%d&quot;</span>,errno);</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    my_addr.sin_family=AF_INET;<span class="comment">/*该属性表示接收本机或其他机器传输*/</span></span><br><span class="line">    my_addr.sin_port=htons(<span class="number">80</span>);<span class="comment">/*端口号*/</span></span><br><span class="line">    my_addr.sin_addr.s_addr=htonl(INADDR_ANY);<span class="comment">/*IP，括号内容表示本机IP*/</span></span><br><span class="line">    bzero(&amp;(my_addr.sin_zero),<span class="number">8</span>);<span class="comment">/*将其他属性置0*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(bind(sockfd,(<span class="keyword">struct</span> sockaddr*)&amp;my_addr,<span class="keyword">sizeof</span>(<span class="keyword">struct</span> sockaddr))&lt;<span class="number">0</span>)<span class="comment">//绑定地址结构体和socket</span></span><br><span class="line">    &#123;</span><br><span class="line">    ESP_LOGE(TAG,<span class="string">&quot;bind error&quot;</span>);</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">    <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    listen(sockfd,<span class="number">8</span>);<span class="comment">//开启监听 ，第二个参数是最大监听数 </span></span><br><span class="line">    ESP_LOGI(TAG, <span class="string">&quot;webserver start...&quot;</span>);</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        new_fd=accept(sockfd,(<span class="keyword">struct</span> sockaddr*)&amp;their_addr,&amp;sin_size);<span class="comment">//在这里阻塞知道接收到消息，参数分别是socket句柄，接收到的地址信息以及大小 </span></span><br><span class="line">        <span class="keyword">if</span>(new_fd==<span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">           ESP_LOGE(TAG,<span class="string">&quot;accept failed&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            ESP_LOGI(TAG,<span class="string">&quot;Accept new socket: %d&quot;</span>,new_fd);</span><br><span class="line"></span><br><span class="line">    setsockopt(new_fd, SOL_SOCKET, SO_RCVTIMEO, (<span class="type">const</span> <span class="type">char</span>*)&amp;tv, <span class="keyword">sizeof</span>(tv));</span><br><span class="line"></span><br><span class="line">            <span class="type">int</span> *para_fd = <span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>));</span><br><span class="line">            *para_fd = new_fd;</span><br><span class="line">            xTaskCreate(&amp;handle_http_request, <span class="string">&quot;socket_task&quot;</span>, <span class="number">1024</span>*<span class="number">3</span>, para_fd, <span class="number">6</span>, <span class="literal">NULL</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    vTaskDelay(<span class="number">10</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    vTaskDelete(<span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>esp</category>
      </categories>
      <tags>
        <tag>esp</tag>
      </tags>
  </entry>
  <entry>
    <title>gitattributes</title>
    <url>/2024/12/24/linux/gitattributes/</url>
    <content><![CDATA[<h2 id="gitattributes基本用法"><a href="#gitattributes基本用法" class="headerlink" title=".gitattributes基本用法"></a>.gitattributes基本用法</h2><ul>
<li>1.设置行尾字符：</li>
</ul>
<p>你可以设置文本文件在检出时应该使用哪种行尾字符(LF、CRLF 或 auto)。这对于跨平台项目特别有用，因为 Windows 通常使用 CRLF 行尾，而 Unix 和 Linux 通常使用 LF 行尾。<br>text&#x3D;auto<br>或者针对特定文件或目录：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">somefile.txt text eol=lf</span><br><span class="line">subdir/ text eol=crlf</span><br></pre></td></tr></table></figure>
<ul>
<li>2.识别文本和二进制文件：</li>
</ul>
<p>Git 默认会尝试将文件识别为文本或二进制文件，但你可以通过 .gitattributes 文件来明确指定。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*.png binary</span><br><span class="line"># 或者*.png -text</span><br></pre></td></tr></table></figure>
<ul>
<li>3.合并策略：</li>
</ul>
<p>对于合并冲突，你可以为特定文件或目录设置不同的合并策略。<br>使用自定义的合并工具</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*.c merge=mytool</span><br></pre></td></tr></table></figure>
<ul>
<li>4.差异算法：</li>
</ul>
<p>你可以为某些文件指定特定的差异算法，以改进 Git 显示的差异。<br>使用 word-diff 算法</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*.doc diff=word</span><br></pre></td></tr></table></figure>
<ul>
<li>5.导出过滤器：</li>
</ul>
<p>当使用 git archive 命令创建归档时，你可以指定过滤器来修改导出的文件内容。</p>
<ul>
<li>6.Smudge&#x2F;Clean 过滤器：</li>
</ul>
<p>你可以设置 smudge 和 clean 过滤器，这些过滤器会在检出和提交时分别应用，用于修改文件内容。例如，你可以使用这些过滤器来加密和解密文件，或者在检出时自动转换文件格式。</p>
<ul>
<li>7.语言识别：</li>
</ul>
<p>通过 .gitattributes 文件,Git 可以更好地识别某些文件的语言，从而改进代码统计和语法高亮等功能。</p>
<p>为了使用 .gitattributes 文件，你需要将其放置在仓库的根目录或任何子目录中。如果文件位于子目录中，它只会影响该子目录及其子目录中的文件。还可以在 .gitattributes 文件中使用模式匹配来指定哪些文件或目录应该应用这些属性。</p>
<p>.gitattributes 文件的更改不会影响已经提交到 Git 仓库的文件内容。这些更改只会影响未来的检出和提交操作。</p>
<h2 id="gitattributes文件示例："><a href="#gitattributes文件示例：" class="headerlink" title="gitattributes文件示例："></a>gitattributes文件示例：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">*           text=auto</span><br><span class="line">*.txt		text</span><br><span class="line">*.jpg		-text</span><br><span class="line">*.vcproj	text eol=crlf</span><br><span class="line">*.sh		text eol=lf</span><br><span class="line">*.py		eol=lf</span><br></pre></td></tr></table></figure>
<p>说明：</p>
<p>第1行，对任何文件，设置text&#x3D;auto，表示文件的行尾自动转换。如果是文本文件，则在文件入Git库时，行尾自动转换为LF。如果已经在入Git库中的文件的行尾为CRLF，则该文件在入Git库时，不再转换为LF。</p>
<p>第2行，对于txt文件，标记为文本文件，并进行行尾规范化。</p>
<p>第3行，对于jpg文件，标记为非文本文件，不进行任何的行尾转换。</p>
<p>第4行，对于vcproj文件，标记为文本文件，在文件入Git库时进行规范化，即行尾为LF。但是在检出到工作目录时，行尾自动转换为CRLF。</p>
<p>第5行，对于sh文件，标记为文本文件，在文件入Git库时进行规范化，即行尾为LF。在检出到工作目录时，行尾也不会转换为CRLF（即保持LF）。</p>
<p>第6行，对于py文件，只针对工作目录中的文件，行尾为LF。</p>
]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>FFMPEG常用命令</title>
    <url>/2024/12/24/linux/ffmpeg/</url>
    <content><![CDATA[<h1 id="FFMPEG常用命令"><a href="#FFMPEG常用命令" class="headerlink" title="FFMPEG常用命令"></a>FFMPEG常用命令</h1><ul>
<li>‌转码‌：将MP4视频转码为AVI格式，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 output.avi</span><br><span class="line">ffmpeg -i input_test.mp4 -vn -acodec copy output_test.flv</span><br><span class="line">ffmpeg -i input_test.aac -vn -acodec copy output_test.mp3</span><br></pre></td></tr></table></figure></li>
<li>‌裁剪‌：从音视频文件中裁剪特定部分，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -ss 00:00:10 -i input.mp4 -t 00:00:20 output.mp4</span><br></pre></td></tr></table></figure>
‌+ 合并‌：将两个MP4视频文件合并为一个文件，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input1.mp4 -i input2.mp4 -c:v copy -c:a copy output.mp4</span><br></pre></td></tr></table></figure></li>
<li>‌音频提取‌：从MP4视频中提取音频并保存为MP3格式，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vn output.mp3</span><br></pre></td></tr></table></figure></li>
<li>‌截图‌：从视频的第5秒截取一张图片并保存为JPG格式，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -ss 00:00:05 -vframes 1 output.jpg</span><br></pre></td></tr></table></figure></li>
<li>‌视频拼接‌：根据文件列表拼接多个视频文件为一个MP4视频，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -f concat -i input.txt -c copy output.mp4</span><br></pre></td></tr></table></figure></li>
<li>‌视频旋转‌：将视频逆时针旋转90度，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf <span class="string">&quot;transpose=1&quot;</span> output.mp4</span><br></pre></td></tr></table></figure></li>
<li>‌调整大小‌：将视频大小调整为1280×720像素，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -vf <span class="string">&quot;scale=w=1280:h=720&quot;</span> output.mp4</span><br></pre></td></tr></table></figure></li>
<li>‌添加水印‌：在视频的右下角添加水印，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -i watermark.png -filter_complex <span class="string">&quot;overlay=W-w-10:H-h-10&quot;</span> output.mp4</span><br></pre></td></tr></table></figure></li>
<li>‌修改帧率‌：将视频的帧率修改为30帧&#x2F;秒，命令为<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i input.mp4 -r 30 output.mp4</span><br></pre></td></tr></table></figure></li>
<li>网络资源下载<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ffmpeg -i https://xxx.xxx.xxxxxx -c copy -f mp3 output_test.mp3</span><br><span class="line">ffmpeg -i https://xxx.com/xx.m3u8 -c copy save.mp4</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><h3 id="基本参数"><a href="#基本参数" class="headerlink" title="基本参数"></a>基本参数</h3><pre><code>-i：指定输入文件。
-f：指定输出格式。
-y：自动覆盖输出文件而不提示。
-t：指定输出的持续时间。
-ss：设置开始时间（用于截取片段）。
-to：设置结束时间（用于截取片段）。
-r：设置帧率。
-s：设置分辨率，例如 -s 1280x720。
-an：禁用音频。
-vn：禁用视频。
</code></pre>
<h3 id="视频参数"><a href="#视频参数" class="headerlink" title="视频参数"></a>视频参数</h3><pre><code>-vcodec：指定视频编码器，例如 -vcodec libx264。
-b:v：设置视频比特率，例如 -b:v 1000k。
-r：设置帧率，例如 -r 30。
-vf：设置视频过滤器，例如 -vf &quot;scale=1280:720&quot;。
-aspect：设置显示比例，例如 -aspect 16:9。
-q:v：设置视频质量（较低的值表示较高的质量）。
</code></pre>
<h3 id="音频参数"><a href="#音频参数" class="headerlink" title="音频参数"></a>音频参数</h3><pre><code>-acodec：指定音频编码器，例如 -acodec aac。
-b:a：设置音频比特率，例如 -b:a 192k。
-ar：设置音频采样率，例如 -ar 44100。
-ac：设置音频声道数，例如 -ac 2。
-q:a：设置音频质量（较低的值表示较高的质量）。
-filter:a：设置音频过滤器，例如 -filter:a &quot;volume=0.5&quot;。
</code></pre>
<h3 id="格式参数"><a href="#格式参数" class="headerlink" title="格式参数"></a>格式参数</h3><pre><code>-f：指定输出格式，例如 -f mp4。
-c：指定编码器，可以用于音频或视频，例如 -c:v libx264 或 -c:a aac。
-c:v 和 -c:a：分别指定视频和音频编码器。
</code></pre>
<h3 id="流操作"><a href="#流操作" class="headerlink" title="流操作"></a>流操作</h3><pre><code>-map：选择流，例如 -map 0:v 选择第一个输入文件的视频流。
-map_channel：选择音频通道。
-codec copy：直接复制流而不进行重新编码。
</code></pre>
<h3 id="其他参数"><a href="#其他参数" class="headerlink" title="其他参数"></a>其他参数</h3><pre><code>-threads：设置使用的线程数。
-preset：设置编码速度与质量的平衡，例如 -preset fast。
-crf：设置恒定质量模式的质量参数（适用于 x264 和 x265 编码器），值范围为 0-51，较低的值表示较高的质量。
-maxrate 和 -bufsize：设置最大比特率和缓冲区大小，用于控制比特率。
</code></pre>
]]></content>
      <categories>
        <category>linux</category>
        <category>ffmpeg</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ffmpeg</tag>
      </tags>
  </entry>
  <entry>
    <title>gcc库</title>
    <url>/2024/12/24/linux/lib/</url>
    <content><![CDATA[<h1 id="GCC库生成"><a href="#GCC库生成" class="headerlink" title="GCC库生成"></a>GCC库生成</h1><h1 id="动态库和静态库编译使用"><a href="#动态库和静态库编译使用" class="headerlink" title="动态库和静态库编译使用"></a>动态库和静态库编译使用</h1><p>main.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;max.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span> *argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>, b = <span class="number">-2</span>, c = <span class="number">100</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;max among 10, -2 and 100 is %d.\n&quot;</span>, max(a, b, c));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>max.c</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2, <span class="type">int</span> n3)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> max_num = n1;</span><br><span class="line">    max_num = max_num &lt; n2? n2: max_num;</span><br><span class="line">    max_num = max_num &lt; n3? n3: max_num;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">&quot;\nlib test makefile add path\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> max_num;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>max.h</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __MAX_H__</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __MAX_H__</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">max</span><span class="params">(<span class="type">int</span> n1, <span class="type">int</span> n2, <span class="type">int</span> n3)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br></pre></td></tr></table></figure>
<p>makefile</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="meta"><span class="keyword">.PHONY</span>: build test clean</span></span><br><span class="line"></span><br><span class="line"><span class="section">max.o: max.c</span></span><br><span class="line">	gcc -c -fPIC <span class="variable">$&lt;</span></span><br><span class="line"><span class="comment">#动态库</span></span><br><span class="line"><span class="section">build1: max.o</span></span><br><span class="line">	gcc -o libmax.so -shared max.o</span><br><span class="line"><span class="section">test1: main.c build1</span></span><br><span class="line">	gcc -o dynamic <span class="variable">$&lt;</span> -L./ -Wl,-rpath=./ -lmax</span><br><span class="line"><span class="comment">#静态库</span></span><br><span class="line"><span class="section">build2:max.o</span></span><br><span class="line">	ar -rcs libmaxs.a max.o</span><br><span class="line"><span class="section">test2: main.c build2</span></span><br><span class="line">	gcc -o static <span class="variable">$&lt;</span> -L ./ -lmaxs</span><br><span class="line"></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	rm -f *.o *.so *.a</span><br></pre></td></tr></table></figure>


<h3 id="gcc常用编译选项："><a href="#gcc常用编译选项：" class="headerlink" title="gcc常用编译选项："></a><code>gcc常用编译选项：</code></h3><table>
<thead>
<tr>
<th>选项</th>
<th>含义</th>
</tr>
</thead>
<tbody><tr>
<td>-static</td>
<td>链接静态库，禁止使用动态库</td>
</tr>
<tr>
<td>-shared</td>
<td>进行动态库编译，链接动态库</td>
</tr>
<tr>
<td>-Ldir</td>
<td>在库的搜索路径中增加dir目录</td>
</tr>
<tr>
<td>-lname</td>
<td>链接静态库(libname.a)或动态库(libname.so)的库文件</td>
</tr>
<tr>
<td>-fPIC(或fpic)</td>
<td>生成使用相对地址无关的目标代码</td>
</tr>
<tr>
<td>-Wl,-rpath&#x3D;dir</td>
<td>指定动态库文件位置</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
        <category>gcc</category>
        <category>lib</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>makefile</tag>
        <tag>gcc</tag>
      </tags>
  </entry>
  <entry>
    <title>lvgl仿真</title>
    <url>/2024/12/24/linux/lvgl_linux/</url>
    <content><![CDATA[<h1 id="lvgl-linux"><a href="#lvgl-linux" class="headerlink" title="lvgl linux"></a>lvgl linux</h1><h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><h3 id="报错处修改"><a href="#报错处修改" class="headerlink" title="报错处修改"></a>报错处修改</h3><ul>
<li><p>makefile</p>
</li>
<li><p>lv_conf.h</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define LV_USE_ASSERT_MEM_INTEGRITY 0</span><br><span class="line">#define LV_USE_LOTTIE     0</span><br><span class="line">#define LV_USE_VECTOR_GRAPHIC  0</span><br></pre></td></tr></table></figure></li>
</ul>
<h3 id="添加触摸"><a href="#添加触摸" class="headerlink" title="添加触摸"></a>添加触摸</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#define LV_USE_EVDEV    1</span><br></pre></td></tr></table></figure>

<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lv_indev_t *touch = lv_evdev_create(LV_INDEV_TYPE_POINTER, &quot;/dev/input/event1&quot;);</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>lvgl</tag>
      </tags>
  </entry>
  <entry>
    <title>git命令</title>
    <url>/2222/12/22/linux/git/</url>
    <content><![CDATA[<h1 id="git命令"><a href="#git命令" class="headerlink" title="git命令"></a>git命令</h1><h2 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 在当前目录新建一个Git代码库</span></span><br><span class="line">$ git init</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个目录，将其初始化为Git代码库</span></span><br><span class="line">$ git init [project-name]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 远程仓库</span></span><br><span class="line">$ git init --bare &lt;directory&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载一个项目和它的整个代码历史</span></span><br><span class="line">$ git <span class="built_in">clone</span> [url]</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示当前的Git配置</span></span><br><span class="line">$ git config --list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 编辑Git配置文件</span></span><br><span class="line">$ git config -e [--global]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出、设置基本的全局变量</span></span><br><span class="line">$ git config --global user.email</span><br><span class="line">$ git config --global user.name</span><br><span class="line"></span><br><span class="line">$ git config --global user.email <span class="string">&quot;MyEmail@gmail.com&quot;</span></span><br><span class="line">$ git config --global user.name <span class="string">&quot;My Name&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 定义当前用户所有提交使用的作者邮箱。</span></span><br><span class="line">$ git config --global <span class="built_in">alias</span>.&lt;alias-name&gt; &lt;git-command&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 为Git命令创建一个快捷方式（别名）。</span></span><br><span class="line">$ git config --system core.editor &lt;editor&gt;</span><br></pre></td></tr></table></figure>
<h2 id="增删文件"><a href="#增删文件" class="headerlink" title="增删文件"></a>增删文件</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 添加指定文件到暂存区</span></span><br><span class="line">$ git add [file1] [file2] ...</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加指定目录到暂存区，包括子目录</span></span><br><span class="line">$ git add [<span class="built_in">dir</span>]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加当前目录的所有文件到暂存区</span></span><br><span class="line">$ git add .</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 添加每个变化前，都会要求确认</span></span><br><span class="line"><span class="comment"># 对于同一个文件的多处变化，可以实现分次提交</span></span><br><span class="line">$ git add -p</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除工作区文件，并且将这次删除放入暂存区</span></span><br><span class="line">$ git <span class="built_in">rm</span> [file1] [file2] ...</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 停止追踪指定文件，但该文件会保留在工作区</span></span><br><span class="line">$ git <span class="built_in">rm</span> --cached [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 改名文件，并且将这个改名放入暂存区</span></span><br><span class="line">$ git <span class="built_in">mv</span> [file-original] [file-renamed]</span><br></pre></td></tr></table></figure>
<h2 id="提交"><a href="#提交" class="headerlink" title="提交"></a>提交</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 提交暂存区到仓库区</span></span><br><span class="line">$ git commit -m [message]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交暂存区的指定文件到仓库区</span></span><br><span class="line">$ git commit [file1] [file2] ... -m [message]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交工作区自上次commit之后的变化，直接到仓库区</span></span><br><span class="line">$ git commit -a</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交时显示所有diff信息</span></span><br><span class="line">$ git commit -v</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 使用一次新的commit，替代上一次提交</span></span><br><span class="line"><span class="comment"># 如果代码没有任何新变化，则用来改写上一次commit的提交信息</span></span><br><span class="line">$ git commit --amend -m [message]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重做上一次commit，并包括指定文件的新变化</span></span><br><span class="line">$ git commit --amend [file1] [file2] ...</span><br></pre></td></tr></table></figure>
<h2 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有本地分支</span></span><br><span class="line">$ git branch</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出所有远程分支</span></span><br><span class="line">$ git branch -r</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 列出所有本地分支和远程分支</span></span><br><span class="line">$ git branch -a</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，但依然停留在当前分支</span></span><br><span class="line">$ git branch [branch-name]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，并切换到该分支</span></span><br><span class="line">$ git checkout -b [branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，指向指定commit</span></span><br><span class="line">$ git branch [branch] [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，与指定的远程分支建立追踪关系</span></span><br><span class="line">$ git branch --track [branch] [remote-branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 切换到指定分支，并更新工作区</span></span><br><span class="line">$ git checkout [branch-name]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 切换到上一个分支</span></span><br><span class="line">$ git checkout -</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 建立追踪关系，在现有分支与指定的远程分支之间</span></span><br><span class="line">$ git branch --set-upstream [branch] [remote-branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 合并指定分支到当前分支</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 选择一个commit，合并进当前分支</span></span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除分支</span></span><br><span class="line">$ git branch -d [branch-name]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除远程分支</span></span><br><span class="line">$ git push origin --delete [branch-name]</span><br><span class="line">$ git branch -dr [remote/branch]</span><br></pre></td></tr></table></figure>
<h2 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 列出所有tag</span></span><br><span class="line">$ git tag</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个tag在当前commit</span></span><br><span class="line">$ git tag [tag]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个tag在指定commit</span></span><br><span class="line">$ git tag [tag] [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除本地tag</span></span><br><span class="line">$ git tag -d [tag]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 删除远程tag</span></span><br><span class="line">$ git push origin :refs/tags/[tagName]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 查看tag信息</span></span><br><span class="line">$ git show [tag]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交指定tag</span></span><br><span class="line">$ git push [remote] [tag]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 提交所有tag</span></span><br><span class="line">$ git push [remote] --tags</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个分支，指向某个tag</span></span><br><span class="line">$ git checkout -b [branch] [tag]</span><br></pre></td></tr></table></figure>

<h2 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示有变更的文件</span></span><br><span class="line">$ git status</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示当前分支的版本历史</span></span><br><span class="line">$ git <span class="built_in">log</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示commit历史，以及每次commit发生变更的文件</span></span><br><span class="line">$ git <span class="built_in">log</span> --<span class="built_in">stat</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 搜索提交历史，根据关键词</span></span><br><span class="line">$ git <span class="built_in">log</span> -S [keyword]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，每个commit占据一行</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --pretty=format:%s</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个commit之后的所有变动，其&quot;提交说明&quot;必须符合搜索条件</span></span><br><span class="line">$ git <span class="built_in">log</span> [tag] HEAD --grep feature</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某个文件的版本历史，包括文件改名</span></span><br><span class="line">$ git <span class="built_in">log</span> --follow [file]</span><br><span class="line">$ git whatchanged [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示指定文件相关的每一次diff</span></span><br><span class="line">$ git <span class="built_in">log</span> -p [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示过去5次提交</span></span><br><span class="line">$ git <span class="built_in">log</span> -5 --pretty --oneline</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示所有提交过的用户，按提交次数排序</span></span><br><span class="line">$ git shortlog -sn</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示指定文件是什么人在什么时间修改过</span></span><br><span class="line">$ git blame [file]</span><br></pre></td></tr></table></figure>
<h2 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 显示暂存区和工作区的差异</span></span><br><span class="line">$ git diff</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示暂存区和上一个commit的差异</span></span><br><span class="line">$ git diff --cached [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示工作区与当前分支最新commit之间的差异</span></span><br><span class="line">$ git diff HEAD</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示两次提交之间的差异</span></span><br><span class="line">$ git diff [first-branch]...[second-branch]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示今天你写了多少行代码</span></span><br><span class="line">$ git diff --shortstat <span class="string">&quot;@&#123;0 day ago&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交的元数据和内容变化</span></span><br><span class="line">$ git show [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交发生变化的文件</span></span><br><span class="line">$ git show --name-only [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示某次提交时，某个文件的内容</span></span><br><span class="line">$ git show [commit]:[filename]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 显示当前分支的最近几次提交</span></span><br><span class="line">$ git reflog</span><br></pre></td></tr></table></figure>

<h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 恢复暂存区的指定文件到工作区</span></span><br><span class="line">$ git checkout [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 恢复某个commit的指定文件到暂存区和工作区</span></span><br><span class="line">$ git checkout [commit] [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 恢复暂存区的所有文件到工作区</span></span><br><span class="line">$ git checkout .</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置暂存区的指定文件，与上一次commit保持一致，但工作区不变</span></span><br><span class="line">$ git reset [file]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置暂存区与工作区，与上一次commit保持一致</span></span><br><span class="line">$ git reset --hard</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前分支的指针为指定commit，同时重置暂存区，但工作区不变</span></span><br><span class="line">$ git reset [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前分支的HEAD为指定commit，同时重置暂存区和工作区，与指定commit一致</span></span><br><span class="line">$ git reset --hard [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 重置当前HEAD为指定commit，但保持暂存区和工作区不变</span></span><br><span class="line">$ git reset --keep [commit]</span><br><span class="line"> </span><br><span class="line"><span class="comment"># 新建一个commit，用来撤销指定commit</span></span><br><span class="line"><span class="comment"># 后者的所有变化都将被前者抵消，并且应用到当前分支</span></span><br><span class="line">$ git revert [commit]</span><br></pre></td></tr></table></figure>
<h2 id="暂存"><a href="#暂存" class="headerlink" title="暂存"></a>暂存</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 暂存</span></span><br><span class="line">$ git stash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 暂存列表</span></span><br><span class="line">$ git stash list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 移恢复具体某一次的版本，如果不指定stash_id，则默认恢复最新的存储进度</span></span><br><span class="line">$ git stash pop</span><br><span class="line">$ git stash apply stash@&#123;1&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除一个存储的进度</span></span><br><span class="line">$ git stash drop stash@&#123;5&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 清除所有的存储进度</span></span><br><span class="line">$ git stash clear</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看堆栈中最新保存的stash和当前目录的差异</span></span><br><span class="line">$ git stash show</span><br><span class="line"></span><br><span class="line"><span class="comment"># 从最新的stash创建分支</span></span><br><span class="line">$ git stash branch</span><br></pre></td></tr></table></figure>
<h2 id="同步和推送"><a href="#同步和推送" class="headerlink" title="同步和推送"></a>同步和推送</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 下载远程仓库的所有变动</span></span><br><span class="line">$ git fetch [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示所有远程仓库</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 显示某个远程仓库的信息</span></span><br><span class="line">$ git remote show [remote]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增加一个新的远程仓库，并命名</span></span><br><span class="line">$ git remote add [shortname] [url]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看远程服务器地址和仓库名称</span></span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加远程仓库地址</span></span><br><span class="line">$ git remote add origin git@ github:xxx/xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置远程仓库地址(用于修改远程仓库地址)</span></span><br><span class="line">$ git remote set-url origin git@ github.com:xxx/xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除远程仓库</span></span><br><span class="line">$ git remote <span class="built_in">rm</span> &lt;repository&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 上传本地指定分支到远程仓库</span></span><br><span class="line"><span class="comment"># 把本地的分支更新到远端origin的master分支上</span></span><br><span class="line"><span class="comment"># git push &lt;远端&gt; &lt;分支&gt;</span></span><br><span class="line"><span class="comment"># git push 相当于 git push origin master</span></span><br><span class="line">$ git push [remote] [branch]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 强行推送当前分支到远程仓库，即使有冲突</span></span><br><span class="line">$ git push [remote] --force</span><br><span class="line"></span><br><span class="line"><span class="comment"># 推送所有分支到远程仓库</span></span><br><span class="line">$ git push [remote] --all</span><br></pre></td></tr></table></figure>
<h2 id="导出"><a href="#导出" class="headerlink" title="导出"></a>导出</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 打包tag sha 分支等</span></span><br><span class="line">$ git archive --format=zip --output=output.zip HEAD</span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包排除log文件</span></span><br><span class="line">$ git archive -o archive.zip HEAD --exclude=<span class="string">&#x27;*.log&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打包包含路径</span></span><br><span class="line">$ git archive --format=zip --prefix=myfolder/ -o a.zip HEAD:myfolder</span><br></pre></td></tr></table></figure>
<h2 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">$ git grep <span class="string">&#x27;http&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="合并"><a href="#合并" class="headerlink" title="合并"></a>合并</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 合并commit</span></span><br><span class="line">$ git cherry-pick [commit]</span><br><span class="line"><span class="comment"># 合并分支</span></span><br><span class="line">$ git merge [branch]</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="子仓库"><a href="#子仓库" class="headerlink" title="子仓库"></a>子仓库</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 初始化</span></span><br><span class="line">git submodule init</span><br><span class="line"><span class="comment"># 添加</span></span><br><span class="line">git submodule add &lt;repository-url&gt; &lt;path-to-submodule&gt;</span><br><span class="line"><span class="comment"># 更新</span></span><br><span class="line">git submodule update --remote</span><br><span class="line"></span><br><span class="line"><span class="comment"># 克隆</span></span><br><span class="line">git submodule update --init --recursive</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">git submodule deinit &lt;path-to-submodule&gt;</span><br><span class="line">git <span class="built_in">rm</span> --cached &lt;path-to-submodule&gt;</span><br><span class="line"><span class="built_in">rm</span> -rf &lt;path-to-submodule&gt;</span><br><span class="line">git commit -m <span class="string">&quot;Removed submodule&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 父项目拉取时同时更新子模块</span></span><br><span class="line">git pull --recurse-submodules []</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>git</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>git</tag>
      </tags>
  </entry>
  <entry>
    <title>树莓派</title>
    <url>/2024/12/24/linux/raspberrypi/</url>
    <content><![CDATA[<h2 id="开机"><a href="#开机" class="headerlink" title="开机"></a>开机</h2><ul>
<li>格式化SD卡</li>
<li>镜像烧录（如果失败需要覆盖格式化SD卡）</li>
<li>boot文件夹下添加ssh空文件</li>
<li>ssh连接 ssh pi@ip</li>
<li>远程桌面sodu apt-get install xrdp</li>
</ul>
<h2 id="wifi"><a href="#wifi" class="headerlink" title="wifi"></a>wifi</h2><ol>
<li>编辑 wpa_supplicant.conf<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo nano /etc/wpa_supplicant/wpa_supplicant.conf</span><br></pre></td></tr></table></figure></li>
<li>添加以下内容（替换为你的 Wi-Fi 信息）：<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">network=&#123; ssid=&quot;你的Wi-Fi名称&quot; psk=&quot;你的Wi-Fi密码&quot; key_mgmt=WPA-PSK &#125;</span><br></pre></td></tr></table></figure></li>
<li>重启网络服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo wpa_cli -i wlan0 reconfigure</span><br></pre></td></tr></table></figure></li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 修改ip</span><br><span class="line">sudo ifconfig wlan0 192.168.50.16</span><br><span class="line"># 重启网络服务的命令可能因系统而异。在某些系统上，可以使用以下命令来重启dhcpcd服务</span><br><span class="line">sudo systemctl restart dhcpcd</span><br></pre></td></tr></table></figure>

<h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><p>输入以下命令查看可用时区列表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timedatectl list-timezones</span><br><span class="line">timedatectl list-timezones | grep Asia</span><br></pre></td></tr></table></figure>
<p>找到您想要设置的时区，然后使用以下命令进行设置，将Europe&#x2F;Berlin替换为您的时区：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo timedatectl set-timezone Asia/Shanghai</span><br></pre></td></tr></table></figure>
<p>设置完成后，您可以使用以下命令确认时区已经更改：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timedatectl</span><br></pre></td></tr></table></figure>

<h2 id="寻找"><a href="#寻找" class="headerlink" title="寻找"></a>寻找</h2><p>主机名<code>raspberrypi</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping raspberrypi</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>linux</category>
        <category>树莓派</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>树莓派</tag>
      </tags>
  </entry>
  <entry>
    <title>RTMP</title>
    <url>/2024/12/24/linux/rtmp/</url>
    <content><![CDATA[<h1 id="Nginx-RTMP推流"><a href="#Nginx-RTMP推流" class="headerlink" title="Nginx RTMP推流"></a>Nginx RTMP推流</h1><p>编译选版本<code>nginx-1.20.1</code>,<code>rtmp-module v1.2.0</code></p>
<ul>
<li>下载<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget http://nginx.org/download/nginx-1.20.1.tar.gz</span><br><span class="line">tar -zxvf nginx-1.20.1.tar.gz</span><br><span class="line">git clone https://github.com/arut/nginx-rtmp-module.git</span><br></pre></td></tr></table></figure></li>
<li>编译<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure --add-module=../nginx-rtmp-module</span><br></pre></td></tr></table></figure></li>
<li>配置<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rtmp &#123;</span><br><span class="line">    server &#123;</span><br><span class="line">        listen 1935; # 默认的RTMP监听端口</span><br><span class="line">        chunk_size 4096;</span><br><span class="line"> </span><br><span class="line">        application live &#123;</span><br><span class="line">            live on;</span><br><span class="line">            record off;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>推流<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffmpeg -re -i 123.mp4 -vcodec copy -acodec copy -f flv rtmp://192.168.1.49:1935/live</span><br><span class="line"># 简易指令</span><br><span class="line">ffmpeg -i 123.mp4 -f flv rtmp://192.168.1.49:1935/live</span><br><span class="line"># 推流摄像头</span><br><span class="line">ffmpeg -f v4l2 -video_size 320x240 -framerate 15 -i /dev/video2 -q 10 -f flv rtmp://127.0.0.1/live/mytest</span><br></pre></td></tr></table></figure>
-re 参数控制读取 AVpacket 的速度，按照帧率速度读取文件 AVpacket。如果有多个流，以最慢的帧率为准。</li>
</ul>
<p>-vcodec copy 和 -acodec copy 用于指示 FFmpeg 在转换视频文件时不应重新编码视频和音频流，而是直接复制这些流。这可以提高转换速度，并保持原始质量。</p>
<ul>
<li>拉流<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ffplay rtmp://192.168.1.49:1935/live</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="web服务器"><a href="#web服务器" class="headerlink" title="web服务器"></a>web服务器</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 设置http服务器</span><br><span class="line">http &#123;</span><br><span class="line">    # 设置日志格式</span><br><span class="line">    access_log  /var/log/nginx/access.log;</span><br><span class="line">    error_log  /var/log/nginx/error.log;</span><br><span class="line"> </span><br><span class="line">    # 设置服务器名和文件根目录</span><br><span class="line">    server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        # 服务器名，可不要</span><br><span class="line">        server_name  localhost;</span><br><span class="line"> </span><br><span class="line">        # 定义请求的根目录</span><br><span class="line">        location / &#123;</span><br><span class="line">            root   /usr/share/nginx/html;</span><br><span class="line">            index  index.html index.htm;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        # 处理404页面</span><br><span class="line">        error_page  404              /404.html;</span><br><span class="line">        location = /40x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        # 处理500页面</span><br><span class="line">        error_page   500 502 503 504  /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>linux</category>
        <category>nginx</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>ffmpeg</tag>
        <tag>nginx</tag>
      </tags>
  </entry>
  <entry>
    <title>sqlite</title>
    <url>/2024/12/24/linux/sqlite/</url>
    <content><![CDATA[<h1 id="Sqlite"><a href="#Sqlite" class="headerlink" title="Sqlite"></a>Sqlite</h1><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://www.sqlite.org/download.html">SQLite3</a></p>
<h2 id="C-C-接口-API"><a href="#C-C-接口-API" class="headerlink" title="C&#x2F;C++ 接口 API"></a>C&#x2F;C++ 接口 API</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite3_open(const char *filename, sqlite3 **ppDb)</span><br></pre></td></tr></table></figure>
<p>该例程打开一个指向 SQLite 数据库文件的连接，返回一个用于其他 SQLite 程序的数据库连接对象。如果 filename 参数是 NULL 或 ‘:memory:’，那么 sqlite3_open() 将会在 RAM 中创建一个内存数据库，这只会在 session 的有效时间内持续。如果文件名 filename 不为 NULL，那么 sqlite3_open() 将使用这个参数值尝试打开数据库文件。如果该名称的文件不存在，sqlite3_open() 将创建一个新的命名为该名称的数据库文件并打开。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite3_exec(sqlite3*, const char *sql, sqlite_callback, void *data, char **errmsg)</span><br></pre></td></tr></table></figure>

<p>该例程提供了一个执行 SQL 命令的快捷方式，SQL 命令由 sql 参数提供，可以由多个 SQL 命令组成。<br>在这里，第一个参数 sqlite3 是打开的数据库对象，sqlite_callback 是一个回调，data 作为其第一个参数，errmsg 将被返回用来获取程序生成的任何错误。<br>sqlite3_exec() 程序解析并执行由 sql 参数所给的每个命令，直到字符串结束或者遇到错误为止。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite3_close(sqlite3*)</span><br></pre></td></tr></table></figure>

<p>该例程关闭之前调用 sqlite3_open() 打开的数据库连接。所有与连接相关的语句都应在连接关闭之前完成。<br>如果还有查询没有完成，sqlite3_close() 将返回 SQLITE_BUSY 禁止关闭的错误消息。</p>
<p>连接数据库<br>下面的 C 代码段显示了如何连接到一个现有的数据库。如果数据库不存在，那么它就会被创建，最后将返回一个数据库对象。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> rc;</span><br><span class="line"></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line"></span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>现在，让我们来编译和运行上面的程序，在当前目录中创建我们的数据库 test.db。您可以根据需要改变路径。</p>
<pre><code>$gcc test.c -l sqlite3
$./a.out
Opened database successfully
</code></pre>
<p>如果要使用 C++ 源代码，可以按照下列所示编译代码：</p>
<pre><code>$g++ test.c -l sqlite3
</code></pre>
<p>在这里，把我们的程序链接上 sqlite3 库，以便向 C 程序提供必要的函数。这将在您的目录下创建一个数据库文件 test.db，您将得到如下结果：</p>
<pre><code>-rwxr-xr-x. 1 root root 7383 May  8 02:06 a.out
-rw-r--r--. 1 root root  323 May  8 02:05 test.c
-rw-r--r--. 1 root root    0 May  8 02:06 test.db
</code></pre>
<h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><p>下面的 C 代码段将用于在先前创建的数据库中创建一个表：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">callback</span><span class="params">(<span class="type">void</span> *NotUsed, <span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="type">char</span> **azColName)</span>&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span>  rc;</span><br><span class="line">   <span class="type">char</span> *sql;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;CREATE TABLE COMPANY(&quot;</span>  \</span><br><span class="line">         <span class="string">&quot;ID INT PRIMARY KEY     NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;NAME           TEXT    NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;AGE            INT     NOT NULL,&quot;</span> \</span><br><span class="line">         <span class="string">&quot;ADDRESS        CHAR(50),&quot;</span> \</span><br><span class="line">         <span class="string">&quot;SALARY         REAL );&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, <span class="number">0</span>, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Table created successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述程序编译和执行时，它会在 test.db 文件中创建 COMPANY 表，最终文件列表如下所示：</p>
<pre><code>-rwxr-xr-x. 1 root root 9567 May  8 02:31 a.out
-rw-r--r--. 1 root root 1207 May  8 02:31 test.c
-rw-r--r--. 1 root root 3072 May  8 02:31 test.db
</code></pre>
<h3 id="INSERT-操作"><a href="#INSERT-操作" class="headerlink" title="INSERT 操作"></a>INSERT 操作</h3><p>下面的 C 代码段显示了如何在上面创建的 COMPANY 表中创建记录：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">callback</span><span class="params">(<span class="type">void</span> *NotUsed, <span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="type">char</span> **azColName)</span>&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> rc;</span><br><span class="line">   <span class="type">char</span> *sql;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) &quot;</span>  \</span><br><span class="line">         <span class="string">&quot;VALUES (1, &#x27;Paul&#x27;, 32, &#x27;California&#x27;, 20000.00 ); &quot;</span> \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY) &quot;</span>  \</span><br><span class="line">         <span class="string">&quot;VALUES (2, &#x27;Allen&#x27;, 25, &#x27;Texas&#x27;, 15000.00 ); &quot;</span>     \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)&quot;</span> \</span><br><span class="line">         <span class="string">&quot;VALUES (3, &#x27;Teddy&#x27;, 23, &#x27;Norway&#x27;, 20000.00 );&quot;</span> \</span><br><span class="line">         <span class="string">&quot;INSERT INTO COMPANY (ID,NAME,AGE,ADDRESS,SALARY)&quot;</span> \</span><br><span class="line">         <span class="string">&quot;VALUES (4, &#x27;Mark&#x27;, 25, &#x27;Rich-Mond &#x27;, 65000.00 );&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, <span class="number">0</span>, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Records created successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述程序编译和执行时，它会在 COMPANY 表中创建给定记录，并会显示以下两行：</p>
<pre><code>Opened database successfully
Records created successfully
</code></pre>
<h3 id="SELECT-操作"><a href="#SELECT-操作" class="headerlink" title="SELECT 操作"></a>SELECT 操作</h3><p>在我们开始讲解获取记录的实例之前，让我们先了解下回调函数的一些细节，这将在我们的实例使用到。这个回调提供了一个从 SELECT 语句获得结果的方式。它声明如下：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="title function_">int</span> <span class="params">(*sqlite3_callback)</span><span class="params">(</span></span><br><span class="line"><span class="params"><span class="type">void</span>*,    <span class="comment">/* Data provided in the 4th argument of sqlite3_exec() */</span></span></span><br><span class="line"><span class="params"><span class="type">int</span>,      <span class="comment">/* The number of columns in row */</span></span></span><br><span class="line"><span class="params"><span class="type">char</span>**,   <span class="comment">/* An array of strings representing fields in the row */</span></span></span><br><span class="line"><span class="params"><span class="type">char</span>**    <span class="comment">/* An array of strings representing column names */</span></span></span><br><span class="line"><span class="params">)</span>;</span><br></pre></td></tr></table></figure>
<p>如果上面的回调在 sqlite_exec() 程序中作为第三个参数，那么 SQLite 将为 SQL 参数内执行的每个 SELECT 语句中处理的每个记录调用这个回调函数。</p>
<p>下面的 C 代码段显示了如何从前面创建的 COMPANY 表中获取并显示记录：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">callback</span><span class="params">(<span class="type">void</span> *data, <span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="type">char</span> **azColName)</span>&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="type">const</span> <span class="type">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> rc;</span><br><span class="line">   <span class="type">char</span> *sql;</span><br><span class="line">   <span class="type">const</span> <span class="type">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="type">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述程序编译和执行时，它会产生以下结果：</p>
<pre><code>Opened database successfully
Callback function called: ID = 1
NAME = Paul
AGE = 32
ADDRESS = California
SALARY = 20000.0

Callback function called: ID = 2
NAME = Allen
AGE = 25
ADDRESS = Texas
SALARY = 15000.0

Callback function called: ID = 3
NAME = Teddy
AGE = 23
ADDRESS = Norway
SALARY = 20000.0

Callback function called: ID = 4
NAME = Mark
AGE = 25
ADDRESS = Rich-Mond
SALARY = 65000.0

Operation done successfully
</code></pre>
<h3 id="UPDATE-操作"><a href="#UPDATE-操作" class="headerlink" title="UPDATE 操作"></a>UPDATE 操作</h3><p>下面的 C 代码段显示了如何使用 UPDATE 语句来更新任何记录，然后从 COMPANY 表中获取并显示更新的记录：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">callback</span><span class="params">(<span class="type">void</span> *data, <span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="type">char</span> **azColName)</span>&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="type">const</span> <span class="type">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> rc;</span><br><span class="line">   <span class="type">char</span> *sql;</span><br><span class="line">   <span class="type">const</span> <span class="type">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create merged SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;UPDATE COMPANY set SALARY = 25000.00 where ID=1; &quot;</span> \</span><br><span class="line">         <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="type">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述程序编译和执行时，它会产生以下结果：</p>
<pre><code>Opened database successfully
Callback function called: ID = 1
NAME = Paul
AGE = 32
ADDRESS = California
SALARY = 25000.0

Callback function called: ID = 2
NAME = Allen
AGE = 25
ADDRESS = Texas
SALARY = 15000.0

Callback function called: ID = 3
NAME = Teddy
AGE = 23
ADDRESS = Norway
SALARY = 20000.0

Callback function called: ID = 4
NAME = Mark
AGE = 25
ADDRESS = Rich-Mond
SALARY = 65000.0

Operation done successfully
</code></pre>
<h3 id="DELETE-操作"><a href="#DELETE-操作" class="headerlink" title="DELETE 操作"></a>DELETE 操作</h3><p>下面的 C 代码段显示了如何使用 DELETE 语句删除任何记录，然后从 COMPANY 表中获取并显示剩余的记录：</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sqlite3.h&gt;</span> </span></span><br><span class="line"></span><br><span class="line"><span class="type">static</span> <span class="type">int</span> <span class="title function_">callback</span><span class="params">(<span class="type">void</span> *data, <span class="type">int</span> argc, <span class="type">char</span> **argv, <span class="type">char</span> **azColName)</span>&#123;</span><br><span class="line">   <span class="type">int</span> i;</span><br><span class="line">   <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;%s: &quot;</span>, (<span class="type">const</span> <span class="type">char</span>*)data);</span><br><span class="line">   <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;argc; i++)&#123;</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%s = %s\n&quot;</span>, azColName[i], argv[i] ? argv[i] : <span class="string">&quot;NULL&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">char</span>* argv[])</span></span><br><span class="line">&#123;</span><br><span class="line">   sqlite3 *db;</span><br><span class="line">   <span class="type">char</span> *zErrMsg = <span class="number">0</span>;</span><br><span class="line">   <span class="type">int</span> rc;</span><br><span class="line">   <span class="type">char</span> *sql;</span><br><span class="line">   <span class="type">const</span> <span class="type">char</span>* data = <span class="string">&quot;Callback function called&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Open database */</span></span><br><span class="line">   rc = sqlite3_open(<span class="string">&quot;test.db&quot;</span>, &amp;db);</span><br><span class="line">   <span class="keyword">if</span>( rc )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Can&#x27;t open database: %s\n&quot;</span>, sqlite3_errmsg(db));</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;Opened database successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Create merged SQL statement */</span></span><br><span class="line">   sql = <span class="string">&quot;DELETE from COMPANY where ID=2; &quot;</span> \</span><br><span class="line">         <span class="string">&quot;SELECT * from COMPANY&quot;</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/* Execute SQL statement */</span></span><br><span class="line">   rc = sqlite3_exec(db, sql, callback, (<span class="type">void</span>*)data, &amp;zErrMsg);</span><br><span class="line">   <span class="keyword">if</span>( rc != SQLITE_OK )&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">&quot;SQL error: %s\n&quot;</span>, zErrMsg);</span><br><span class="line">      sqlite3_free(zErrMsg);</span><br><span class="line">   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">      <span class="built_in">fprintf</span>(<span class="built_in">stdout</span>, <span class="string">&quot;Operation done successfully\n&quot;</span>);</span><br><span class="line">   &#125;</span><br><span class="line">   sqlite3_close(db);</span><br><span class="line">   <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>上述程序编译和执行时，它会产生以下结果：</p>
<pre><code>Opened database successfully
Callback function called: ID = 1
NAME = Paul
AGE = 32
ADDRESS = California
SALARY = 20000.0

Callback function called: ID = 3
NAME = Teddy
AGE = 23
ADDRESS = Norway
SALARY = 20000.0

Callback function called: ID = 4
NAME = Mark
AGE = 25
ADDRESS = Rich-Mond
SALARY = 65000.0

Operation done successfully
</code></pre>
<p>使用sqlite3指令<code>SELECT * FROM COMPANY;</code>可以查看数据列表</p>
<h3 id="Select-语句"><a href="#Select-语句" class="headerlink" title="Select 语句"></a>Select 语句</h3><p>SQLite 的 SELECT 语句用于从 SQLite 数据库表中获取数据，以结果表的形式返回数据。这些结果表也被称为结果集。</p>
<p>语法<br>SQLite 的 SELECT 语句的基本语法如下：</p>
<p><code>SELECT column1, column2, columnN FROM table_name;</code></p>
<p><code>SELECT * FROM table_name;</code></p>
<h3 id="Schema-信息"><a href="#Schema-信息" class="headerlink" title="Schema 信息"></a>Schema 信息</h3><p>因为所有的点命令只在 SQLite 提示符中可用，所以当您进行带有 SQLite 的编程时，您要使用下面的带有 sqlite_master 表的 SELECT 语句来列出所有在数据库中创建的表：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite&gt; SELECT tbl_name FROM sqlite_master WHERE type = &#x27;table&#x27;;</span><br></pre></td></tr></table></figure>
<p>您可以列出关于 COMPANY 表的完整信息，如下所示：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite&gt; SELECT sql FROM sqlite_master WHERE type = &#x27;table&#x27; AND tbl_name = &#x27;COMPANY&#x27;;</span><br></pre></td></tr></table></figure>
<h2 id="Like-子句"><a href="#Like-子句" class="headerlink" title="Like 子句"></a>Like 子句</h2><p>SQLite 的 LIKE 运算符是用来匹配通配符指定模式的文本值。如果搜索表达式与模式表达式匹配，LIKE 运算符将返回真（true），也就是 1。这里有两个通配符与 LIKE 运算符一起使用：</p>
<p>百分号 （%）</p>
<p>下划线 （_）</p>
<p>百分号（%）代表零个、一个或多个数字或字符。下划线（_）代表一个单一的数字或字符。这些符号可以被组合使用。</p>
<h2 id="Glob-子句"><a href="#Glob-子句" class="headerlink" title="Glob 子句"></a>Glob 子句</h2><p>SQLite 的 GLOB 运算符是用来匹配通配符指定模式的文本值。如果搜索表达式与模式表达式匹配，GLOB 运算符将返回真（true），也就是 1。与 LIKE 运算符不同的是，GLOB 是大小写敏感的，对于下面的通配符，它遵循 UNIX 的语法。</p>
<p>星号 （*）</p>
<p>问号 （?）</p>
<p>星号（*）代表零个、一个或多个数字或字符。问号（?）代表一个单一的数字或字符。这些符号可以被组合使用。</p>
<h2 id="Where-子句"><a href="#Where-子句" class="headerlink" title="Where 子句"></a>Where 子句</h2><p>SQLite的 WHERE 子句用于指定从一个表或多个表中获取数据的条件。</p>
<p>如果满足给定的条件，即为真（true）时，则从表中返回特定的值。您可以使用 WHERE 子句来过滤记录，只获取需要的记录。</p>
<p>WHERE 子句不仅可用在 SELECT 语句中，它也可用在 UPDATE、DELETE 语句中，等等</p>
<h2 id="Update-语句"><a href="#Update-语句" class="headerlink" title="Update 语句"></a>Update 语句</h2><p>SQLite 的 UPDATE 查询用于修改表中已有的记录。可以使用带有 WHERE 子句的 UPDATE 查询来更新选定行，否则所有的行都会被更新。</p>
<h3 id="Distinct-关键字"><a href="#Distinct-关键字" class="headerlink" title="Distinct 关键字"></a>Distinct 关键字</h3><p>SQLite 的 DISTINCT 关键字与 SELECT 语句一起使用，来消除所有重复的记录，并只获取唯一一次记录。</p>
<p>有可能出现一种情况，在一个表中有多个重复的记录。当提取这样的记录时，DISTINCT 关键字就显得特别有意义，它只获取唯一一次记录，而不是获取重复记录。</p>
<h2 id="事务控制"><a href="#事务控制" class="headerlink" title="事务控制"></a>事务控制</h2><p>使用下面的命令来控制事务：</p>
<ul>
<li>BEGIN ：开始事务处理。</li>
<li>COMMIT：保存更改，或者可以使用 END TRANSACTION 命令。</li>
<li>ROLLBACK：回滚所做的更改。</li>
</ul>
<p>事务控制命令只与 DML 命令 INSERT、UPDATE 和 DELETE 一起使用。他们不能在创建表或删除表时使用，因为这些操作在数据库中是自动提交的。</p>
<h3 id="BEGIN-命令"><a href="#BEGIN-命令" class="headerlink" title="BEGIN 命令"></a>BEGIN 命令</h3><p>事务（Transaction）可以使用BEGIN 命令来启动。此类事务通常会持续执行下去，直到遇到下一个 COMMIT 或 ROLLBACK 命令。不过在数据库关闭或发生错误时，事务处理也会回滚。</p>
<h3 id="COMMIT-命令"><a href="#COMMIT-命令" class="headerlink" title="COMMIT 命令"></a>COMMIT 命令</h3><p>COMMIT 命令是用于把事务调用的更改保存到数据库中的事务命令。自上次 COMMIT 或 ROLLBACK 命令以外的所有事务保存到数据库。</p>
<h3 id="ROLLBACK-命令"><a href="#ROLLBACK-命令" class="headerlink" title="ROLLBACK 命令"></a>ROLLBACK 命令</h3><p>ROLLBACK 命令是用于撤消尚未保存到数据库的事务的事务命令。</p>
<p>ROLLBACK 命令只能用于撤销自上次发出 COMMIT 或 ROLLBACK 命令以外的事务。</p>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>开始一个事务，并从表中删除 age &#x3D; 25 的记录，最后，我们使用 ROLLBACK 命令撤消所有的更改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite&gt; BEGIN;</span><br><span class="line">sqlite&gt; DELETE FROM COMPANY WHERE AGE = 25;</span><br><span class="line">sqlite&gt; ROLLBACK;</span><br></pre></td></tr></table></figure>
<p>检查 COMPANY 表，仍然有记录</p>
<p>开始另一个事务，从表中删除 age &#x3D; 25 的记录，最后我们使用 COMMIT 命令提交所有的更改。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlite&gt; BEGIN;</span><br><span class="line">sqlite&gt; DELETE FROM COMPANY WHERE AGE = 25;</span><br><span class="line">sqlite&gt; COMMIT;</span><br></pre></td></tr></table></figure>
<h2 id="基础操做"><a href="#基础操做" class="headerlink" title="基础操做"></a>基础操做</h2><ul>
<li>显示表<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.tables</span><br></pre></td></tr></table></figure></li>
<li>显示概要<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.schema sqlite_master</span><br></pre></td></tr></table></figure></li>
<li>格式化显示<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">显示头</span><br><span class="line">sqlite&gt;.header on</span><br><span class="line">按列显示</span><br><span class="line">sqlite&gt;.mode column</span><br><span class="line">显示运行时间</span><br><span class="line">sqlite&gt;.timer on</span><br><span class="line">设置输出列的宽度</span><br><span class="line">sqlite&gt;.width 10, 20, 10</span><br><span class="line">sqlite&gt;SELECT * FROM COMPANY;</span><br></pre></td></tr></table></figure></li>
<li>主键自动增加&#x2F;&#x2F;历史最大值增加<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ID INTEGER PRIMARY KEY     AUTOINCREMENT</span><br></pre></td></tr></table></figure></li>
<li>删除表<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">drop table company;</span><br></pre></td></tr></table></figure></li>
<li>增加列<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table company add column DATE char(20);</span><br><span class="line">alter table company add column TIME char(10);</span><br></pre></td></tr></table></figure></li>
<li>删除列<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">alter table company drop column test;</span><br></pre></td></tr></table></figure></li>
<li>添加时间日期<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into company values(6,&#x27;huang&#x27;,31,&#x27;guangzhou&#x27;,8999,date(&#x27;now&#x27;,&#x27;localtime&#x27;),time(&#x27;now&#x27;,&#x27;localtime&#x27;));</span><br></pre></td></tr></table></figure></li>
<li>自动时间<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">DATE        TIMESTAMP  NOT NULL DEFAULT(date(&#x27;now&#x27;,&#x27;localtime&#x27;)),</span><br><span class="line">TIME        TIMESTAMP  NOT NULL DEFAULT(time(&#x27;now&#x27;,&#x27;localtime&#x27;))</span><br></pre></td></tr></table></figure></li>
<li>筛选时间<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from company where time &gt;time(&#x27;12:00:00&#x27;);</span><br></pre></td></tr></table></figure></li>
<li>修改内容<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update company set name=&#x27;gcc&#x27; where id=18;</span><br></pre></td></tr></table></figure></li>
<li>去重<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT DISTINCT name FROM COMPANY;</span><br></pre></td></tr></table></figure></li>
<li>筛选计数<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM COMPANY GROUP BY name HAVING count(name) &lt; 2;</span><br></pre></td></tr></table></figure></li>
<li>排序<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM COMPANY ORDER BY SALARY ASC;</span><br></pre></td></tr></table></figure></li>
<li>字符加前缀<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update work set date=&#x27;2024-&#x27;||date;</span><br></pre></td></tr></table></figure></li>
<li>列求和<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select sum(time) from work;</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>数据库</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>数据库</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh和git</title>
    <url>/2024/12/24/linux/ssh/</url>
    <content><![CDATA[<h1 id="ssh免密登录"><a href="#ssh免密登录" class="headerlink" title="ssh免密登录"></a>ssh免密登录</h1><h2 id="秘钥加入主机"><a href="#秘钥加入主机" class="headerlink" title="秘钥加入主机"></a>秘钥加入主机</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh-copy-id </span><br></pre></td></tr></table></figure>

<h2 id="重启服务"><a href="#重启服务" class="headerlink" title="重启服务"></a>重启服务</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart ssh</span><br><span class="line"></span><br><span class="line">sudo server ssh restart</span><br></pre></td></tr></table></figure>
<h2 id="测试连接"><a href="#测试连接" class="headerlink" title="测试连接"></a>测试连接</h2><p>server</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/sbin/sshd -d -p 2222</span><br></pre></td></tr></table></figure>
<p>client</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ssh ... -p 2222</span><br></pre></td></tr></table></figure>
<h2 id="新用户ssh登录"><a href="#新用户ssh登录" class="headerlink" title="新用户ssh登录"></a>新用户ssh登录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo useradd git</span><br><span class="line">sudo passwd git</span><br><span class="line"></span><br><span class="line">sudo chmod 700 .ssh</span><br><span class="line">sudo chmod 600 authorized_keys</span><br><span class="line">sudo chmod 755 /home/username</span><br></pre></td></tr></table></figure>

<h1 id="Git服务"><a href="#Git服务" class="headerlink" title="Git服务"></a>Git服务</h1><ul>
<li>新建仓库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git init --bare test</span><br></pre></td></tr></table></figure></li>
<li>客户端<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone git@192.168.1.10：/home/git/test</span><br></pre></td></tr></table></figure></li>
<li>客户端现有文件夹<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git add --all .</span><br><span class="line">git commit -m &quot;test project init&quot;</span><br><span class="line">git remote add origin git@192.168.1.10：/home/git/test</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Gitlab"><a href="#Gitlab" class="headerlink" title="Gitlab"></a>Gitlab</h2><p><a href="https://shumeipai.nxez.com/2017/10/20/raspberry-pi-use-gitlab-to-build-professional-git-services.html">参考</a></p>
<p><a href="https://packages.gitlab.com/gitlab/raspberry-pi2/packages/debian/jessie/gitlab-ce_8.13.0-ce.0_armhf.deb">树莓派gitlab下载</a></p>
<ul>
<li><p>安装依赖</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install curl openssh-server ca-certificates postfix apt-transport-https</span><br></pre></td></tr></table></figure></li>
<li><p>安装包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i gitlab-ce_8.13.0-ce.0_armhf.deb</span><br></pre></td></tr></table></figure></li>
<li><p>运行</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo gitlab-ctl reconfigure</span><br></pre></td></tr></table></figure></li>
<li><p>修改服务端口<br>默认使用80端口，如果需要修改，可以修改&#x2F;etc&#x2F;gitlab&#x2F;gitlab.rb</p>
</li>
<li><p>常用维护指令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#修改任何配置文件后都要输入如下命令使配置生效。</span><br><span class="line">sudo gitlab-ctl reconfigure</span><br><span class="line"> </span><br><span class="line">#页面缓存清除：</span><br><span class="line">sudo gitlab-rake cache:clear RAILS_ENV=production</span><br><span class="line"> </span><br><span class="line">#GitLab各组件启动：</span><br><span class="line">sudo gitlab-ctl start</span><br><span class="line"> </span><br><span class="line">#GitLab各组件停止：</span><br><span class="line">sudo gitlab-ctl stop</span><br><span class="line"> </span><br><span class="line">#GitLab各组件重启：</span><br><span class="line">sudo gitlab-ctl restart</span><br><span class="line"> </span><br><span class="line">#禁用GitLab开机自启动：</span><br><span class="line">sudo systemctl disable gitlab-runsvdir</span><br><span class="line"> </span><br><span class="line">#启用GitLab开机自启动：</span><br><span class="line">sudo systemctl enable gitlab-runsvdir</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="Gitea"><a href="#Gitea" class="headerlink" title="Gitea"></a>Gitea</h2><p>轻量化，占用资源少,在树莓派上安装和运行Gitea，可以遵循以下步骤：</p>
<ul>
<li><p>更新系统包并安装必要的依赖：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install -y curl policycoreutils openssh-server</span><br></pre></td></tr></table></figure></li>
<li><p>下载Gitea二进制文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl -L https://github.com/go-gitea/gitea/releases/download/v1.20.0/gitea-linux-arm64 -o gitea</span><br></pre></td></tr></table></figure></li>
<li><p>使二进制文件可执行：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod +x gitea</span><br></pre></td></tr></table></figure></li>
<li><p>移动Gitea到&#x2F;usr&#x2F;local&#x2F;bin目录并创建一个systemd服务文件：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mv gitea /usr/local/bin/gitea</span><br><span class="line">sudo nano /etc/systemd/system/gitea.service</span><br></pre></td></tr></table></figure></li>
<li><p>在gitea.service文件中添加以下内容：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Gitea (Git with a cup of tea)</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line"> </span><br><span class="line">[Service]</span><br><span class="line">RestartSec=2s</span><br><span class="line">Type=simple</span><br><span class="line">User=root</span><br><span class="line">ExecStart=/usr/local/bin/gitea web --config /etc/gitea/app.ini</span><br><span class="line">Restart=always</span><br><span class="line">Environment=USER=root</span><br><span class="line"> </span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></li>
<li><p>重新加载systemd守护进程，使其识别新的服务文件，并启动Gitea服务：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl start gitea</span><br><span class="line">sudo systemctl enable gitea</span><br></pre></td></tr></table></figure></li>
<li><p>配置防火墙允许访问Gitea：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo ufw allow &#x27;Nginx Full&#x27;</span><br><span class="line">sudo ufw enable</span><br></pre></td></tr></table></figure>
<p>访问http:&#x2F;&#x2F;<IP>:3000来设置和运行Gitea。</p>
</li>
<li><p>修改配置<br>初次修改，通过网页选择<br>custom&#x2F;conf&#x2F;app.ini</p>
</li>
<li><p>文件夹大小</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">du -sh Gitea</span><br></pre></td></tr></table></figure></li>
<li><p>修改远程仓库</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git remote set-url origin https://gitee.com/gxswift/ctest.git</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>linux</category>
        <category>ssh</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>git</tag>
        <tag>ssh</tag>
      </tags>
  </entry>
  <entry>
    <title>TFTP NFS</title>
    <url>/2024/12/24/linux/tftp/</url>
    <content><![CDATA[<h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2><ol>
<li>安装NFS软件包<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install nfs-kernel-server	#安装服务器</span><br><span class="line">sudo apt-get install nfs-common		#安装客户端</span><br></pre></td></tr></table></figure></li>
<li>添加共享目录<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo vi /etc/exports	#打开文件</span><br><span class="line">/nfsroot *(rw,sync,no_root_squash)#将/nfsroot 目录设置为NFS共享目录 ，*代表允许任意IP访问</span><br></pre></td></tr></table></figure></li>
<li>建立文件夹，设置权限<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mkdir /nfsroot</span><br><span class="line">sudo chmod -R 777 /nfsroot</span><br><span class="line">sudo chown -R nobody /nfsroot</span><br></pre></td></tr></table></figure></li>
<li>启动NFS服务<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo /etc/init.d/nfs-kernel-server start #重启restart</span><br></pre></td></tr></table></figure></li>
<li>客户端挂载<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mount -t nfs -o vers=4 192.168.123.123:/nfs /mnt -o nolock</span><br></pre></td></tr></table></figure></li>
<li>卸载<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo umount /mnt</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="TFTP"><a href="#TFTP" class="headerlink" title="TFTP"></a>TFTP</h2><h3 id="tftpd或xinetd"><a href="#tftpd或xinetd" class="headerlink" title="tftpd或xinetd"></a>tftpd或xinetd</h3><ol>
<li>安装软件包<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install tftpd-hpa tftp-hpa	<span class="comment">#安装服务器和客户端</span></span><br></pre></td></tr></table></figure></li>
<li>配置<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> vi /etc/default/tftp-hpa	<span class="comment">#打开文件</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> vi /etc/xinetd.d/tftp</span><br><span class="line">service tftp</span><br><span class="line">&#123;</span><br><span class="line">    socket_type = dgram</span><br><span class="line">    protocol = udp</span><br><span class="line">    <span class="built_in">wait</span> = <span class="built_in">yes</span></span><br><span class="line">    user = root</span><br><span class="line">    server = /usr/sbin/in.tftpd</span><br><span class="line">    server_args = -s /tftpboot</span><br><span class="line">    <span class="built_in">disable</span> = no</span><br><span class="line">    per_source = 11</span><br><span class="line">    cps = 100 2</span><br><span class="line">    flags = IPv4</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>建立文件夹，设置权限<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> <span class="built_in">mkdir</span> /tftp</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chmod</span> -R 777 /tftp</span><br><span class="line"><span class="built_in">sudo</span> <span class="built_in">chown</span> -R nobody /tftp</span><br></pre></td></tr></table></figure></li>
<li>启动NFS服务<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> service tftpd-hpa start <span class="comment">#重启restart</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">sudo</span> service xinetd start</span><br></pre></td></tr></table></figure></li>
<li>客户端挂载<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">&gt;tftp ip#连接</span><br><span class="line">&gt;get file#下载</span><br><span class="line">&gt;put file#上传</span><br><span class="line">&gt;q#退出</span><br></pre></td></tr></table></figure></li>
</ol>
<h2 id="SAMBA"><a href="#SAMBA" class="headerlink" title="SAMBA"></a>SAMBA</h2><p>windows常用的共享文件夹服务</p>
<ol>
<li>安装服务</li>
</ol>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get install samba</span><br></pre></td></tr></table></figure>
<p>如果不小心删除了配置文件，可以通过：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt purge samba-common samba</span><br><span class="line">sudo apt install samba</span><br></pre></td></tr></table></figure>

<ol start="2">
<li><p>创建samba用户<br>samba使用Linux的用户和权限系统，但是有自己的认证机制。<br>samba用户首先要是一个Linux用户，不然是创建不成功的。<br>创建一个Linux用户</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo useradd -s /bin/bash -m username</span><br></pre></td></tr></table></figure>
<p>-m 是在home目录自动创建一个username目录<br>创建一个smb用户sudo smbpasswd -a username<br>手动输入两遍密码即可,其他操作可以通过smbpass -h查看创建共享目录 使用username用户在家目录创建一个共享目录mkdir samba</p>
</li>
<li><p>修改配置</p>
</li>
</ol>
<p>vim &#x2F;etc&#x2F;samba&#x2F;smb.conf<br>保证 server role 是 standalone server（默认情况下就是如此）server role &#x3D; standalone server添加共享配置</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[samba]</span><br><span class="line">    path = /home/username/samba</span><br><span class="line">    browseable = yes</span><br><span class="line">    read only = no</span><br><span class="line">#    force create mode = 0660</span><br><span class="line">#    force directory mode = 2770</span><br><span class="line">    valid users = username</span><br><span class="line"></span><br><span class="line"># 下面是一个匿名只读配置</span><br><span class="line">[share]</span><br><span class="line">    path = /mnt/samba</span><br><span class="line">    browsable =yes</span><br><span class="line">    writable = no</span><br><span class="line">    guest ok = yes</span><br><span class="line">    read only = yes</span><br></pre></td></tr></table></figure>
<pre><code>全局设置
workgroup：此选项设置了Samba服务器所属的工作组或域名，如workgroup = WORKGROUP。
server string：这是Samba服务器的简短描述，例如server string = %h server (Samba,Ubuntu)。
security：设置安全模式，常见的模式有share、user、server、domain和ads。例如security = user指定需要用户名和密码才能访问共享资源。
passdb backend：定义用户密码数据库的后端类型，如passdb backend = tdbsam表示使用TDB数据库来存储用户验证信息。
encrypt passwords：此选项控制是否对密码进行加密，为了与现代Windows系统兼容通常设置为yes。

共享定义
comment：为共享资源添加描述性注释，如comment = Public Share。
path：指定共享资源的完整路径，如path = /home/public。
browseable：此选项设置共享是否可以在网络邻居中被浏览，如browseable = yes。通过设置为no，其他用户将看不到共享。
guest ok：设置是否允许匿名访问共享，如guest ok = no表示禁止匿名访问。
valid users：指定允许访问共享资源的用户或组，如valid users = @tech, manager。
read only：控制共享资源是否为只读，如read only = yes表示共享目录只能读取不可写入。
</code></pre>
<ol start="4">
<li><p>重新启动Samba服务</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart smbd.service</span><br></pre></td></tr></table></figure>
</li>
<li><p>windows删除远程连接<br>弹窗<code>不允许一个用户使用一个以上用户名与服务器</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">net use * /del /y</span><br></pre></td></tr></table></figure></li>
</ol>
]]></content>
      <categories>
        <category>linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>TFTP</tag>
        <tag>NFS</tag>
      </tags>
  </entry>
  <entry>
    <title>VIM</title>
    <url>/2024/12/24/linux/vim/</url>
    <content><![CDATA[<h1 id="vim操作"><a href="#vim操作" class="headerlink" title="vim操作"></a>vim操作</h1><p><a id="head"></a></p>
<h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a><a href="#move">移动</a></h2><h2 id="追加"><a href="#追加" class="headerlink" title="追加"></a><a href="#add">追加</a></h2><h2 id="删除"><a href="#删除" class="headerlink" title="删除"></a><a href="#del">删除</a></h2><h2 id="复制粘贴"><a href="#复制粘贴" class="headerlink" title="复制粘贴"></a><a href="#copy">复制粘贴</a></h2><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a><a href="#find">查找</a></h2><h2 id="多文件操作"><a href="#多文件操作" class="headerlink" title="多文件操作"></a><a href="#multiple">多文件操作</a></h2><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><a href="#other">其他</a></h2><table>
<thead>
<tr>
<th>指令</th>
<th>含义</th>
<th>例子</th>
</tr>
</thead>
<tbody><tr>
<td><a id="move"><a href="#head">移动</a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>l or 右箭头</td>
<td>向右移动一个字符</td>
<td></td>
</tr>
<tr>
<td>h or 左箭头</td>
<td>向左移动一个字符</td>
<td></td>
</tr>
<tr>
<td>j or 下箭头</td>
<td>向下移动一行</td>
<td></td>
</tr>
<tr>
<td>k or 上箭头</td>
<td>向上移动一行</td>
<td></td>
</tr>
<tr>
<td>0 (零按键)</td>
<td>移动到当前行的行首。</td>
<td></td>
</tr>
<tr>
<td>^</td>
<td>移动到当前行的第一个非空字符。</td>
<td></td>
</tr>
<tr>
<td>$</td>
<td>移动到当前行的末尾。</td>
<td></td>
</tr>
<tr>
<td>w</td>
<td>移动到下一个单词或标点符号的开头。</td>
<td></td>
</tr>
<tr>
<td>W</td>
<td>移动到下一个单词的开头，忽略标点符号。</td>
<td></td>
</tr>
<tr>
<td>b</td>
<td>移动到上一个单词或标点符号的开头。</td>
<td></td>
</tr>
<tr>
<td>B</td>
<td>移动到上一个单词的开头，忽略标点符号。</td>
<td></td>
</tr>
<tr>
<td>Ctrl-f or Page Down</td>
<td>向下翻一页</td>
<td></td>
</tr>
<tr>
<td>Ctrl-b or Page Up</td>
<td>向上翻一页</td>
<td></td>
</tr>
<tr>
<td>Ctrl-d</td>
<td>向下翻半页</td>
<td></td>
</tr>
<tr>
<td>Ctrl-u</td>
<td>向上翻半页</td>
<td></td>
</tr>
<tr>
<td>numberG or number</td>
<td>移动到第number 行。</td>
<td>1(G) 移动到文件的第一行,命令前加数字，为命令执行次数</td>
</tr>
<tr>
<td>G</td>
<td>移动到文件末尾。</td>
<td></td>
</tr>
<tr>
<td><a id="add"><a href="#head"><strong>追加</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>i</td>
<td>光标前插入</td>
<td></td>
</tr>
<tr>
<td>I</td>
<td>行前插入</td>
<td></td>
</tr>
<tr>
<td>a</td>
<td>光标后插入</td>
<td></td>
</tr>
<tr>
<td>A</td>
<td>行后插入</td>
<td></td>
</tr>
<tr>
<td>o</td>
<td>当前行的下方打开一行。</td>
<td></td>
</tr>
<tr>
<td>O</td>
<td>当前行的上方打开一行。</td>
<td></td>
</tr>
<tr>
<td><a id="del"><a href="#head"><strong>删除</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>x</td>
<td>当前字符</td>
<td>3x当前字符及其后的两个字符。</td>
</tr>
<tr>
<td>dd</td>
<td>当前行。</td>
<td>5dd 当前行及随后的四行文本。</td>
</tr>
<tr>
<td>dW</td>
<td>从光标位置开始到下一个单词的开头。</td>
<td></td>
</tr>
<tr>
<td>d$</td>
<td>从光标位置开始到当前行的行尾。</td>
<td></td>
</tr>
<tr>
<td>d0</td>
<td>从光标位置开始到当前行的行首。</td>
<td></td>
</tr>
<tr>
<td>d^</td>
<td>从光标位置开始到文本行的第一个非空字符。</td>
<td></td>
</tr>
<tr>
<td>dG</td>
<td>从当前行到文件的末尾。</td>
<td></td>
</tr>
<tr>
<td>d20G</td>
<td>从当前行到文件的第20 行。</td>
<td></td>
</tr>
<tr>
<td><a id="copy"><a href="#head"><strong>复制粘贴</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>yy</td>
<td>当前行。</td>
<td></td>
</tr>
<tr>
<td>5yy</td>
<td>当前行及随后的四行文本。</td>
<td></td>
</tr>
<tr>
<td>yW</td>
<td>从当前光标位置到下一个单词的开头。</td>
<td></td>
</tr>
<tr>
<td>y$</td>
<td>从当前光标位置到当前行的末尾。</td>
<td></td>
</tr>
<tr>
<td>y0</td>
<td>从当前光标位置到行首。</td>
<td></td>
</tr>
<tr>
<td>y^</td>
<td>从当前光标位置到文本行的第一个非空字符。</td>
<td></td>
</tr>
<tr>
<td>yG</td>
<td>从当前行到文件末尾。</td>
<td></td>
</tr>
<tr>
<td>y20G</td>
<td>从当前行到文件的第20 行。</td>
<td></td>
</tr>
<tr>
<td>p</td>
<td>粘贴到当前行的下面</td>
<td></td>
</tr>
<tr>
<td><a id="find"><a href="#head"><strong>查找和替换</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>&#x2F;</td>
<td>查找</td>
<td>&#x2F;foo查找foo，\c表示大小写不敏感查找，\C表示大小写敏感查找</td>
</tr>
<tr>
<td>n</td>
<td>下一个</td>
<td></td>
</tr>
<tr>
<td>N</td>
<td>前一个</td>
<td></td>
</tr>
<tr>
<td>s</td>
<td>替换{作用范围}s&#x2F;{目标}&#x2F;{替换}&#x2F;{替换标志}</td>
<td>%s&#x2F;foo&#x2F;bar&#x2F;g会在全局范围(%)查找foo并替换为bar，所有出现都会被替换(g)</td>
</tr>
<tr>
<td></td>
<td></td>
<td>s&#x2F;foo&#x2F;bar&#x2F;g替换当前行</td>
</tr>
<tr>
<td></td>
<td></td>
<td>%s&#x2F;foo&#x2F;bar&#x2F;i。i表示大小写不敏感查找，I表示大小写敏感，%表示第一行到最后一行，或者用1,5代替</td>
</tr>
<tr>
<td><a id="multiple"><a href="#head"><strong>多文件操作</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>n</td>
<td>下一个文件</td>
<td></td>
</tr>
<tr>
<td>N</td>
<td>前一个文件</td>
<td></td>
</tr>
<tr>
<td>buffers</td>
<td>查看文件列表</td>
<td></td>
</tr>
<tr>
<td><a id="other"><a href="#head"><strong>其他</strong></a></a></td>
<td></td>
<td></td>
</tr>
<tr>
<td>J</td>
<td>删除当前行最后回车，连接下一行</td>
<td></td>
</tr>
<tr>
<td>w</td>
<td>写入</td>
<td></td>
</tr>
<tr>
<td>q</td>
<td>退出</td>
<td></td>
</tr>
<tr>
<td>!</td>
<td>强制</td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>linux</category>
        <category>vim</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>vim</tag>
      </tags>
  </entry>
  <entry>
    <title>i.mx6ull开发板</title>
    <url>/2024/12/24/linux/zdyz/</url>
    <content><![CDATA[<h1 id="正点原子i-mx6ull开发板练习"><a href="#正点原子i-mx6ull开发板练习" class="headerlink" title="正点原子i.mx6ull开发板练习"></a>正点原子i.mx6ull开发板练习</h1><h2 id="WIFI"><a href="#WIFI" class="headerlink" title="WIFI"></a>WIFI</h2><h3 id="开启网卡"><a href="#开启网卡" class="headerlink" title="开启网卡"></a>开启网卡</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ifconfig wlan0 up // 若默认没打开 wlan0 则需要执行此项。</span><br><span class="line">ifconfig</span><br></pre></td></tr></table></figure>
<h3 id="搜索"><a href="#搜索" class="headerlink" title="搜索"></a>搜索</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">wpa_cli -i wlan0 scan_result // 此指令需要启动进入后再插 WIFI 才生效，需要 wp</span><br><span class="line">a_supplicant 在运行。</span><br></pre></td></tr></table></figure>

<h3 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ./alientek_usb_wifi_setup.sh -m station -i ALIENTEK-YF -p 1590202**** -d wlan0</span><br></pre></td></tr></table></figure>
<p>参数解释：</p>
<ul>
<li>-m station ：设置成 station 模式</li>
<li>-i ALIENTEK-YF ：无线网络名称(ssid)。</li>
<li>-p 1590202**** ：无线网络密码(psk)。</li>
<li>-d wlan0 ：USB WIFI 节点</li>
</ul>
<p>例如:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source ./shell/wifi/alientek_usb_wifi_setup.sh -m station -i senmun2022 -p senmun150@ -d wlan0</span><br></pre></td></tr></table></figure>


<h3 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a>Ubuntu</h3><p>桥接,设置ip为同网段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mount -t nfs 192.168.1.100:/home/alientek/linux/nfs /mnt -o nolock</span><br></pre></td></tr></table></figure>
<p>提示mount.nfs: an incorrect mount option was specified</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo mount -t nfs -o vers=4 192.168.1.100:/home/alientek/linux/nfs /mnt</span><br></pre></td></tr></table></figure>
<h4 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/home/alientek/linux/nfs *(rw,sync,no_root_squash)</span><br></pre></td></tr></table></figure>

<h2 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h2><p>环境</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">source /opt/fsl-imx-x11/4.1.15-2.1.0/environment-setup-cortexa7hf-neon-poky-linux-gnueabi</span><br></pre></td></tr></table></figure>

<p>编译文件路径</p>
<h2 id="开机启动项"><a href="#开机启动项" class="headerlink" title="开机启动项"></a>开机启动项</h2><p>&#x2F;etc&#x2F;rc.local </p>
<h3 id="开机启动程序"><a href="#开机启动程序" class="headerlink" title="开机启动程序"></a>开机启动程序</h3><p><code>#</code>注释</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/opt/QDesktop &gt;/dev/null 2&gt;&amp;1</span><br></pre></td></tr></table></figure>
<h3 id="设置IP"><a href="#设置IP" class="headerlink" title="设置IP"></a>设置IP</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PATH=/sbin:/bin:/usr/sbin:/usr/bin</span><br><span class="line">ifconfig eth0 192.168.1.115 netmask 255.255.255.0</span><br><span class="line">route add default gw 192.168.1.1</span><br><span class="line">echo &quot;nameserver 114.114.114.114&quot; &gt; /etc/resolv.conf</span><br></pre></td></tr></table></figure>

<h2 id="QT摄像头"><a href="#QT摄像头" class="headerlink" title="QT摄像头"></a>QT摄像头</h2><h3 id="人脸识别"><a href="#人脸识别" class="headerlink" title="人脸识别"></a>人脸识别</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//--------------------------------------------------</span></span><br><span class="line">    <span class="comment">//添加人脸识别</span></span><br><span class="line">    cv::CascadeClassifier faceCascade;                                     <span class="comment">// 级联分类器</span></span><br><span class="line">    faceCascade.load(<span class="string">&quot;Resources/haarcascade_frontalface_default.xml&quot;</span>); <span class="comment">// 加载训练好的haar人脸正脸xml配置文件</span></span><br><span class="line">    <span class="keyword">if</span> (faceCascade.empty())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>( <span class="string">&quot;XML file not loaded\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">std</span>::<span class="built_in">vector</span>&lt;cv::Rect&gt; faces;                             <span class="comment">// 人脸的矩形数组</span></span><br><span class="line">        faceCascade.detectMultiScale(frame, faces, <span class="number">1.1</span>, <span class="number">3</span>); <span class="comment">// 比例因子 人脸大小</span></span><br><span class="line">        <span class="keyword">if</span>(faces.size() &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; faces.size(); i++)</span><br><span class="line">            &#123;</span><br><span class="line">                rectangle(frame, faces[i].tl(), faces[i].br(), cv::Scalar(<span class="number">255</span>, <span class="number">0</span>, <span class="number">255</span>), <span class="number">2</span>); <span class="comment">// 在原图上绘制人脸矩形区域，颜色为粉色，线条厚度为3像素</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//--------------------------------------------------</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-lopencv_objdetect</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="文件颜色"><a href="#文件颜色" class="headerlink" title="文件颜色"></a>文件颜色</h2><pre><code>白色：表示普通文件
蓝色：表示目录（文件夹）
绿色：表示可执行文件
红色：表示压缩文件，文件包。
粉红色：图片；Socket文件
浅蓝色：链接文件（软链接，硬链接）
红色闪烁：表示链接的文件有问题
黄色：表示设备文件（ /dev目录下：物理块设备(b)、字符终端设备?）
灰色：表示其他文件
青黄色 ：管道文件 ( p)
</code></pre>
<h2 id="挂载U盘"><a href="#挂载U盘" class="headerlink" title="挂载U盘"></a>挂载U盘</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 识别u盘</span></span><br><span class="line">lsblk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 挂载</span></span><br><span class="line"><span class="built_in">sudo</span> mount /dev/sdb1 /mnt/usb</span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证结果</span></span><br><span class="line"><span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line"><span class="comment"># 卸载</span></span><br><span class="line"><span class="built_in">sudo</span> umount /mnt/usb</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>linux</category>
        <category>开发板</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>开发板</tag>
      </tags>
  </entry>
  <entry>
    <title>linux压缩</title>
    <url>/2024/12/24/linux/zip/</url>
    <content><![CDATA[<h1 id="linux-tar命令-压缩、打包、解压-详解"><a href="#linux-tar命令-压缩、打包、解压-详解" class="headerlink" title="linux tar命令 压缩、打包、解压 详解"></a>linux tar命令 压缩、打包、解压 详解</h1><h2 id="1、常用压缩命令"><a href="#1、常用压缩命令" class="headerlink" title="1、常用压缩命令"></a>1、常用压缩命令</h2><p>tar -czvf 压缩后的文件.tar.gz 要压缩的文件</p>
<h2 id="2、常用解压命令"><a href="#2、常用解压命令" class="headerlink" title="2、常用解压命令"></a>2、常用解压命令</h2><p>tar -xzvf 解压后的文件.tar.gz 【要解压的目录】</p>
<h2 id="3、参数意义"><a href="#3、参数意义" class="headerlink" title="3、参数意义"></a>3、参数意义</h2><p>-c: 建立压缩档案</p>
<p>-f: 使用档案名字，切记，这个参数是最后一个参数，后面只能接档案名。</p>
<p>-j: 有bz2属性的</p>
<p>-O: 将文件解开到标准输出</p>
<p>-r: 向压缩归档文件末尾追加文件</p>
<p>-t: 查看内容</p>
<p>-u: 更新原压缩包中的文件</p>
<p>-v: 显示所有过程</p>
<p>-x: 解压</p>
<p>-z: 有gzip属性的</p>
<p>-Z: 有compress属性的</p>
<h2 id="4、总结"><a href="#4、总结" class="headerlink" title="4、总结"></a>4、总结</h2><p>*.tar 用 tar -xvf 解压</p>
<p>*.gz 用 gzip -d或者gunzip 解压</p>
<p><em>.tar.gz和</em>.tgz 用 tar -xzf 解压</p>
<p>*.bz2 用 bzip2 -d或者用bunzip2 解压</p>
<p>*.tar.bz2用tar -xjf 解压</p>
<p>*.Z 用 uncompress 解压</p>
<p>*.tar.Z 用tar -xZf 解压</p>
<p>*.rar 用 unrar e解压</p>
<p>*.zip 用 unzip 解压</p>
]]></content>
      <categories>
        <category>linux</category>
        <category>压缩</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>压缩</tag>
      </tags>
  </entry>
  <entry>
    <title>lvgl仿真</title>
    <url>/2024/12/24/lvgl/lvglsim/</url>
    <content><![CDATA[<h1 id="LVGL仿真"><a href="#LVGL仿真" class="headerlink" title="LVGL仿真"></a>LVGL仿真</h1><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a><code>Linux</code></h2><h3 id="一、基于SDL2"><a href="#一、基于SDL2" class="headerlink" title="一、基于SDL2"></a>一、基于SDL2</h3><ol>
<li>SDL2安装 安装地址<a href="http://www.libsdl.org/download-2.0.php">URL</a><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">url：http://www.libsdl.org/download-2.0.php</span><br><span class="line">./configure </span><br><span class="line">make </span><br><span class="line"><span class="built_in">sudo</span> make install</span><br></pre></td></tr></table></figure>
或者<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y build-essential libsdl2-dev</span><br></pre></td></tr></table></figure></li>
<li>下载基于SDL2编译的包<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/lvgl/lv_sim_vscode_sdl</span><br></pre></td></tr></table></figure></li>
<li>编译运行<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">./bulid/bin/demo</span><br></pre></td></tr></table></figure>
提示error while loading shared libraries libSDL-1.2.so.0<br>没找到库，需重新安装<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install --reinstall libsdl1.2debian</span><br></pre></td></tr></table></figure>
旧的仿真环境删除，由lv_port_pc_eclipse替换<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/lvgl/lv_port_pc_eclipse.git</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CFLAGS ?= -O3 -I$(LVGL_DIR)/ $(WARNINGS) -I../SDL2-2.0.14/_instal/include</span><br><span class="line">LDFLAGS ?= -L../SDL2-2.0.14/_instal/lib -lSDL2 -lm -lpthread</span><br></pre></td></tr></table></figure>
运行<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./demo</span><br></pre></td></tr></table></figure></li>
</ol>
<h3 id="二、基于framebuffer"><a href="#二、基于framebuffer" class="headerlink" title="二、基于framebuffer"></a>二、基于framebuffer</h3><p> 下载源码</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> --recursive https://github.com/lvgl/lv_port_linux_frame_buffer</span><br></pre></td></tr></table></figure>
<p>编译后 打开命令行终端</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctrl+alt+F2     #(1234)退出F7</span><br></pre></td></tr></table></figure>

<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a><code>Windows</code></h2><p>同linux基于SDL2</p>
<ul>
<li><p>下载windows SDL2</p>
</li>
<li><p>mingw32安装SDL2	<br>i686-w64-mingw32复制到环境路径</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">where</span> g++</span><br></pre></td></tr></table></figure>
<p>若提示_beginthreadex  _endthreadex错误,则因为mingw32版本不够，需改动main.c</p>
</li>
</ul>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="comment">// SDL_CreateThread(tick_thread, &quot;tick&quot;, NULL);</span></span><br><span class="line">CreateThread(<span class="literal">NULL</span>,<span class="number">0</span>,tick_thread,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure>

<p>使用lv_port_pc_eclipse</p>
<p>lib&#x2F;libSDL2.dll.a和include&#x2F;SDL2放入对应文件夹，删除makefile多余规则</p>
<h2 id="WSL"><a href="#WSL" class="headerlink" title="WSL"></a><code>WSL</code></h2><p>最简洁</p>
<ul>
<li>安装SDL2库<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install libsdl2-dev</span><br></pre></td></tr></table></figure></li>
<li>使用<code>lv_port_pc_vscode</code><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone --recursive https://github.com/lvgl/lv_port_pc_vscode</span><br></pre></td></tr></table></figure></li>
<li>编译运行<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -B build</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="字体仿真"><a href="#字体仿真" class="headerlink" title="字体仿真"></a><code>字体仿真</code></h2><p>修改取字库文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> *__user_font_getdata(<span class="type">int</span> offset, <span class="type">int</span> size)&#123;</span><br><span class="line">    <span class="comment">//如字模保存在SPI FLASH, SPIFLASH_Read(__g_font_buf,offset,size);</span></span><br><span class="line">    <span class="comment">//如字模已加载到SDRAM,直接返回偏移地址即可(sdram_fontddr+offset);</span></span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp=fopen(<span class="string">&quot;/d/myFont2.bin&quot;</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (fp == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        LV_LOG_WARN(<span class="string">&quot;open error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// LV_LOG_WARN(&quot;open OK&quot;);</span></span><br><span class="line">        fseek(fp,offset,SEEK_SET);</span><br><span class="line">        fread(__g_font_buf,size,<span class="number">1</span>,fp);</span><br><span class="line">        fclose(fp);        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> __g_font_buf;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>lvgl</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>lvgl</tag>
      </tags>
  </entry>
  <entry>
    <title>lvgl移植</title>
    <url>/2024/12/24/lvgl/lvgluse/</url>
    <content><![CDATA[<h1 id="LVGL移植"><a href="#LVGL移植" class="headerlink" title="LVGL移植"></a>LVGL移植</h1><h2 id="初始化需要"><a href="#初始化需要" class="headerlink" title="初始化需要"></a>初始化需要</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">lv_init();</span><br><span class="line">lv_port_disp_init();        <span class="comment">// 显示器初始化</span></span><br><span class="line">lv_port_indev_init();       <span class="comment">// 输入设备初始化（如果没有实现就注释掉）</span></span><br><span class="line">lv_port_fs_init();          <span class="comment">// 文件系统设备初始化（如果没有实现就注释掉）</span></span><br></pre></td></tr></table></figure>

<h2 id="修改lvgl-src-examples-porting下接口"><a href="#修改lvgl-src-examples-porting下接口" class="headerlink" title="修改lvgl&#x2F;src&#x2F;examples&#x2F;porting下接口"></a>修改lvgl&#x2F;src&#x2F;examples&#x2F;porting下接口</h2><p><a href="https://blog.csdn.net/qq_26106317/article/details/109666444">显示接口</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lv_port_disp.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lvgl/lvgl.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;lcd.h&quot;</span></span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">disp_init</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">disp_flush</span><span class="params">(<span class="type">lv_disp_drv_t</span> * disp_drv, <span class="type">const</span> <span class="type">lv_area_t</span> * area, <span class="type">lv_color_t</span> * color_p)</span>;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MY_DISP_HOR_RES (320)</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">lv_port_disp_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*-------------------------</span></span><br><span class="line"><span class="comment">     * Initialize your display</span></span><br><span class="line"><span class="comment">     * -----------------------*/</span></span><br><span class="line">    disp_init();</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_draw_buf_t</span> draw_buf_dsc_1;</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_color_t</span> buf_1[MY_DISP_HOR_RES * <span class="number">10</span>];                          <span class="comment">/*A buffer for 10 rows*/</span></span><br><span class="line">    lv_disp_draw_buf_init(&amp;draw_buf_dsc_1, buf_1, <span class="literal">NULL</span>, MY_DISP_HOR_RES * <span class="number">10</span>);   <span class="comment">/*Initialize the display buffer*/</span></span><br><span class="line">    <span class="type">static</span> <span class="type">lv_disp_drv_t</span> disp_drv;                         <span class="comment">/*Descriptor of a display driver*/</span></span><br><span class="line">    lv_disp_drv_init(&amp;disp_drv);                    <span class="comment">/*Basic initialization*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Set up the functions to access to your display*/</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Set the resolution of the display*/</span></span><br><span class="line">    disp_drv.hor_res = <span class="number">320</span>;</span><br><span class="line">    disp_drv.ver_res = <span class="number">480</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Used to copy the buffer&#x27;s content to the display*/</span></span><br><span class="line">    disp_drv.flush_cb = disp_flush;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Set a display buffer*/</span></span><br><span class="line">    disp_drv.draw_buf = &amp;draw_buf_dsc_1;</span><br><span class="line">    lv_disp_drv_register(&amp;disp_drv);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">disp_init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*You code here*/</span></span><br><span class="line">    LCD_Init();</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">disp_flush</span><span class="params">(<span class="type">lv_disp_drv_t</span> * disp_drv, <span class="type">const</span> <span class="type">lv_area_t</span> * area, <span class="type">lv_color_t</span> * color_p)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*The most simple case (but also the slowest) to put all pixels to the screen one-by-one*/</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int32_t</span> x;</span><br><span class="line">    <span class="type">int32_t</span> y;</span><br><span class="line">    LCD_SetWindow(area-&gt;x1, area-&gt;y1, area-&gt;x2, area-&gt;y2);</span><br><span class="line">    <span class="keyword">for</span>(y = area-&gt;y1; y &lt;= area-&gt;y2; y++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(x = area-&gt;x1; x &lt;= area-&gt;x2; x++) &#123;</span><br><span class="line">            <span class="comment">/*Put a pixel to the display. For example:*/</span></span><br><span class="line">            <span class="comment">/*put_px(x, y, *color_p)*/</span></span><br><span class="line">            LCD_WRITE_DATA(*(<span class="type">uint16_t</span>*)color_p);</span><br><span class="line">            color_p++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// LCD_Draw(area-&gt;x1,area-&gt;y1,area-&gt;x2,area-&gt;y2,(uint16_t *)color_p);</span></span><br><span class="line">    <span class="comment">/*IMPORTANT!!!</span></span><br><span class="line"><span class="comment">     *Inform the graphics library that you are ready with the flushing*/</span></span><br><span class="line">    lv_disp_flush_ready(disp_drv);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>


<p><a href="https://blog.csdn.net/qq_26106317/article/details/110388197">输入设备</a></p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">touchpad_read</span><span class="params">(<span class="type">lv_indev_drv_t</span> * indev_drv, <span class="type">lv_indev_data_t</span> * data)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_coord_t</span> last_x = <span class="number">0</span>;</span><br><span class="line">    <span class="type">static</span> <span class="type">lv_coord_t</span> last_y = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Save the pressed coordinates and the state*/</span></span><br><span class="line">        <span class="comment">/*Save the pressed coordinates and the state*/</span></span><br><span class="line">    <span class="keyword">if</span>(!XPT2046_EXTI_Read()) </span><br><span class="line">    &#123;</span><br><span class="line">        touchpad_get_xy(&amp;last_x, &amp;last_y);</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_PR;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;x=%d,y=%d\r\n&quot;</span>,last_x,last_y);</span><br><span class="line">    &#125; <span class="keyword">else</span> </span><br><span class="line">    &#123;</span><br><span class="line">        data-&gt;state = LV_INDEV_STATE_REL;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/*Set the last pressed coordinates*/</span></span><br><span class="line">    data-&gt;point.x = last_x;</span><br><span class="line">    data-&gt;point.y = last_y;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Return true is the touchpad is pressed*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">bool</span> <span class="title function_">touchpad_is_pressed</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*Get the x and y coordinates if the touchpad is pressed*/</span></span><br><span class="line"><span class="type">static</span> <span class="type">void</span> <span class="title function_">touchpad_get_xy</span><span class="params">(<span class="type">lv_coord_t</span> * x, <span class="type">lv_coord_t</span> * y)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/*Your code comes here*/</span></span><br><span class="line">    (*x) = <span class="number">319</span>-XPT2046_ReadAdc_Fliter(XPT2046_CHANNEL_Y)*<span class="number">320</span>/<span class="number">4095</span>;</span><br><span class="line">    (*y) = <span class="number">479</span>-XPT2046_ReadAdc_Fliter(XPT2046_CHANNEL_X)*<span class="number">480</span>/<span class="number">4095</span>;<span class="comment">//4095-</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><a href="https://blog.csdn.net/qq_26106317/article/details/111224350">文件系统</a></p>
<h2 id="心跳1-10，一般取5"><a href="#心跳1-10，一般取5" class="headerlink" title="心跳1~10，一般取5"></a>心跳1~10，一般取5</h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">lv_tick_inc( tick );</span><br><span class="line">lv_task_handler();</span><br><span class="line"></span><br><span class="line">lv_conf.h</span><br></pre></td></tr></table></figure>

<p><a href="https://www.nxp.com/design/software/development-software/gui-guider:GUI-GUIDER?&tab=Design_Tools_Tab">GUI Guider</a></p>
]]></content>
      <categories>
        <category>lvgl</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>lvgl</tag>
      </tags>
  </entry>
  <entry>
    <title>express</title>
    <url>/2024/12/24/nodejs/express/</url>
    <content><![CDATA[<h2 id="一、安装Node-js"><a href="#一、安装Node-js" class="headerlink" title="一、安装Node.js"></a>一、安装Node.js</h2><p>进入Node.js官网下载并安装，选exe,添加环境变量</p>
<p>在使用npm命令时，如果直接从国外的仓库下载依赖，有时候下载速度很慢，甚至会下载不下来。这时我们可以更换npm的仓库源，提高下载速度。</p>
<p>查看npm源地址：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config get registry</span><br></pre></td></tr></table></figure>
<p>更换npm源为淘宝镜像：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org/</span><br></pre></td></tr></table></figure>

<p>如果设置了npm为淘宝镜像，需要恢复为默认源时：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm config set registry https://registry.npmjs.org/</span><br></pre></td></tr></table></figure>
<p>设置好之后，记得通过 npm config get registry 查看源是否设置成功。</p>
<p>注意：如果只是想临时更换源地址，可以进行如下操作:</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install packagname -g --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>
<p>国内npm源地址</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm 官方原始镜像：https://registry.npmjs.org/</span><br><span class="line">淘宝 NPM 镜像：https://registry.npm.taobao.org</span><br><span class="line">阿里云 NPM 镜像：https://npm.aliyun.com</span><br><span class="line">腾讯云 NPM 镜像：https://mirrors.cloud.tencent.com/npm/</span><br><span class="line">华为云 NPM 镜像：https://mirrors.huaweicloud.com/repository/npm/</span><br><span class="line">网易 NPM 镜像：https://mirrors.163.com/npm/</span><br><span class="line">中科院大学开源镜像站：http://mirrors.ustc.edu.cn/</span><br><span class="line">清华大学开源镜像站：https://mirrors.tuna.tsinghua.edu.cn/</span><br></pre></td></tr></table></figure>

<h2 id="二、安装express和express-generator"><a href="#二、安装express和express-generator" class="headerlink" title="二、安装express和express-generator"></a>二、安装express和express-generator</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">npm install -g express</span><br><span class="line">npm install -g express-generator</span><br></pre></td></tr></table></figure>
<h2 id="三、生成项目"><a href="#三、生成项目" class="headerlink" title="三、生成项目"></a>三、生成项目</h2><p>在项目名称的后面添加 -e 那么创建出来的模板文件就是.ejs类型，语法是与html相同</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">express APP_NAME -e</span><br></pre></td></tr></table></figure>

<h2 id="四、使用框架"><a href="#四、使用框架" class="headerlink" title="四、使用框架"></a>四、使用框架</h2><p>index.ejs内容修改，跳转html</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">window</span>.<span class="property">location</span>.<span class="title function_">replace</span>(<span class="string">&quot;index.html&quot;</span>);</span></span><br><span class="line"><span class="language-javascript">    </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>模板web网页全部放入public文件夹下</p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="将ejs文件改为html"><a href="#将ejs文件改为html" class="headerlink" title="将ejs文件改为html"></a>将ejs文件改为html</h3><p>若希望模板文件的后缀为.html(通常只是为了看着更舒服)，那么在手动将.ejs换成.html后，还需要对app.js文件进行设置</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">// view engine setup</span></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;ejs&#x27;</span>);</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;views&#x27;</span>, path.<span class="title function_">join</span>(__dirname, <span class="string">&#x27;views&#x27;</span>));</span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;.html&#x27;</span>, <span class="built_in">require</span>(<span class="string">&#x27;ejs&#x27;</span>).<span class="property">__express</span>);</span><br><span class="line">app.<span class="title function_">set</span>(<span class="string">&#x27;view engine&#x27;</span>, <span class="string">&#x27;html&#x27;</span>);  <span class="comment">//app.set(&#x27;view engine&#x27;, &#x27;ejs&#x27;);</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="渲染"><a href="#渲染" class="headerlink" title="渲染"></a>渲染</h3><p>将需要渲染的文件放入views文件，静态文件放入public文件夹<br>放入views的文件，需要在index.js中添加路由，类似</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">title</span>: <span class="string">&#x27;Express /&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/index.html&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; <span class="attr">title</span>: <span class="string">&#x27;Express index&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/services.html&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;services&#x27;</span>, &#123; <span class="attr">title</span>: <span class="string">&#x27;Express2&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h3 id="显示所有图片示例"><a href="#显示所有图片示例" class="headerlink" title="显示所有图片示例"></a>显示所有图片示例</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&lt;% for(let i = 0 ; i<span class="tag">&lt;<span class="name">image.length</span> ; <span class="attr">i</span>++)&#123; %&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">loading</span>=<span class="string">&quot;lazy&quot;</span> <span class="attr">src</span>=&lt;%= <span class="string">image[i]</span> %&gt;</span> alt=&quot;Smiley face&quot; width=&quot;200&quot; height=&quot;200&quot;&gt;</span><br><span class="line">&lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;</span><br><span class="line">    <span class="attr">title</span>: <span class="string">&#x27;Express&#x27;</span>,</span><br><span class="line">    <span class="attr">display</span>: <span class="string">&quot;image&quot;</span>,</span><br><span class="line">    <span class="attr">image</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">      <span class="keyword">var</span> re = fs.<span class="title function_">readdirSync</span>(<span class="string">&#x27;public/images&#x27;</span>)</span><br><span class="line">      <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; re.<span class="property">length</span>; i++)</span><br><span class="line">        re[i] = <span class="string">&#x27;images/&#x27;</span> + re[i];</span><br><span class="line">      <span class="keyword">return</span> re;</span><br><span class="line">    &#125;(),</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>express</tag>
      </tags>
  </entry>
  <entry>
    <title>nodejs传文件</title>
    <url>/2024/12/24/nodejs/sendfile/</url>
    <content><![CDATA[<h1 id="nodejs传文件"><a href="#nodejs传文件" class="headerlink" title="nodejs传文件"></a>nodejs传文件</h1><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&#x27;fs&#x27;</span>)</span><br><span class="line"><span class="keyword">const</span> pathLib = <span class="built_in">require</span>(<span class="string">&#x27;path&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> objMulter = <span class="title function_">multer</span>(&#123;<span class="attr">dest</span>: <span class="string">&#x27;./upload/&#x27;</span>&#125;)</span><br><span class="line"><span class="comment">// 基于express框架的node服务器</span></span><br><span class="line"><span class="keyword">var</span> server = <span class="title function_">express</span>()</span><br><span class="line"><span class="comment">// 允许所有类型的文件传递过来</span></span><br><span class="line">server.<span class="title function_">use</span>(objMulter.<span class="title function_">any</span>())</span><br><span class="line">server.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req,res</span>)&#123;</span><br><span class="line">    <span class="comment">// 因为上传过来的文件名称比较复杂,我们需要给文件重新命名</span></span><br><span class="line">    <span class="keyword">var</span> newName = req.<span class="property">files</span>[<span class="number">0</span>].<span class="property">path</span>+pathLib.<span class="title function_">parse</span>(req.<span class="property">files</span>[<span class="number">0</span>].<span class="property">originalname</span>).<span class="property">ext</span></span><br><span class="line">    <span class="comment">// 利用fs模块的文件重命名</span></span><br><span class="line">    <span class="comment">// req.files[0].path这个是文件的在传递中被修改的名字，newName是文件原名称,function回调函数</span></span><br><span class="line">    fs.<span class="title function_">rename</span>(req.<span class="property">files</span>[<span class="number">0</span>].<span class="property">path</span>, newName, <span class="keyword">function</span>(<span class="params">err</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(err)&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&#x27;失败&#x27;</span>)</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            res.<span class="title function_">send</span>(<span class="string">&#x27;成功&#x27;</span>)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line">server.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span> (<span class="params">req, res</span>) &#123;</span><br><span class="line">   <span class="comment">/*res.send(&quot;./upload.html&quot;);*/</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line">	res.<span class="title function_">sendFile</span>(<span class="string">&quot;index.html&quot;</span>,&#123;<span class="attr">root</span>:__dirname&#125;);</span><br><span class="line">&#125;) </span><br><span class="line"><span class="comment">// 监听端口</span></span><br><span class="line"><span class="keyword">var</span> app = server.<span class="title function_">listen</span>(<span class="number">8081</span>,<span class="string">&#x27;192.168.168.238&#x27;</span>,<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="keyword">var</span> host = app.<span class="title function_">address</span>().<span class="property">address</span></span><br><span class="line">  <span class="keyword">var</span> port = app.<span class="title function_">address</span>().<span class="property">port</span></span><br><span class="line"> </span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;地址为 http://%s:%s&quot;</span>, host, port)</span><br><span class="line">	</span><br><span class="line">&#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure>



<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">form</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line">      文件：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;f1&quot;</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;上传&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>nodejs</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>express</tag>
      </tags>
  </entry>
  <entry>
    <title>RTT Viewer</title>
    <url>/2024/12/24/openocd/RTT_Viewer/</url>
    <content><![CDATA[<h1 id="pyOCD"><a href="#pyOCD" class="headerlink" title="pyOCD"></a>pyOCD</h1><p>显示目标</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd list --target</span><br></pre></td></tr></table></figure>
<p>RTT连接</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd rtt -t STM32H750VBTx</span><br></pre></td></tr></table></figure>
<p>如果不能显示，需要加地址(.bss段)</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.bss                                     0x20000838   Section     1208  segger_rtt.o(.bss)</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd rtt -t target -a `address`</span><br></pre></td></tr></table></figure>

<p>搜索包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd pack find STM32H750VB</span><br></pre></td></tr></table></figure>
<p>安装包</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd pack install STM32H750VB</span><br></pre></td></tr></table></figure>
<p>烧录</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd flash -t nrf52 xx.hex</span><br></pre></td></tr></table></figure>
<p>擦除</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyocd erase -t nrf52</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>OCD</category>
        <category>pyocd</category>
      </categories>
      <tags>
        <tag>OCD</tag>
        <tag>pyocd</tag>
      </tags>
  </entry>
  <entry>
    <title>gdb</title>
    <url>/2024/12/24/openocd/arm-none-eabi-gdb/</url>
    <content><![CDATA[<h1 id="arm-none-eabi-gdb"><a href="#arm-none-eabi-gdb" class="headerlink" title="arm-none-eabi-gdb"></a><code>arm-none-eabi-gdb</code></h1><h2 id="使用说明文档"><a href="#使用说明文档" class="headerlink" title="使用说明文档"></a>使用说明文档</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">C:\Program Files (x86)\GNU Arm Embedded Toolchain\9 2020-q2-update\share\doc\gcc-arm-none-eabi\pdf\gdb.pdf</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#-ex使用外部指令</span></span><br><span class="line">arm-none-eabi-gdb *.elf -ex <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line"><span class="comment">#也可指令分开</span></span><br><span class="line">arm-none-eabi-gdb *.elf</span><br><span class="line">target remote localhost:3333</span><br></pre></td></tr></table></figure>

<h2 id="常用指令"><a href="#常用指令" class="headerlink" title="常用指令"></a>常用指令</h2><table>
<thead>
<tr>
<th>指令</th>
<th>含义</th>
<th>例子</th>
<th>备注</th>
</tr>
</thead>
<tbody><tr>
<td>monitor cmd</td>
<td>执行指令</td>
<td>reset halt load</td>
<td></td>
</tr>
<tr>
<td>c <code>continue</code></td>
<td>继续执行</td>
<td></td>
<td></td>
</tr>
<tr>
<td>s <code>step</code></td>
<td>单步执行</td>
<td></td>
<td></td>
</tr>
<tr>
<td>b <code>break</code></td>
<td>断点</td>
<td><code>b main.c:111</code></td>
<td>main.c 111行</td>
</tr>
<tr>
<td></td>
<td></td>
<td><code>b test</code></td>
<td>函数test</td>
</tr>
<tr>
<td></td>
<td></td>
<td><code>b if a == 1</code></td>
<td>条件</td>
</tr>
<tr>
<td></td>
<td></td>
<td><code>b if a = 1</code></td>
<td>赋值</td>
</tr>
<tr>
<td>n <code>next</code></td>
<td>下一断点</td>
<td></td>
<td></td>
</tr>
<tr>
<td>u <code>until</code></td>
<td>到达指定位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>f <code>frame</code></td>
<td>当前断点</td>
<td></td>
<td></td>
</tr>
<tr>
<td>finish</td>
<td>退出函数</td>
<td></td>
<td></td>
</tr>
<tr>
<td>i <code>info</code></td>
<td>显示信息</td>
<td></td>
<td></td>
</tr>
<tr>
<td>d <code>delete</code></td>
<td>删除显示 断点</td>
<td></td>
<td></td>
</tr>
<tr>
<td>display</td>
<td>显示变量，每次停顿都显示</td>
<td></td>
<td></td>
</tr>
<tr>
<td>p <code>print</code></td>
<td>打印变量</td>
<td></td>
<td></td>
</tr>
<tr>
<td>q <code>quit</code></td>
<td>退出</td>
<td></td>
<td></td>
</tr>
<tr>
<td>where</td>
<td>位置</td>
<td></td>
<td></td>
</tr>
<tr>
<td>list</td>
<td>显示代码</td>
<td></td>
<td></td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>OCD</category>
        <category>gdb</category>
      </categories>
      <tags>
        <tag>OpenOCD</tag>
        <tag>gdb</tag>
      </tags>
  </entry>
  <entry>
    <title>OpenOCD</title>
    <url>/2024/12/24/openocd/openocd/</url>
    <content><![CDATA[<h1 id="OpenOCD"><a href="#OpenOCD" class="headerlink" title="OpenOCD"></a><code>OpenOCD</code></h1><p><a href="../main.md">返回主页</a></p>
<blockquote>
<p><a href="https://blog.csdn.net/u013671216/article/details/106170433">参考1</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/61538230">参考2</a></p>
</blockquote>
<blockquote>
<p><a href="https://zhuanlan.zhihu.com/p/61541590">参考3</a></p>
</blockquote>
<h3 id="openocd与dap连接测试"><a href="#openocd与dap连接测试" class="headerlink" title="openocd与dap连接测试"></a>openocd与dap连接测试</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openocd -f interface/cmsis-dap.cfg</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">openocd -f &lt;接口配置文件&gt; -f &lt;芯片配置文件&gt; -c &lt;执行命令&gt;</span><br></pre></td></tr></table></figure>
<p>openocd -f openocd.cfg</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#openocd.cfg</span></span><br><span class="line"><span class="comment">#选择调试器</span></span><br><span class="line"><span class="built_in">source</span> [find interface/cmsis-dap.cfg]</span><br><span class="line"><span class="comment"># 选择接口为SWD</span></span><br><span class="line">transport <span class="keyword">select</span> swd</span><br><span class="line"><span class="comment"># 选择目标芯片</span></span><br><span class="line"><span class="built_in">source</span> [find target/stm32f4x.cfg]</span><br></pre></td></tr></table></figure>
<h2 id="openocd运行测试"><a href="#openocd运行测试" class="headerlink" title="openocd运行测试"></a><code>openocd运行测试</code></h2><ul>
<li><ol>
<li>连接本机端口</li>
</ol>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">telnet localhost 4444</span><br></pre></td></tr></table></figure></li>
<li><ol start="2">
<li>指令<code>reset，halt，flash write_image,exit</code><br>openocd运行后，shell被占用，另开终端</li>
</ol>
  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">flash write_image *.hex</span><br></pre></td></tr></table></figure></li>
<li><ol start="3">
<li>启动GDB  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">arm-none-eabi-gdb *.elf</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><ol start="4">
<li>GDB连接openocd  <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">target remote localhost:3333</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li><ol start="5">
<li><code>monitor reset,halt,load</code>开始GDB调试<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">openocd -f openocd.cfg -c init -c halt -c <span class="string">&quot;flash write_image erase E:/MCU/STM32L431RC-BearPi/usart1-fpu-test/build/usart1-fpu-test.bin 0x08000000&quot;</span></span><br><span class="line">//或</span><br><span class="line">openocd -f board/stm32f3discovery.cfg -c <span class="string">&quot;program filename.elf verify reset exit&quot;</span></span><br><span class="line"></span><br><span class="line">openocd -f  interface/stlink.cfg -f target/stm32f2x.cfg -c init -c halt -c <span class="string">&quot;program $^ verify reset exit&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ol>
</li>
</ul>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">PREFIX = arm-none-eabi-</span><br><span class="line"></span><br><span class="line">CC = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>gcc</span><br><span class="line">AS = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>gcc -x assembler-with-cpp</span><br><span class="line">CP = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>objcopy</span><br><span class="line">SZ = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>size</span><br><span class="line">DB = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>gdb</span><br><span class="line"></span><br><span class="line"><span class="section">flash: <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.hex</span></span><br><span class="line">	openocd -f openocd.cfg -c init -c halt -c <span class="string">&quot;program <span class="variable">$^</span> verify reset exit&quot;</span></span><br><span class="line"><span class="comment">#	&quot;flash write_image erase build/F407.hex&quot; -c reset -c exit</span></span><br><span class="line"><span class="comment">#	&quot;flash write_image erase E:/MCU/STM32L431RC-BearPi/usart1-fpu-test/build/usart1-fpu-test.bin&quot;</span></span><br><span class="line"><span class="comment">#&quot;*.bin 0x08000000&quot;</span></span><br><span class="line"><span class="section">debug: #<span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.hex</span></span><br><span class="line">	openocd -f interface/cmsis-dap.cfg -f target/stm32f4x.cfg -c <span class="string">&quot;transport select swd&quot;</span> &amp;</span><br><span class="line">	<span class="variable">$(DB)</span> <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.elf -ex <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">exit:</span></span><br><span class="line">	taskkill -f -im openocd.exe</span><br></pre></td></tr></table></figure>

<p><a href="https://openocd.org/doc-release/html/Flash-Programming.html#Flash-Programming">openocd program</a></p>
<h3 id="telnet功能打开：windows功能-telnet-client"><a href="#telnet功能打开：windows功能-telnet-client" class="headerlink" title="telnet功能打开：windows功能-&gt;telnet client"></a>telnet功能打开：windows功能-&gt;telnet client</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">telnet localhost 4444</span><br></pre></td></tr></table></figure>

<p>SVD文件：芯片寄存器描述  <a href="https://github.com/posborne/cmsis-svd">SVD 文件下载</a></p>
<p><a href="https://zhuanlan.zhihu.com/p/74897601">GDB使用</a></p>
<p><a href="http://www.armfly.com/download/H7-TOOL/h7toolPC_release(V2.0.8).zip">RTT viewer</a></p>
<h2 id="b打断点"><a href="#b打断点" class="headerlink" title="b打断点"></a>b打断点</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">b <span class="keyword">if</span> a = 10#强行赋值a=10</span><br><span class="line">b <span class="keyword">if</span> a == 10#等到a=10时停止 可用作条件，如a%5 == 0，局部变量需要运行到函数内部</span><br></pre></td></tr></table></figure>

<p><a href="https://cloud.tencent.com/developer/article/1662697?from=15425">linux下安装</a></p>
<h3 id="libtool-hidapi安装"><a href="#libtool-hidapi安装" class="headerlink" title="libtool hidapi安装"></a>libtool hidapi安装</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install libtool-bin</span><br><span class="line"><span class="built_in">sudo</span> apt-get install hidapi-dev</span><br></pre></td></tr></table></figure>

<h2 id="VScode仿真"><a href="#VScode仿真" class="headerlink" title="VScode仿真"></a>VScode仿真</h2><h3 id="launch-json"><a href="#launch-json" class="headerlink" title="launch.json"></a>launch.json</h3><p><code>cortex-debug</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="comment">// 使用 IntelliSense 了解相关属性。 </span></span><br><span class="line">    <span class="comment">// 悬停以查看现有属性的描述。</span></span><br><span class="line">    <span class="comment">// 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.2.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configurations&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Cortex Debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;executable&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;/build/F407.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cortex-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">            </span><br><span class="line">            <span class="attr">&quot;device&quot;</span><span class="punctuation">:</span><span class="string">&quot;STM32F407VE&quot;</span><span class="punctuation">,</span>        <span class="comment">//使用J-link GDB Server时必须；其他GBD Server时可选（有可能帮助自动选择SVD文件）。支持的设备见 https://www.segger.com/downloads/supported-devices.php</span></span><br><span class="line">            <span class="attr">&quot;svdFile&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./STM32F407.svd&quot;</span><span class="punctuation">,</span>  <span class="comment">//svd文件，有这个文件才能查看寄存器的值，每个单片机都不同。可以在以下地址找到 https://github.com/posborne/cmsis-svd</span></span><br><span class="line">            <span class="attr">&quot;servertype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openocd&quot;</span><span class="punctuation">,</span>       <span class="comment">//使用的GDB Server</span></span><br><span class="line">            <span class="attr">&quot;configFiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span>                  </span><br><span class="line">                <span class="string">&quot;$&#123;workspaceRoot&#125;/openocd.cfg&quot;</span></span><br><span class="line">            <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="comment">//&quot;preLaunchTask&quot;: &quot;build&quot;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p><code>gdb</code></p>
<pre><code class="json">&#123;

    &quot;version&quot;: &quot;0.2.0&quot;,
    &quot;configurations&quot;: [
        &#123;
            &quot;name&quot;: &quot;ARM Debug&quot;,
            &quot;type&quot;: &quot;cppdbg&quot;,                                                       
            &quot;request&quot;: &quot;launch&quot;,                                                    
            &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;/build/F407.elf&quot;,   // 要调试的程序（在下面的参数中指定了，这里的没有意义）
            &quot;args&quot;: [],                                                             
            &quot;stopAtEntry&quot;: false,                                                  
            &quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,
            &quot;environment&quot;: [],
            &quot;externalConsole&quot;: true,  
 // 调试时是否显示控制台窗口
            &quot;MIMode&quot;: &quot;gdb&quot;,
            &quot;miDebuggerPath&quot;: &quot;C:\\Program Files (x86)\\GNU Arm Embedded Toolchain\\9 2020-q2-update\\bin\\arm-none-eabi-gdb.exe&quot;,
 //调试工具原始路径

            &quot;targetArchitecture&quot;: &quot;arm&quot;,                                            //目标架构，此参数必须要有

            &quot;setupCommands&quot;: [                                                      // 进入GDB以后，自动执行的一些配置  
               &#123;
                    &quot;description&quot;: &quot;选择调试文件(.elf)到gdb&quot;,
                    &quot;text&quot;: &quot;file D:/practise/F407_Disc/build/F407.elf&quot;, //此处不能使用$&#123;workspaceFolder&#125;，因为windows下分隔符是&#39;\\&#39;，gdb识别不出来
                    &quot;ignoreFailures&quot;: false
                &#125;,
                &#123;
                    &quot;description&quot;: &quot;连接GDB Server&quot;,
                    &quot;text&quot;: &quot;target remote localhost:3333&quot;,                                 
                    &quot;ignoreFailures&quot;: false
                &#125;,
                &#123;
                    &quot;description&quot;: &quot;Reset MCU&quot;,
                    &quot;text&quot;: &quot;monitor reset&quot;,                                              
                    &quot;ignoreFailures&quot;: false
                &#125;,
                &#123;
                    &quot;description&quot;: &quot;Halt&quot;,
                    &quot;text&quot;: &quot;monitor halt&quot;,                                                  
                    &quot;ignoreFailures&quot;: false
                &#125;,
                &#123;
                    &quot;description&quot;:&quot;下载代码到MCU&quot;,
                    &quot;text&quot;: &quot;load&quot; ,              
                    &quot;ignoreFailures&quot;: false                                      
                &#125;
            ],
            //&quot;preLaunchTask&quot;: &quot;build&quot;,                                           // 在调试前预先执行的任务，此处是tasks.json中的
        &#125;
    ]
&#125;
`
</code></pre>
]]></content>
      <categories>
        <category>OCD</category>
        <category>OpenOCD</category>
      </categories>
      <tags>
        <tag>OCD</tag>
        <tag>OpenOCD</tag>
      </tags>
  </entry>
  <entry>
    <title>pyocd</title>
    <url>/2024/12/24/openocd/pyocd/</url>
    <content><![CDATA[<h1 id="pyocd"><a href="#pyocd" class="headerlink" title="pyocd"></a>pyocd</h1><p><a href="../main.md">返回主页</a></p>
<table>
<thead>
<tr>
<th>列表</th>
<th>指令</th>
</tr>
</thead>
<tbody><tr>
<td>列出可用的探针</td>
<td>pyocd list –probes</td>
</tr>
<tr>
<td>列出所有支持的目标板</td>
<td>pyocd list –targets</td>
</tr>
<tr>
<td>列出所有支持的开发板</td>
<td>pyocd list –boards</td>
</tr>
<tr>
<td>json列出可用的探针</td>
<td>pyocd json –probes</td>
</tr>
<tr>
<td>json列出所有支持的目标板</td>
<td>pyocd json –targets</td>
</tr>
<tr>
<td>json列出所有支持的开发板</td>
<td>pyocd json –boards</td>
</tr>
</tbody></table>
<h2 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h2><p>pyocd cmd –command load template.hex –target stm32f103rc</p>
<h2 id="连接"><a href="#连接" class="headerlink" title="连接"></a>连接</h2><p>pyocd cmd –connect halt –target stm32f103rc</p>
<h2 id="设置断点"><a href="#设置断点" class="headerlink" title="设置断点"></a>设置断点</h2><p>pyocd cmd –command break 0x0800029e  –target stm32f103rc</p>
<table>
<thead>
<tr>
<th>指令</th>
<th>功能</th>
</tr>
</thead>
<tbody><tr>
<td>go</td>
<td>运行</td>
</tr>
<tr>
<td>reset</td>
<td>复位</td>
</tr>
<tr>
<td>halt</td>
<td>暂停</td>
</tr>
<tr>
<td>reg</td>
<td>查看寄存器</td>
</tr>
<tr>
<td>status</td>
<td>状态</td>
</tr>
<tr>
<td>step</td>
<td>单步</td>
</tr>
<tr>
<td>break</td>
<td>断点</td>
</tr>
<tr>
<td>lsbreak</td>
<td>查看断点</td>
</tr>
<tr>
<td>rmbreak</td>
<td>删除断点</td>
</tr>
<tr>
<td>load</td>
<td>下载</td>
</tr>
<tr>
<td>erase</td>
<td>擦除</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>OCD</category>
        <category>pyocd</category>
      </categories>
      <tags>
        <tag>OCD</tag>
        <tag>pyocd</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode配置</title>
    <url>/2024/12/24/openocd/vscode/</url>
    <content><![CDATA[<h1 id="vscode配置"><a href="#vscode配置" class="headerlink" title="vscode配置"></a>vscode配置</h1><h2 id="配置用户任务（下拉菜单）"><a href="#配置用户任务（下拉菜单）" class="headerlink" title="配置用户任务（下拉菜单）"></a>配置用户任务（下拉菜单）</h2><p>1-tasks.json<br>在这里（ Tasks in Visual Studio Code）了解关于tasks.json的作用，简单来说，就是vscode设计的专门配置如何调用外部功能的接口，因为这些外部的功能如make, lint等是开发环节中的重要部分，而且大部分是命令行式的。这一段所描述的所有内容都可以在这个链接里找到，建议认真阅读原文，要查看具体字段如”group”使用说明可以直接在网页里搜索。再简单来说，有了tasks.json就可以配置用户自己的下接菜单。</p>
<p>2-创建tasks.json<br>有两个方法，一、手动自己创建.vscode&#x2F;tasks.json, 因为文件内容比较简单所以完全可以自己创建，省得记忆下面提到创建方法路径， 二、菜单的Terminal-&gt;configure tasks… 或者用CTRL+P 弹出输入框，输入‘&gt;Task’列表显示一堆，选择“Tasks:Config Task”继续选择Creat tasks.json file from template 。 这里差别不大，因为我们只是要一个文件，然后里面内容删掉重写。</p>
<p> 3-tasks.json的文件编辑<br>针对stm32开发的用到的功能只是tasks.json中很简单的一块，这里一共定义了6个task，分别说明如下，</p>
<p>调用make指令执行编译，实际执行的命令行是‘make all -j4’调用4核全力执行</p>
<p>调用make指令执行清理工程，实际执行‘make clean’,删除build目录及内容</p>
<p>jlink的下载，实际执行的是‘make -j4 jflash’</p>
<p>jlink的擦除，实际执行的是‘make jerase’</p>
<p>stlink的下载，实际执行的是 ‘make -j4 stflash’</p>
<p>stlink的擦除，实际执行的是‘st-flash –freq&#x3D;4000 erase’</p>
<p>这里注意，第6个task没有通过makefile执行，而是直接调用st-flash指令，当然也可以从makefile里执行，调用’make sterase’即可。这表明tasks.json可以让vscode调用任意外部功能，如make.exe和st-flash.exe。</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="comment">// MAKE(BUILD + CLEAN) </span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;all&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;-j4&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;clean&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// JLINK (FLASH + ERASE)</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-jflash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">                <span class="string">&quot;-j4&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="string">&quot;jflash&quot;</span></span><br><span class="line">            <span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-jerase&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;jerase&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="comment">// STLINK (FLASH+ERASE)</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-stflash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;-j4&quot;</span><span class="punctuation">,</span> <span class="string">&quot;stflash&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-sterase&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;st-flash&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="string">&quot;--freq=4000&quot;</span><span class="punctuation">,</span><span class="string">&quot;erase&quot;</span><span class="punctuation">]</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
<p>4-tasks的使用方法<br>CTRL+SHIFT+B 或 Terminal-&gt;Run Build Task… 即可调出‘下拉菜单’，通过方向键选择并按回车执行。‘下拉菜单’中各项名称就是tasks.json中对应的”label”参数配置的。‘下拉菜单’的执行效果等同于键入对应的命令行。</p>
<h2 id="自定义vscode命令快捷键"><a href="#自定义vscode命令快捷键" class="headerlink" title="自定义vscode命令快捷键"></a>自定义vscode命令快捷键</h2><p>打开 VS Code 并进入命令面板。你可以按下 F1 或 Ctrl+Shift+P（Windows 和 Linux）&#x2F; Cmd+Shift+P（Mac）打开命令面板。</p>
<p>在命令面板中输入“Preferences: Open Keyboard Shortcuts（JSON）”，然后选择打开。这将打开一个名为 keybindings.json 的文件，其中包含你的自定义键绑定。</p>
<p>点击Define Keybinding输入自定义键</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Place your key bindings in this file to override the defaults</span></span><br><span class="line"><span class="punctuation">[</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+l&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workbench.action.terminal.sendSequence&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;text&quot;</span><span class="punctuation">:</span> <span class="string">&quot;make\n&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;when&quot;</span><span class="punctuation">:</span> <span class="string">&quot;editorTextFocus&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;key&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ctrl+f7&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;workbench.action.tasks.runTask&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;args&quot;</span><span class="punctuation">:</span> <span class="string">&quot;task-jerase&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">]</span></span><br></pre></td></tr></table></figure>
<p>解释：<br>按键ctrl+l在终端下输入make换行，即输入执行make指令<br>按键ctrl+f7在上述任务重运行task-jerase</p>
<h2 id="vscode-debug"><a href="#vscode-debug" class="headerlink" title="vscode debug"></a>vscode debug</h2><p>add configuration</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;cwd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;$&#123;workspaceRoot&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;executable&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./bin/executable.elf&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Debug with OpenOCD&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;request&quot;</span><span class="punctuation">:</span> <span class="string">&quot;launch&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cortex-debug&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;servertype&quot;</span><span class="punctuation">:</span> <span class="string">&quot;openocd&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;configFiles&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;searchDir&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;runToEntryPoint&quot;</span><span class="punctuation">:</span> <span class="string">&quot;main&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;showDevDebugOutput&quot;</span><span class="punctuation">:</span> <span class="string">&quot;none&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br></pre></td></tr></table></figure>
<p>修改executable,configFiles<br>executable:编译结果，elf文件<br>comfigFiles:openocd配置文件，可以多个</p>
<h2 id="排除搜索"><a href="#排除搜索" class="headerlink" title="排除搜索"></a>排除搜索</h2><h3 id="settings-json"><a href="#settings-json" class="headerlink" title="settings.json"></a>settings.json</h3><figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;search.exclude&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;**/modules&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;files.exclude&quot;</span><span class="punctuation">:</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;*/.git&quot;</span><span class="punctuation">:</span><span class="literal"><span class="keyword">true</span></span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>vscode</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>Matplotlib</title>
    <url>/2024/12/24/python/Matplotlib/</url>
    <content><![CDATA[<h1 id="Matplotlib-是一款用于数据可视化的-Python-软件包，支持跨平台运行"><a href="#Matplotlib-是一款用于数据可视化的-Python-软件包，支持跨平台运行" class="headerlink" title="Matplotlib 是一款用于数据可视化的 Python 软件包，支持跨平台运行"></a>Matplotlib 是一款用于数据可视化的 Python 软件包，支持跨平台运行</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="http://c.biancheng.net/matplotlib/labels-ticks.html">说明链接</a></p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">pip install matplotlib</span><br></pre></td></tr></table></figure>

<h2 id="使用Agg无法显示，使用"><a href="#使用Agg无法显示，使用" class="headerlink" title="使用Agg无法显示，使用"></a>使用Agg无法显示，使用</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span> (matplotlib.get_backend())</span><br><span class="line">matplotlib.use(<span class="string">&#x27;TkAgg&#x27;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="绘图类型"><a href="#绘图类型" class="headerlink" title="绘图类型"></a>绘图类型</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Bar</td>
<td>绘制条形图</td>
</tr>
<tr>
<td>Barh</td>
<td>绘制水平条形图</td>
</tr>
<tr>
<td>Boxplot</td>
<td>绘制箱型图</td>
</tr>
<tr>
<td>Hist</td>
<td>绘制直方图</td>
</tr>
<tr>
<td>his2d</td>
<td>绘制2D直方图</td>
</tr>
<tr>
<td>Pie</td>
<td>绘制饼状图</td>
</tr>
<tr>
<td>Plot</td>
<td>在坐标轴上画线或者标记</td>
</tr>
<tr>
<td>Polar</td>
<td>绘制极坐标图</td>
</tr>
<tr>
<td>Scatter</td>
<td>绘制x与y的散点图</td>
</tr>
<tr>
<td>Stackplot</td>
<td>绘制堆叠图</td>
</tr>
<tr>
<td>Stem</td>
<td>用来绘制二维离散数据绘制（又称为“火柴图”）</td>
</tr>
<tr>
<td>Step</td>
<td>绘制阶梯图</td>
</tr>
<tr>
<td>Quiver</td>
<td>绘制一个二维按箭头</td>
</tr>
</tbody></table>
<h2 id="Image函数"><a href="#Image函数" class="headerlink" title="Image函数"></a>Image函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Imread</td>
<td>从文件中读取图像的数据并形成数组。</td>
</tr>
<tr>
<td>Imsave</td>
<td>将数组另存为图像文件。</td>
</tr>
<tr>
<td>Imshow</td>
<td>在数轴区域内显示图像。</td>
</tr>
</tbody></table>
<h2 id="Axis函数"><a href="#Axis函数" class="headerlink" title="Axis函数"></a>Axis函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Axes</td>
<td>在画布(Figure)中添加轴</td>
</tr>
<tr>
<td>Text</td>
<td>向轴添加文本</td>
</tr>
<tr>
<td>Title</td>
<td>设置当前轴的标题</td>
</tr>
<tr>
<td>Xlabel</td>
<td>设置x轴标签</td>
</tr>
<tr>
<td>Xlim</td>
<td>获取或者设置x轴区间大小</td>
</tr>
<tr>
<td>Xscale</td>
<td>设置x轴缩放比例</td>
</tr>
<tr>
<td>Xticks</td>
<td>获取或设置x轴刻标和相应标签</td>
</tr>
<tr>
<td>Ylabel</td>
<td>设置y轴的标签</td>
</tr>
<tr>
<td>Ylim</td>
<td>获取或设置y轴的区间大小</td>
</tr>
<tr>
<td>Yscale</td>
<td>设置y轴的缩放比例</td>
</tr>
<tr>
<td>Yticks</td>
<td>获取或设置y轴的刻标和相应标签</td>
</tr>
</tbody></table>
<h2 id="Figure函数"><a href="#Figure函数" class="headerlink" title="Figure函数"></a>Figure函数</h2><table>
<thead>
<tr>
<th>函数名称</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>Figtext</td>
<td>在画布上添加文本</td>
</tr>
<tr>
<td>Figure</td>
<td>创建一个新画布</td>
</tr>
<tr>
<td>Show</td>
<td>显示数字</td>
</tr>
<tr>
<td>Savefig</td>
<td>保存当前画布</td>
</tr>
<tr>
<td>Close</td>
<td>关闭画布窗口</td>
</tr>
</tbody></table>
<h2 id="中文"><a href="#中文" class="headerlink" title="中文"></a>中文</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&quot;font.sans-serif&quot;</span>]=[<span class="string">&quot;SimHei&quot;</span>] <span class="comment">#设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">&quot;axes.unicode_minus&quot;</span>]=<span class="literal">False</span> <span class="comment">#该语句解决图像中的“-”负号的乱码问题</span></span><br></pre></td></tr></table></figure>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#绘制折线图</span></span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line">plt.rcParams[<span class="string">&quot;font.sans-serif&quot;</span>]=[<span class="string">&quot;SimHei&quot;</span>] <span class="comment">#设置字体</span></span><br><span class="line">plt.rcParams[<span class="string">&quot;axes.unicode_minus&quot;</span>]=<span class="literal">False</span> <span class="comment">#正常显示负号</span></span><br><span class="line">year = [<span class="number">2017</span>, <span class="number">2018</span>, <span class="number">2019</span>, <span class="number">2020</span>]</span><br><span class="line">people = [<span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">70</span>]</span><br><span class="line"><span class="comment">#生成图表</span></span><br><span class="line">plt.plot(year, people)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;年份&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;人口&#x27;</span>)</span><br><span class="line">plt.title(<span class="string">&#x27;人口增长&#x27;</span>)</span><br><span class="line"><span class="comment">#设置纵坐标刻度</span></span><br><span class="line">plt.yticks([<span class="number">0</span>, <span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>])</span><br><span class="line"><span class="comment">#设置填充选项：参数分别对应横坐标，纵坐标，纵坐标填充起始值，填充颜色</span></span><br><span class="line">plt.fill_between(year, people, <span class="number">20</span>, color = <span class="string">&#x27;green&#x27;</span>)</span><br><span class="line"><span class="comment">#显示图表</span></span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>
<h2 id="设置刻度"><a href="#设置刻度" class="headerlink" title="设置刻度"></a>设置刻度</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">x = np.arange(<span class="number">0</span>, math.pi*<span class="number">2</span>, <span class="number">0.05</span>)</span><br><span class="line"><span class="comment">#生成画布对象</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment">#添加绘图区域</span></span><br><span class="line">ax = fig.add_axes([<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])</span><br><span class="line">y = np.sin(x)</span><br><span class="line">ax.plot(x, y)</span><br><span class="line"><span class="comment">#设置x轴标签</span></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;angle&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;sine&#x27;</span>)</span><br><span class="line">ax.set_xticks([<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br><span class="line"><span class="comment">#设置x轴刻度标签</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&#x27;zero&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;four&#x27;</span>,<span class="string">&#x27;six&#x27;</span>])</span><br><span class="line"><span class="comment">#设置y轴刻度</span></span><br><span class="line">ax.set_yticks([-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<h2 id="坐标轴"><a href="#坐标轴" class="headerlink" title="坐标轴"></a>坐标轴</h2><p>在一个函数图像中，有时自变量 x 与因变量 y 是指数对应关系，这时需要将坐标轴刻度设置为对数刻度。Matplotlib 通过 axes 对象的xscale或yscale属性来实现对坐标轴的格式设置。</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line">x = np.arange(<span class="number">0</span>, math.pi*<span class="number">2</span>, <span class="number">0.05</span>)</span><br><span class="line"><span class="comment">#生成画布对象</span></span><br><span class="line">fig = plt.figure()</span><br><span class="line"><span class="comment">#添加绘图区域</span></span><br><span class="line">ax = fig.add_axes([<span class="number">0.1</span>, <span class="number">0.1</span>, <span class="number">0.8</span>, <span class="number">0.8</span>])</span><br><span class="line">y = np.sin(x)</span><br><span class="line">ax.plot(x, y)</span><br><span class="line"><span class="comment">#设置x轴标签</span></span><br><span class="line">ax.set_xlabel(<span class="string">&#x27;angle&#x27;</span>)</span><br><span class="line">ax.set_title(<span class="string">&#x27;sine&#x27;</span>)</span><br><span class="line">ax.set_xticks([<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>])</span><br><span class="line"><span class="comment">#设置x轴刻度标签</span></span><br><span class="line">ax.set_xticklabels([<span class="string">&#x27;zero&#x27;</span>,<span class="string">&#x27;two&#x27;</span>,<span class="string">&#x27;four&#x27;</span>,<span class="string">&#x27;six&#x27;</span>])</span><br><span class="line"><span class="comment">#设置y轴刻度</span></span><br><span class="line">ax.set_yticks([-<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>])</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>csv数据显示例子</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="comment"># import pandas_profiling</span></span><br><span class="line">matplotlib.use(<span class="string">&#x27;TkAgg&#x27;</span>)</span><br><span class="line"><span class="comment"># print (matplotlib.get_backend())</span></span><br><span class="line"></span><br><span class="line">datafile = <span class="built_in">open</span>(<span class="string">&quot;./data.csv&quot;</span>)</span><br><span class="line">dataread = csv.reader(datafile)</span><br><span class="line">datalist = <span class="built_in">list</span>(dataread)</span><br><span class="line">dataline = <span class="built_in">len</span>(datalist)</span><br><span class="line">datarow = <span class="built_in">len</span>(datalist[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">x = <span class="built_in">list</span>()</span><br><span class="line">y = <span class="built_in">list</span>()</span><br><span class="line">z = <span class="built_in">list</span>()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,dataline):</span><br><span class="line">    x.append(<span class="built_in">float</span>(datalist[i][<span class="number">0</span>]))</span><br><span class="line">    y.append(<span class="built_in">float</span>(datalist[i][<span class="number">1</span>]))</span><br><span class="line">    z.append(<span class="built_in">float</span>(datalist[i][<span class="number">2</span>]))</span><br><span class="line"></span><br><span class="line"><span class="comment"># squares = [1, 4, 9, 16, 25]</span></span><br><span class="line"><span class="comment"># x = [1,3,4,5,6]</span></span><br><span class="line"><span class="comment"># 它是用来创建 总画布/figure“窗口”的，有figure就可以在上边（或其中一个子网格/subplot上）作图了，（fig：是figure的缩写）</span></span><br><span class="line">fig,ax = plt.subplots()</span><br><span class="line">ax.plot(x,y,<span class="string">&#x27;r.-&#x27;</span>)</span><br><span class="line">ax.plot(x,z,<span class="string">&#x27;b.-&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>







]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python文件</title>
    <url>/2024/12/24/python/file/</url>
    <content><![CDATA[<h1 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h1><figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(fileName,<span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> chunk <span class="keyword">in</span> resp.iter_content(<span class="number">128</span>):</span><br><span class="line">        f.write(chunk)</span><br></pre></td></tr></table></figure>
<h2 id="相关参数："><a href="#相关参数：" class="headerlink" title="相关参数："></a>相关参数：</h2><table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>r</td>
<td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td>
</tr>
<tr>
<td>rb</td>
<td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。这是默认模式。</td>
</tr>
<tr>
<td>r+</td>
<td>打开一个文件用于读写。文件指针将会放在文件的开头。</td>
</tr>
<tr>
<td>rb+</td>
<td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td>
</tr>
<tr>
<td>w</td>
<td>打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>wb</td>
<td>以二进制格式打开一个文件只用于写入。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>w+</td>
<td>打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>wb+</td>
<td>以二进制格式打开一个文件用于读写。如果该文件已存在则将其覆盖。如果该文件不存在，创建新文件。</td>
</tr>
<tr>
<td>a</td>
<td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>
</tr>
<tr>
<td>ab</td>
<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td>
</tr>
<tr>
<td>a+</td>
<td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td>
</tr>
<tr>
<td>ab+</td>
<td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th>file对象的属性</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>file.read([size])</td>
<td>将文件数据作为字符串返回，可选参数size控制读取的字节数</td>
</tr>
<tr>
<td>file.readlines([size])</td>
<td>返回文件中行内容的列表，size参数可选</td>
</tr>
<tr>
<td>file.write(str)</td>
<td>将字符串写入文件</td>
</tr>
<tr>
<td>file.writelines(strings)</td>
<td>将字符串序列写入文件</td>
</tr>
<tr>
<td>file.close()</td>
<td>关闭文件</td>
</tr>
<tr>
<td>file.closed</td>
<td>表示文件已经被关闭，否则为False</td>
</tr>
<tr>
<td>file.mode</td>
<td>Access文件打开时使用的访问模式</td>
</tr>
<tr>
<td>file.encoding</td>
<td>文件所使用的编码</td>
</tr>
<tr>
<td>file.name</td>
<td>文件名</td>
</tr>
<tr>
<td>file.newlines</td>
<td>未读取到行分隔符时为None，只有一种行分隔符时为一个字符串，当文件有多种类型的行结束符时，则为一个包含所有当前所遇到的行结束的列表</td>
</tr>
<tr>
<td>file.softspace</td>
<td>为0表示在输出一数据后，要加上一个空格符，1表示不加。这个属性一般程序员用不着，由程序内部使用</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">onelogosize = <span class="number">500</span>*<span class="number">375</span>*<span class="number">2</span>+<span class="number">24</span></span><br><span class="line">f=<span class="built_in">open</span> (<span class="string">&quot;SOURCE00.bf5&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line">head = f.read(<span class="number">16</span>)</span><br><span class="line">logo1 = f.read(onelogosize)</span><br><span class="line">logo2 = f.read(onelogosize)</span><br><span class="line">logo3 = f.read(onelogosize)</span><br><span class="line">logo4 = f.read(onelogosize)</span><br><span class="line">logo5 = f.read(onelogosize)</span><br><span class="line">logo6 = f.read(onelogosize)</span><br><span class="line">logo7 = f.read(onelogosize)</span><br><span class="line">f.close</span><br><span class="line"></span><br><span class="line">num = <span class="built_in">bytearray</span>(head)</span><br><span class="line"><span class="built_in">print</span>(num)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;原资源文件有%s个logo&quot;</span>%num[<span class="number">6</span>])</span><br><span class="line"><span class="comment"># arr[6] = arr[6]+1</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo1 = %.18s&quot;</span>%(logo1))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo2 = %.18s&quot;</span>%(logo2))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo3 = %.18s&quot;</span>%(logo3))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo4 = %.18s&quot;</span>%(logo4))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo5 = %.18s&quot;</span>%(logo5))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo6 = %.18s&quot;</span>%(logo6))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;logo7 = %.18s&quot;</span>%(logo7))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 头部长度</span></span><br><span class="line">headsize = <span class="number">72</span></span><br><span class="line"><span class="comment"># #logo读取  内容375K</span></span><br><span class="line"><span class="comment"># #方法1：取上下翻转 红蓝对换的bmp文件</span></span><br><span class="line"><span class="comment"># #方法2：取原图转换后的dta文件</span></span><br><span class="line">bmp=<span class="built_in">open</span> (<span class="string">&quot;LOGO-2021.12.06_1.bmp&quot;</span>,<span class="string">&quot;rb&quot;</span>)</span><br><span class="line"></span><br><span class="line">bmp.seek(headsize)</span><br><span class="line">bmparr = bmp.read(onelogosize)</span><br><span class="line"><span class="comment"># logosize = bmp.tell()</span></span><br><span class="line">bmp.close</span><br><span class="line"><span class="comment"># print(bmparr)</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;读取logo&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># #写入新文件</span></span><br><span class="line">nf=<span class="built_in">open</span>(<span class="string">&quot;SOURCE00_new.bf5&quot;</span>,<span class="string">&quot;wb+&quot;</span>)</span><br><span class="line"></span><br><span class="line">nf.write(head+logo1+logo2+logo3+logo5+logo6+logo7)</span><br><span class="line">nf.write(<span class="string">b&quot;\x00\x00\x00\x00\x00\x00\x00\x00&quot;</span>)</span><br><span class="line">logoname = <span class="string">b&quot;FALCON\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00&quot;</span></span><br><span class="line">nf.write(logoname)</span><br><span class="line">nf.write(bmparr)</span><br><span class="line"></span><br><span class="line">size = nf.tell()</span><br><span class="line">nf.close</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;创建新的BF5资源文件,大小 = %s字节&quot;</span>%size)</span><br></pre></td></tr></table></figure>



<table>
<thead>
<tr>
<th align="center">head</th>
<th align="center">logo1</th>
<th align="center">bytes(0)</th>
<th align="center">logo2</th>
<th align="center">bytes(0)</th>
<th align="center">logo3</th>
<th align="center">…</th>
</tr>
</thead>
<tbody><tr>
<td align="center">16</td>
<td align="center">375016</td>
<td align="center">8</td>
<td align="center">375016</td>
<td align="center">8</td>
<td align="center">375016</td>
<td align="center">…</td>
</tr>
</tbody></table>
<table>
<thead>
<tr>
<th align="center">logoname</th>
<th align="center">logodata</th>
</tr>
</thead>
<tbody><tr>
<td align="center">375000</td>
<td align="center">16</td>
</tr>
</tbody></table>
]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>python html</title>
    <url>/2024/12/24/python/headers/</url>
    <content><![CDATA[<h1 id="HTML-headers"><a href="#HTML-headers" class="headerlink" title="HTML headers"></a>HTML headers</h1><h2 id="浏览器查看HTTP-headers"><a href="#浏览器查看HTTP-headers" class="headerlink" title="浏览器查看HTTP headers"></a>浏览器查看HTTP headers</h2><blockquote>
<p>1、打开浏览器，F12打开控制台<br>2、输入访问URL<br>3、点击Network 点击请求 点击Headers </p>
</blockquote>
<h2 id="HTTP-header-常用属性"><a href="#HTTP-header-常用属性" class="headerlink" title="HTTP header 常用属性"></a>HTTP header 常用属性</h2><h3 id="1-Host："><a href="#1-Host：" class="headerlink" title="(1) Host："></a>(1) Host：</h3><pre><code>请求报头域主要用于指定被请求资源的Internet主机和端口号，它通常从HTTP URL中提取出来的，例如我们在浏览器中输入：https://www.baidu.com，浏览器发送的请求消息中，就会包含Host请求报头域，如下：
Host：www.baidu.com(此处使用缺省端口号443，若指定了端口号，则变成：Host：指定端口号
</code></pre>
<h3 id="2-Referer"><a href="#2-Referer" class="headerlink" title="(2)Referer"></a>(2)Referer</h3><pre><code>当浏览器向web服务器发送请求的时候，一般会带上Referer，告诉服务器该请求是从哪个页面链接过来的，服务器借此可以获得一些信息用于处理。比如从我主页上链接到一个朋友那里，他的服务器就能够从HTTP Referer中统计出每天有多少用户点击我主页上的链接访问他的网站。
</code></pre>
<h3 id="3-User-Agent"><a href="#3-User-Agent" class="headerlink" title="(3)User-Agent"></a>(3)User-Agent</h3><pre><code>这个对于爬虫比较重要 因为一班都需要添加该属性，否则稍微处理过的网站，都无法爬取。
告诉HTTP服务器， 客户端使用的操作系统和浏览器的名称和版本。
我们上网登陆论坛的时候，往往会看到一些欢迎信息，其中列出了你的操作系统的名称和版本，这往往让很多人感到很神奇，实际上，服务器应用程序就是从User-Agent这个请求报头域中获取到这些信息。User-Agent请求报头域允许客户端将它的操作系统、浏览器和其它属性告诉服务器。
例如： User-Agent: Mozilla/4.0 (compatible; MSIE 8.0; Windows NT 5.1; Trident/4.0; CIBA; .NET CLR 2.0.50727; .NET CLR 3.0.4506.2152; .NET CLR 3.5.30729; .NET4.0C; InfoPath.2; .NET4.0E)

应用程序版本“Mozilla/4.0”表bai示：你使用Maxthon 2.0 浏览du器使用 IE8 内核；
版本标识“zhiMSIE 8.0”
平台自身的dao识别信息“Windows NT 5.1”表示“操作系统为zhuan Windows XP”
Trident内核版本“Trident/4.0”，浏览器的一种内核，还有一种就是WebKit内核
</code></pre>
<h3 id="（4）Content-type"><a href="#（4）Content-type" class="headerlink" title="（4）Content-type"></a>（4）Content-type</h3><pre><code>表示后面的文档属于什么MIME类型。Servlet默认为text/plain，但通常需要显式地指定为text/html。由于经常要设置Content-Type，因此HttpServletResponse提供了一个专用的方法setContentType。
</code></pre>
<ul>
<li>常见的媒体格式类型如下：</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>text&#x2F;html</td>
<td>HTML格式</td>
</tr>
<tr>
<td>text&#x2F;plain</td>
<td>纯文本格式</td>
</tr>
<tr>
<td>text&#x2F;xml</td>
<td>XML格式</td>
</tr>
<tr>
<td>image&#x2F;gif</td>
<td>gif图片格式</td>
</tr>
<tr>
<td>image&#x2F;jpeg</td>
<td>jpg图片格式</td>
</tr>
<tr>
<td>image&#x2F;png</td>
<td>png图片格式</td>
</tr>
</tbody></table>
<ul>
<li>以application开头的媒体格式类型：</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>application&#x2F;xhtml+xml</td>
<td>XHTML格式</td>
</tr>
<tr>
<td>application&#x2F;xml</td>
<td>XML数据格式</td>
</tr>
<tr>
<td>application&#x2F;atom+xml</td>
<td>Atom XML聚合格式</td>
</tr>
<tr>
<td>application&#x2F;json</td>
<td>JSON数据格式</td>
</tr>
<tr>
<td>application&#x2F;pdf</td>
<td>pdf格式</td>
</tr>
<tr>
<td>application&#x2F;msword</td>
<td>Word文档格式</td>
</tr>
<tr>
<td>application&#x2F;octet-stream</td>
<td>二进制流数据（如常见的文件下载）</td>
</tr>
<tr>
<td>application&#x2F;x-www-form-urlencoded</td>
<td>中默认的encType，form表单数据被编码为key&#x2F;value格式发送到服务器（表单默认的提交数据的格式）</td>
</tr>
</tbody></table>
<ul>
<li>另外一种常见的媒体格式是上传文件之时使用的：</li>
</ul>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>multipart&#x2F;form-data</td>
<td>需要在表单中进行文件上传时，就需要使用该格式。</td>
</tr>
</tbody></table>
<h3 id="（5）Accept-Language"><a href="#（5）Accept-Language" class="headerlink" title="（5）Accept-Language"></a>（5）Accept-Language</h3><pre><code>Accept-Langeuage：指出浏览器可以接受的语言种类，如en或en-us指英语，zh或者zh-cn指中文，当服务器能够提供一种以上的语言版本时要用到。
</code></pre>
<h3 id="（6）Cookie"><a href="#（6）Cookie" class="headerlink" title="（6）Cookie"></a>（6）Cookie</h3><pre><code>Cookie：浏览器用这个属性向服务器发送Cookie。Cookie是在浏览器中寄存的小型数据体，它可以记载和服务器相关的用户信息，也可以用来实现会话功能。
</code></pre>
<table>
<thead>
<tr>
<th>防反爬</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>user-agent</td>
<td>必须</td>
</tr>
<tr>
<td>referer</td>
<td>防盗链，看网站机制</td>
</tr>
<tr>
<td>cookie</td>
<td>用户登陆数据</td>
</tr>
<tr>
<td>其他</td>
<td>看具体回复</td>
</tr>
</tbody></table>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers = &#123;</span><br><span class="line"><span class="string">&#x27;accept&#x27;</span>:<span class="string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;cookie&#x27;</span>: <span class="string">&#x27;_ntes_nnid=34d30980bda87343a01de676455caf23,1631167819959; _ntes_nuid=34d30980bda87343a01de676455caf23; UM_distinctid=17c0c4d974ac0-0ba38bbbaac2f6-5d462912-1fa400-17c0c4d9751fb; _iuqxldmzr_=32; NMTID=00Om6TxDNkNyCDUr0gNqt6nB6FaFhkAAAF87eurOQ; WNMCID=psyebj.1636079184756.01.0; WEVNSM=1.0.0; WM_TID=VMJqpPoVcjlBAQAFRFJutLnIBScu5%2FUN; WM_NI=rJ2Na1%2FOiVw4gOtZ9mXjaTEzi%2FWy2Z58sYTJb2RnIhKorYLEsi%2BIwQFZmj9yWrsA5RhEnkhGUrpreF4SKlgVT8K1LjzaQZ53Fg7zksmX3DBX2%2BlB5ySte0Ih9CsZiUfWWlk%3D; WM_NIKE=9ca17ae2e6ffcda170e2e6eeb5b841f388a6aab67caba88ea2d85b929e9abbf87ca3e9b6b6b6469a98a7aaf52af0fea7c3b92ab296feafe43bed91a7b7f640a591bcbbbc679cb6afb5c872abf1999ab152f7e8bdbad742a2ee9e8fcc6489b1bebacf4fb1b7e5aaf65b8686a38bbc7395aebda2b85aac9ba28ceb4d97aec093e84ef88d858de65e98e885d2cf62babf9fbbb83986b9f99bea79af88fda5c154f2f5a4a3b87391acabd1cc64fb9dbdbbec5fa689998dea37e2a3; JSESSIONID-WYYY=bs0%5CC%5Cv7UnBn8U6MnZGPeKf4v0m40UEWk4bb1k9%5CwCqBgmhc6ckHWvuaxxNy7wDjGpdg6Vx7TK9XbWVnoToHYNomM3wh44tHcVdDmcUyX5UJzF%5CEhrT38j%5C1%2Bi5OI1Q%5Ct6xxn%5CWO9DRUnh6tATDSp9UM%5Cxq65%5CljyyewOwXaZ9F2Zhw0%3A1636341503070&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;referer&#x27;</span>: <span class="string">&#x27;https://music.163.com/&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sec-fetch-dest&#x27;</span>: <span class="string">&#x27;document&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sec-fetch-mode&#x27;</span>: <span class="string">&#x27;navigate&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sec-fetch-site&#x27;</span>: <span class="string">&#x27;none&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;sec-fetch-user&#x27;</span>: <span class="string">&#x27;?1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;upgrade-insecure-requests&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;user-agent&#x27;</span>:<span class="string">&#x27;Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/83.0.4103.97 Safari/537.36&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>pyqt5</title>
    <url>/2024/12/24/python/pyqt5/</url>
    <content><![CDATA[<h1 id="pyqt5"><a href="#pyqt5" class="headerlink" title="pyqt5"></a>pyqt5</h1><h2 id="UI生成"><a href="#UI生成" class="headerlink" title="UI生成"></a><code>UI生成</code></h2><p>命令</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pyuic5.exe .\untitled.ui -o data_analysis.py</span><br></pre></td></tr></table></figure>

<h2 id="资源文件"><a href="#资源文件" class="headerlink" title="资源文件"></a><code>资源文件</code></h2><p>qrc文件格式</p>
<figure class="highlight qml"><table><tr><td class="code"><pre><span class="line">&lt;RCC&gt;</span><br><span class="line">    <span class="language-xml"><span class="tag">&lt;<span class="name">qresource</span> <span class="attr">prefix</span>=<span class="string">&quot;/&quot;</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>main.qml<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>BasicComponentDemo.qml<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>BasicInputComponent.qml<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">        <span class="tag">&lt;<span class="name">file</span>&gt;</span>CustomComponentDemo.qml<span class="tag">&lt;/<span class="name">file</span>&gt;</span></span></span><br><span class="line"><span class="language-xml">    <span class="tag">&lt;/<span class="name">qresource</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">RCC</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>命令</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pyrcc5 -o src.py  src.qrc</span><br></pre></td></tr></table></figure>
<p>引用</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment">#路径为：冒号+prefix路径前缀+file相对路径 </span></span><br><span class="line">QPixmap(<span class="string">&quot;:/imgA.jpg&quot;</span>)</span><br></pre></td></tr></table></figure>

<h2 id="使用例子"><a href="#使用例子" class="headerlink" title="使用例子"></a><code>使用例子</code></h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> PyQt5 <span class="keyword">import</span> QtCore, QtGui, QtWidgets</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtWidgets <span class="keyword">import</span> QLabel, QMessageBox,QFileDialog</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtGui <span class="keyword">import</span> QIcon</span><br><span class="line"><span class="keyword">from</span> PyQt5.QtCore <span class="keyword">import</span> QTimer</span><br><span class="line"><span class="comment"># from mainui import Ui_MainWindow</span></span><br><span class="line"><span class="keyword">from</span> mainui <span class="keyword">import</span> Ui_MainWindow</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> jpgfunc</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> jpgfunc</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainWindow</span>(QtWidgets.QMainWindow, Ui_MainWindow):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, parent=<span class="literal">None</span></span>):</span><br><span class="line">        <span class="built_in">super</span>(MainWindow, <span class="variable language_">self</span>).__init__(parent)</span><br><span class="line">        <span class="variable language_">self</span>.setupUi(<span class="variable language_">self</span>)</span><br><span class="line">        <span class="comment"># 设置应用程序的窗口图标</span></span><br><span class="line">        <span class="variable language_">self</span>.setWindowIcon(QIcon(<span class="string">&quot;:/apple.ico&quot;</span>))</span><br><span class="line">        <span class="variable language_">self</span>.setFixedSize(<span class="variable language_">self</span>.width(),<span class="variable language_">self</span>.height())</span><br><span class="line">        <span class="variable language_">self</span>.setWindowTitle(<span class="string">&quot;图片简易处理小工具   作者：gx&quot;</span>)</span><br><span class="line">        <span class="comment"># self.setWindowFlags(QtCore.Qt.WindowMinimizeButtonHint)</span></span><br><span class="line">        <span class="variable language_">self</span>.label.setText(<span class="string">&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># self.setStyleSheet(&quot;#MainWindow&#123;background-color:lightblue&#125;&quot;)</span></span><br><span class="line">        <span class="variable language_">self</span>.setStyleSheet(<span class="string">&quot;#MainWindow&#123;border-image:url(:/back.jpg)&#125;&quot;</span>)</span><br><span class="line">        <span class="comment"># self.layout = QtWidgets.QWidget()</span></span><br><span class="line">        <span class="comment"># self.layout.setStyleSheet(&#x27;&#x27;&#x27;QWidget&#123;background-color:rgb(245, 245, 245);&#125;&#x27;&#x27;&#x27;)</span></span><br><span class="line">        <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;图片简易处理小工具,专门为办公室电脑小白设计，满足基本图片处理需求&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.comboBox.addItem(<span class="string">&quot;水平&quot;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.comboBox.addItem(<span class="string">&quot;垂直&quot;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.pushButton.clicked.connect(<span class="variable language_">self</span>.selectfile)</span><br><span class="line">        <span class="variable language_">self</span>.pushButton_2.clicked.connect(<span class="variable language_">self</span>.ConvertImage)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton.clicked.connect(<span class="variable language_">self</span>.func1)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_2.clicked.connect(<span class="variable language_">self</span>.func2)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_3.clicked.connect(<span class="variable language_">self</span>.func3)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_4.clicked.connect(<span class="variable language_">self</span>.func4)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_5.clicked.connect(<span class="variable language_">self</span>.func5)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_6.clicked.connect(<span class="variable language_">self</span>.func6)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_7.clicked.connect(<span class="variable language_">self</span>.func7)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_8.clicked.connect(<span class="variable language_">self</span>.func8)</span><br><span class="line">        <span class="variable language_">self</span>.radioButton_9.clicked.connect(<span class="variable language_">self</span>.func9)</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">self</span>.horizontalSlider.valueChanged.connect(<span class="variable language_">self</span>.sliderchange)</span><br><span class="line">        <span class="variable language_">self</span>.horizontalSlider_2.valueChanged.connect(<span class="variable language_">self</span>.sliderchange)</span><br><span class="line">        <span class="variable language_">self</span>.horizontalSlider_3.valueChanged.connect(<span class="variable language_">self</span>.sliderchange)</span><br><span class="line">        <span class="variable language_">self</span>.horizontalSlider_4.valueChanged.connect(<span class="variable language_">self</span>.sliderchange)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">sliderchange</span>(<span class="params">self</span>):</span><br><span class="line">        R = <span class="variable language_">self</span>.horizontalSlider.value()</span><br><span class="line">        G = <span class="variable language_">self</span>.horizontalSlider_2.value()</span><br><span class="line">        B = <span class="variable language_">self</span>.horizontalSlider_3.value()</span><br><span class="line">        <span class="variable language_">self</span>.label_12.setStyleSheet(<span class="string">&quot;background-color:rgb(&#123;&#125;, &#123;&#125;, &#123;&#125;)&quot;</span>.<span class="built_in">format</span>(R,G,B))</span><br><span class="line">        <span class="comment"># self.statusBar.hide()</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">alldisable</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.groupBox_2.setEnabled(<span class="number">0</span>)</span><br><span class="line">        <span class="variable language_">self</span>.groupBox_3.setEnabled(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func1</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton.isChecked():</span><br><span class="line">            <span class="comment"># self.statusBar.show()</span></span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;剪裁&quot;</span>)</span><br><span class="line">            <span class="variable language_">self</span>.alldisable()</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func2</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_2.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.groupBox_2.setEnabled(<span class="number">1</span>)</span><br><span class="line">            <span class="variable language_">self</span>.textEdit_20.setEnabled(<span class="number">1</span>)</span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;格式&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func3</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_3.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;尺寸&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func4</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_4.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;压缩&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func5</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_5.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;旋转&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func6</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_6.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;镜像&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func7</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_7.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;手绘&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func8</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_8.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;模糊&quot;</span>)</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">func9</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_9.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;黑白&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">selectfile</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;button 1 clicked&quot;</span>)</span><br><span class="line">        selectfilename = QFileDialog.getOpenFileName()</span><br><span class="line">        <span class="variable language_">self</span>.filename = selectfilename[<span class="number">0</span>]</span><br><span class="line">        <span class="variable language_">self</span>.textEdit.setText(<span class="variable language_">self</span>.filename)</span><br><span class="line">        im = Image.<span class="built_in">open</span>(<span class="variable language_">self</span>.filename)</span><br><span class="line"></span><br><span class="line">        info = <span class="string">&quot;图片信息：&quot;</span></span><br><span class="line">        info+=<span class="string">&quot;     尺寸：&quot;</span>+<span class="built_in">str</span>(im.width)+<span class="string">&quot;x&quot;</span>+<span class="built_in">str</span>(im.height)</span><br><span class="line">        info+=<span class="string">&quot;     格式：&quot;</span>+im.mode</span><br><span class="line">        info+=<span class="string">&quot;     大小：&quot;</span>+<span class="built_in">str</span>(os.path.getsize(<span class="variable language_">self</span>.filename))+<span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="variable language_">self</span>.label.setText(info)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">ConvertImage</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;button 2 clicked&quot;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton.isChecked():</span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;剪裁转换开始&quot;</span>)</span><br><span class="line">            x = <span class="variable language_">self</span>.textEdit_6.toPlainText()</span><br><span class="line">            x = <span class="built_in">int</span>(x)</span><br><span class="line">            y = <span class="variable language_">self</span>.textEdit_7.toPlainText()</span><br><span class="line">            y = <span class="built_in">int</span>(y)</span><br><span class="line">            w = <span class="variable language_">self</span>.textEdit_13.toPlainText()</span><br><span class="line">            w = <span class="built_in">int</span>(w)</span><br><span class="line">            h = <span class="variable language_">self</span>.textEdit_14.toPlainText()</span><br><span class="line">            h = <span class="built_in">int</span>(h)</span><br><span class="line">            jpgfunc.Cut(<span class="variable language_">self</span>.filename,x,y,w,h)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_2.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;格式转换开始&quot;</span>)</span><br><span class="line">            <span class="built_in">format</span> = <span class="variable language_">self</span>.textEdit_18.toPlainText()</span><br><span class="line">            jpgfunc.Format(<span class="variable language_">self</span>.filename,<span class="built_in">format</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_3.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;尺寸转换开始&quot;</span>)</span><br><span class="line">            x = <span class="variable language_">self</span>.textEdit_16.toPlainText()</span><br><span class="line">            x = <span class="built_in">int</span>(x)</span><br><span class="line">            y = <span class="variable language_">self</span>.textEdit_17.toPlainText()</span><br><span class="line">            y = <span class="built_in">int</span>(y)</span><br><span class="line">            jpgfunc.Resize(<span class="variable language_">self</span>.filename,x,y)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_4.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;压缩转换开始&quot;</span>)</span><br><span class="line">            mb = <span class="variable language_">self</span>.textEdit_4.toPlainText()</span><br><span class="line">            mb = <span class="built_in">int</span>(mb)</span><br><span class="line">            step = <span class="variable language_">self</span>.textEdit_15.toPlainText()</span><br><span class="line">            step = <span class="built_in">int</span>(step)</span><br><span class="line">            quality = <span class="variable language_">self</span>.textEdit_5.toPlainText()</span><br><span class="line">            quality = <span class="built_in">int</span>(quality)</span><br><span class="line">            jpgfunc.Compress(<span class="variable language_">self</span>.filename,mb,step,quality)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_5.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;旋转转换开始&quot;</span>)</span><br><span class="line">            angle = <span class="variable language_">self</span>.textEdit_20.toPlainText()</span><br><span class="line">            angle = <span class="built_in">int</span>(angle)</span><br><span class="line">            jpgfunc.Rotate(<span class="variable language_">self</span>.filename,angle)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_6.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;镜像转换开始&quot;</span>)</span><br><span class="line">            select = <span class="variable language_">self</span>.comboBox.currentIndex()</span><br><span class="line">            select = <span class="built_in">int</span>(select)</span><br><span class="line">            jpgfunc.Transpose(<span class="variable language_">self</span>.filename,select)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_7.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;手绘转换开始&quot;</span>)</span><br><span class="line">            jpgfunc.Draw(<span class="variable language_">self</span>.filename)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_8.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;模糊转换开始&quot;</span>)</span><br><span class="line">            cnt = <span class="variable language_">self</span>.textEdit_23.toPlainText()</span><br><span class="line">            cnt = <span class="built_in">int</span>(cnt)</span><br><span class="line">            jpgfunc.Dim(<span class="variable language_">self</span>.filename,cnt)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="variable language_">self</span>.radioButton_9.isChecked(): </span><br><span class="line">            <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;黑白转换开始&quot;</span>)</span><br><span class="line">            jpgfunc.Covert(<span class="variable language_">self</span>.filename)</span><br><span class="line">        <span class="variable language_">self</span>.statusBar.showMessage(<span class="string">&quot;处理完毕&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app = QtWidgets.QApplication(sys.argv)</span><br><span class="line">    mainWindow = MainWindow()</span><br><span class="line">    mainWindow.show()</span><br><span class="line"></span><br><span class="line">    sys.exit(app.exec_())</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>python</category>
        <category>qt</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>qt</tag>
      </tags>
  </entry>
  <entry>
    <title>requirements.txt</title>
    <url>/2024/12/24/python/requirements/</url>
    <content><![CDATA[<h1 id="requirements-txt"><a href="#requirements-txt" class="headerlink" title="requirements.txt"></a>requirements.txt</h1><h2 id="安装pipreqs"><a href="#安装pipreqs" class="headerlink" title="安装pipreqs"></a>安装pipreqs</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install pipreqs</span><br><span class="line">pipreqs ./ --encoding utf-8</span><br></pre></td></tr></table></figure>

<h2 id="通过requirements-txt安装"><a href="#通过requirements-txt安装" class="headerlink" title="通过requirements.txt安装"></a>通过requirements.txt安装</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install -r requirements.txt</span><br></pre></td></tr></table></figure>


<h2 id="组件下载"><a href="#组件下载" class="headerlink" title="组件下载"></a>组件下载</h2><p>指定镜像</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pip install scripy -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>
<p>–user安装在在用户系统目录下 一般不用</p>
<h2 id="修改下载源"><a href="#修改下载源" class="headerlink" title="修改下载源"></a>修改下载源</h2><p>user路径下<br>新建pip&#x2F;pip.ini,添加内容</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span>=http://mirrors.aliyun.com/pypi/simple/</span><br><span class="line"><span class="section">[install]</span></span><br><span class="line"><span class="attr">trusted-host</span>=mirrors.aliyun.com</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="虚拟空间"><a href="#虚拟空间" class="headerlink" title="虚拟空间"></a>虚拟空间</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip install virtualenv</span><br><span class="line">virtualenv venv</span><br><span class="line"></span><br><span class="line">venv/Scripts/activate   (For Linux)</span><br><span class="line">venv/Scripts/activate.bat   (For Windows)</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows无法开启虚拟空间，需管理员进入shell</span></span><br><span class="line">Set-ExecutionPolicy -ExecutionPolicy UNRESTRICTED</span><br></pre></td></tr></table></figure>

<h2 id="快速卸载所有包"><a href="#快速卸载所有包" class="headerlink" title="快速卸载所有包"></a>快速卸载所有包</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">pip freeze &gt; python_modules.txt <span class="comment">#获取所有包</span></span><br><span class="line">pip uninstall -r python_modules.txt -y <span class="comment">#卸载，Y确认</span></span><br></pre></td></tr></table></figure>

<h2 id="DAPLink-develop分支-GCC"><a href="#DAPLink-develop分支-GCC" class="headerlink" title="DAPLink develop分支 GCC"></a>DAPLink develop分支 GCC</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(venv) &gt; pip install -r requirements.txt</span><br><span class="line">(venv) &gt; pip uninstall -y project-generator</span><br><span class="line">(venv) &gt; pip install --upgrade --user git+https://github.com/mbrossard/project_generator.git@development</span><br><span class="line">(venv) &gt; python tools\progen_compile.py --clean -v stm32f103xb_if</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>python</category>
      </categories>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>正则表达式</title>
    <url>/2024/12/24/python/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/</url>
    <content><![CDATA[<h1 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h1><h2 id="一、re-findall函数介绍"><a href="#一、re-findall函数介绍" class="headerlink" title="一、re.findall函数介绍"></a>一、re.findall函数介绍</h2><p>它在re.py中有定义：</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">findall</span>(<span class="params">pattern, string, flags=<span class="number">0</span></span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Return a list of all non-overlapping matches in the string.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    If one or more capturing groups are present in the pattern, return</span></span><br><span class="line"><span class="string">    a list of groups; this will be a list of tuples if the pattern</span></span><br><span class="line"><span class="string">    has more than one group.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    Empty matches are included in the result.&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> _<span class="built_in">compile</span>(pattern, flags).findall(string)</span><br></pre></td></tr></table></figure>
<p>返回string中所有与pattern匹配的全部字符串,返回形式为数组。</p>
<p>findall()函数的两种表示形式</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line">kk = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line">kk.findall(<span class="string">&#x27;one1two2three3four4&#x27;</span>)</span><br><span class="line"><span class="comment">#[1,2,3,4]</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">#注意此处findall()的用法，可传两个参数;</span></span><br><span class="line">kk = re.<span class="built_in">compile</span>(<span class="string">r&#x27;\d+&#x27;</span>)</span><br><span class="line">re.findall(kk,<span class="string">&quot;one123&quot;</span>)</span><br><span class="line"><span class="comment">#[1,2,3]</span></span><br></pre></td></tr></table></figure>
<p>二、实例代码<br>后面会讲解代码里的各个部分，先列出来~</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"> </span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;aabbabaabbaa&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 一个&quot;.&quot;就是匹配除 \n (换行符)以外的任意一个字符</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;aab&#x27;, &#x27;aab&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># *前面的字符出现0次或以上</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a*b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;aab&#x27;, &#x27;b&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;, &#x27;b&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 贪婪，匹配从.*前面为开始到后面为结束的所有内容</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;aabbabaabb&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非贪婪，遇到开始和结束就进行截取，因此截取多次符合的结果，中间没有字符也会被截取</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非贪婪，与上面一样，只是与上面的相比多了一个括号，只保留括号的内容</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a(.*?)b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;a&#x27;, &#x27;&#x27;, &#x27;a&#x27;]</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;&#x27;aabbab</span></span><br><span class="line"><span class="string">         aabbaa</span></span><br><span class="line"><span class="string">         bb&#x27;&#x27;&#x27;</span>     <span class="comment">#后面多加了2个b</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 没有把最后一个换行的aab算进来</span></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>))<span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># re.S不会对\n进行中断</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>,re.S))<span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;, &#x27;aa\n         b&#x27;]</span></span><br></pre></td></tr></table></figure>
<h2 id="三、re-findall中正则表达式"><a href="#三、re-findall中正则表达式" class="headerlink" title="三、re.findall中正则表达式(.*?)"></a>三、re.findall中正则表达式(.*?)</h2><p>字符串是</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;aabbabaabbaa&#x27;</span></span><br></pre></td></tr></table></figure>
<ol>
<li>符号 . 就 是匹配除 \n (换行符)以外的任意一个字符<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;aab&#x27;, &#x27;aab&#x27;]</span></span><br></pre></td></tr></table></figure>
2.符号 * 前面的字符出现0次或以上<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a*b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;aab&#x27;, &#x27;b&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;, &#x27;b&#x27;]</span></span><br></pre></td></tr></table></figure>
3.符号.* 贪婪，匹配从.*前面为开始到后面为结束的所有内容<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;aabbabaabb&#x27;]</span></span><br></pre></td></tr></table></figure>
4.符号.*? 非贪婪，遇到开始和结束就进行截取，因此截取多次符合的结果，中间没有字符也会被截取<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;]</span></span><br></pre></td></tr></table></figure>
5.符号(.*?) 非贪婪，与上面一样，只是与上面的相比多了一个括号，只保留括号的内容<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a(.*?)b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;a&#x27;, &#x27;&#x27;, &#x27;a&#x27;]</span></span><br></pre></td></tr></table></figure>
关于带括号与不带括号的区别<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line">string=<span class="string">&quot;abcdefg  acbdgef  abcdgfe  cadbgfe&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#不带括号</span></span><br><span class="line">regex=re.<span class="built_in">compile</span>(<span class="string">&quot;((\w+)\s+\w+)&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(regex.findall(string))</span><br><span class="line"><span class="comment">#输出：[(&#x27;abcdefg  acbdgef&#x27;, &#x27;abcdefg&#x27;), (&#x27;abcdgfe  cadbgfe&#x27;, &#x27;abcdgfe&#x27;)]</span></span><br><span class="line"></span><br><span class="line">regex1=re.<span class="built_in">compile</span>(<span class="string">&quot;(\w+)\s+\w+&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(regex1.findall(string))</span><br><span class="line"><span class="comment">#输出：[&#x27;abcdefg&#x27;, &#x27;abcdgfe&#x27;]</span></span><br><span class="line"></span><br><span class="line">regex2=re.<span class="built_in">compile</span>(<span class="string">&quot;\w+\s+\w+&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(regex2.findall(string))</span><br><span class="line"><span class="comment">#输出：[&#x27;abcdefg  acbdgef&#x27;, &#x27;abcdgfe  cadbgfe&#x27;]</span></span><br></pre></td></tr></table></figure></li>
</ol>
<ul>
<li>第一个 regex 中带有2个括号，其输出list 中包含2个 tuple</li>
<li>第二个 regex 中带有1个括号，其输出内容是括号匹配到的内容，而不是整个表达式所匹配到的结果。</li>
<li>第三个 regex 中不带括号,其输出的内容就是整个表达式所匹配到的内容。</li>
<li>实际上这并不是python特有的，这是正则所特有的 ， 任何一门高级语言使用正则都满足这个特点：有括号时只能匹配到括号中的内容，没有括号【相当于在最外层增加了一个括号】。在正则里面 “()” 代表的是分组的意思，一个括号代表一个分组，你只能匹配到 “()” 中的内容。</li>
</ul>
<h2 id="四、re-findall中参数re-S的意义"><a href="#四、re-findall中参数re-S的意义" class="headerlink" title="四、re.findall中参数re.S的意义"></a>四、re.findall中参数re.S的意义</h2><p>1.字符串变为（后面多加了2个b）</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;&#x27;&#x27;aabbab</span></span><br><span class="line"><span class="string">         aabbaa</span></span><br><span class="line"><span class="string">         bb&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>2.参数无re.S，没有把最后一个换行的aab算进来</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>))</span><br><span class="line"><span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;]</span></span><br></pre></td></tr></table></figure>
<p>3.参数有re.S，不会对\n进行中断</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line"><span class="built_in">print</span>(re.findall(<span class="string">r&#x27;a.*?b&#x27;</span>,<span class="built_in">str</span>,re.S))</span><br><span class="line"><span class="comment">#[&#x27;aab&#x27;, &#x27;ab&#x27;, &#x27;aab&#x27;, &#x27;aa\n         b&#x27;]</span></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>CRC校验</title>
    <url>/2024/12/24/stm32/CRC/</url>
    <content><![CDATA[<h1 id="CRC全部源码"><a href="#CRC全部源码" class="headerlink" title="CRC全部源码"></a><code>CRC全部源码</code></h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc4_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_epc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_usb</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc6_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc7_mmc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_rohc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_maxim</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;<span class="comment">//DS18B20</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ibm</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_maxim</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_usb</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_modbus</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ccitt</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ccitt_false</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_x25</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_xmodem</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_dnp</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">crc32</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">crc32_mpeg_2</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span>;</span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-4/ITU           x4+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x03</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc4_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;                <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;                 <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x0C</span>;<span class="comment">// 0x0C = (reverse 0x03)&gt;&gt;(8-4)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-5/EPC           x5+x3+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x09</span></span><br><span class="line"><span class="comment"> * Init:    0x09</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_epc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0x48</span>;        <span class="comment">// Initial value: 0x48 = 0x09&lt;&lt;(8-5)</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x80</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x48</span>;        <span class="comment">// 0x48 = 0x09&lt;&lt;(8-5)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc &gt;&gt; <span class="number">3</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-5/ITU           x5+x4+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x15</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;                <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;                 <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x15</span>;<span class="comment">// 0x15 = (reverse 0x15)&gt;&gt;(8-5)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-5/USB           x5+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x05</span></span><br><span class="line"><span class="comment"> * Init:    0x1F</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x1F</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc5_usb</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0x1F</span>;                <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;                 <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x14</span>;<span class="comment">// 0x14 = (reverse 0x05)&gt;&gt;(8-5)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc ^ <span class="number">0x1F</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-6/ITU           x6+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x03</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc6_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;         <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x30</span>;<span class="comment">// 0x30 = (reverse 0x03)&gt;&gt;(8-6)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-7/MMC           x7+x3+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x09</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Use:     MultiMediaCard,SD,ect.</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc7_mmc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x80</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x12</span>;        <span class="comment">// 0x12 = 0x09&lt;&lt;(8-7)</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc &gt;&gt; <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-8               x8+x2+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x07</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x80</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x07</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-8/ITU           x8+x2+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x07</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x55</span></span><br><span class="line"><span class="comment"> * Alias:   CRC-8/ATM</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_itu</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x80</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x07</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc ^ <span class="number">0x55</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-8/ROHC          x8+x2+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x07</span></span><br><span class="line"><span class="comment"> * Init:    0xFF</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_rohc</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0xFF</span>;         <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;            <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xE0</span>;        <span class="comment">// 0xE0 = reverse 0x07</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-8/MAXIM         x8+x5+x4+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x31</span></span><br><span class="line"><span class="comment"> * Init:    0x00</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x00</span></span><br><span class="line"><span class="comment"> * Alias:   DOW-CRC,CRC-8/IBUTTON</span></span><br><span class="line"><span class="comment"> * Use:     Maxim(Dallas)&#x27;s some devices,e.g. DS18B20</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">crc8_maxim</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint8_t</span> crc = <span class="number">0</span>;         <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x8C</span>;        <span class="comment">// 0x8C = reverse 0x31</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/IBM          x16+x15+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x8005</span></span><br><span class="line"><span class="comment"> * Init:    0x0000</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000</span></span><br><span class="line"><span class="comment"> * Alias:   CRC-16,CRC-16/ARC,CRC-16/LHA</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ibm</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xA001</span>;        <span class="comment">// 0xA001 = reverse 0x8005</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/MAXIM        x16+x15+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x8005</span></span><br><span class="line"><span class="comment"> * Init:    0x0000</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0xFFFF</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_maxim</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xA001</span>;        <span class="comment">// 0xA001 = reverse 0x8005</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~crc;    <span class="comment">// crc^0xffff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/USB          x16+x15+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x8005</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0xFFFF</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_usb</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0xffff</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;            <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xA001</span>;        <span class="comment">// 0xA001 = reverse 0x8005</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~crc;    <span class="comment">// crc^0xffff</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/MODBUS       x16+x15+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x8005</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_modbus</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0xffff</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;            <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xA001</span>;        <span class="comment">// 0xA001 = reverse 0x8005</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/CCITT        x16+x12+x5+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x1021</span></span><br><span class="line"><span class="comment"> * Init:    0x0000</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000</span></span><br><span class="line"><span class="comment"> * Alias:   CRC-CCITT,CRC-16/CCITT-TRUE,CRC-16/KERMIT</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ccitt</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;        <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x8408</span>;        <span class="comment">// 0x8408 = reverse 0x1021</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/CCITT-FALSE   x16+x12+x5+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x1021</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_ccitt_false</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0xffff</span>;        <span class="comment">//Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= (<span class="type">uint16_t</span>)(*data++) &lt;&lt; <span class="number">8</span>; <span class="comment">// crc ^= (uint6_t)(*data)&lt;&lt;8; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x8000</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x1021</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/X25          x16+x12+x5+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x1021</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0XFFFF</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_x25</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0xffff</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;            <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0x8408</span>;        <span class="comment">// 0x8408 = reverse 0x1021</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~crc;                <span class="comment">// crc^Xorout</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/XMODEM       x16+x12+x5+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x1021</span></span><br><span class="line"><span class="comment"> * Init:    0x0000</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000</span></span><br><span class="line"><span class="comment"> * Alias:   CRC-16/ZMODEM,CRC-16/ACORN</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_xmodem</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0</span>;            <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= (<span class="type">uint16_t</span>)(*data++) &lt;&lt; <span class="number">8</span>; <span class="comment">// crc ^= (uint16_t)(*data)&lt;&lt;8; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x8000</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x1021</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-16/DNP          x16+x13+x12+x11+x10+x8+x6+x5+x2+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x3D65</span></span><br><span class="line"><span class="comment"> * Init:    0x0000</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0xFFFF</span></span><br><span class="line"><span class="comment"> * Use:     M-Bus,ect.</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint16_t</span> <span class="title function_">crc16_dnp</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint16_t</span> crc = <span class="number">0</span>;            <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;            <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xA6BC</span>;        <span class="comment">// 0xA6BC = reverse 0x3D65</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~crc;                <span class="comment">// crc^Xorout</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-32  x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x4C11DB7</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   True</span></span><br><span class="line"><span class="comment"> * Refout:  True</span></span><br><span class="line"><span class="comment"> * Xorout:  0xFFFFFFF</span></span><br><span class="line"><span class="comment"> * Alias:   CRC_32/ADCCP</span></span><br><span class="line"><span class="comment"> * Use:     WinRAR,ect.</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">crc32</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint32_t</span> crc = <span class="number">0xffffffff</span>;        <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= *data++;                <span class="comment">// crc ^= *data; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (crc &amp; <span class="number">1</span>)</span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>) ^ <span class="number">0xEDB88320</span>;<span class="comment">// 0xEDB88320= reverse 0x04C11DB7</span></span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc = (crc &gt;&gt; <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ~crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment"> * Name:    CRC-32/MPEG-2  x32+x26+x23+x22+x16+x12+x11+x10+x8+x7+x5+x4+x2+x+1</span></span><br><span class="line"><span class="comment"> * Poly:    0x4C11DB7</span></span><br><span class="line"><span class="comment"> * Init:    0xFFFFFFF</span></span><br><span class="line"><span class="comment"> * Refin:   False</span></span><br><span class="line"><span class="comment"> * Refout:  False</span></span><br><span class="line"><span class="comment"> * Xorout:  0x0000000</span></span><br><span class="line"><span class="comment"> * Note:</span></span><br><span class="line"><span class="comment"> *****************************************************************************/</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">crc32_mpeg_2</span><span class="params">(<span class="type">uint8_t</span> *data, uint_len length)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint8_t</span> i;</span><br><span class="line">    <span class="type">uint32_t</span> crc = <span class="number">0xffffffff</span>;  <span class="comment">// Initial value</span></span><br><span class="line">    <span class="keyword">while</span>(length--)</span><br><span class="line">    &#123;</span><br><span class="line">        crc ^= (<span class="type">uint32_t</span>)(*data++) &lt;&lt; <span class="number">24</span>;<span class="comment">// crc ^=(uint32_t)(*data)&lt;&lt;24; data++;</span></span><br><span class="line">        <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">8</span>; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> ( crc &amp; <span class="number">0x80000000</span> )</span><br><span class="line">                crc = (crc &lt;&lt; <span class="number">1</span>) ^ <span class="number">0x04C11DB7</span>;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                crc &lt;&lt;= <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> crc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>stm32</category>
        <category>crc</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>crc</tag>
      </tags>
  </entry>
  <entry>
    <title>USB报告描述符</title>
    <url>/2024/12/24/stm32/USB%20key%20mouse/</url>
    <content><![CDATA[<h1 id="USB-HID-报告描述符"><a href="#USB-HID-报告描述符" class="headerlink" title="USB HID 报告描述符"></a>USB HID 报告描述符</h1><p>HID全称Human Interface Device。HID协议里增加了HID描述符和报告描述符，以及特定的关于HID的类请求。HID设备的通信是通过报表来进行的。据说，报告描述符是USB设备中最难的描述符了。关于HID描述符可以参考HID协议。接下来我们谈谈报告描述符。</p>
<h1 id="鼠标"><a href="#鼠标" class="headerlink" title="鼠标"></a>鼠标</h1><p>它描述了4个字节，第一个字节表示按键，第二个字节表示x轴（即鼠标左右移动，<br>0表示不动，正值表示往右移，负值表示往左移），第三个字节表示y轴（即鼠标<br>上下移动，0表示不动，正值表示往下移动，负值表示往上移动），第四个字节<br>表示鼠标滚轮（正值为往上滚动，负值为往下滚动）。</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">code <span class="type">char</span> MouseReportDescriptor[<span class="number">52</span>] = &#123;   </span><br><span class="line">   <span class="comment">//通用桌面设备   </span></span><br><span class="line">   <span class="number">0x05</span>, <span class="number">0x01</span>,                    <span class="comment">// USAGE_PAGE (Generic Desktop)   </span></span><br><span class="line">   <span class="comment">//鼠标   </span></span><br><span class="line">   <span class="number">0x09</span>, <span class="number">0x02</span>,                    <span class="comment">// USAGE (Mouse)   </span></span><br><span class="line">   <span class="comment">//集合   </span></span><br><span class="line">   <span class="number">0xa1</span>, <span class="number">0x01</span>,                    <span class="comment">// COLLECTION (Application)   </span></span><br><span class="line">   <span class="comment">//指针设备   </span></span><br><span class="line">   <span class="number">0x09</span>, <span class="number">0x01</span>,                    <span class="comment">//   USAGE (Pointer)   </span></span><br><span class="line">    <span class="comment">//集合   </span></span><br><span class="line">    <span class="number">0xa1</span>, <span class="number">0x00</span>,                    <span class="comment">//   COLLECTION (Physical)   </span></span><br><span class="line">    <span class="comment">//按键   </span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x09</span>,                    <span class="comment">//     USAGE_PAGE (Button)   </span></span><br><span class="line">    <span class="comment">//使用最小值1   </span></span><br><span class="line">    <span class="number">0x19</span>, <span class="number">0x01</span>,                    <span class="comment">//     USAGE_MINIMUM (Button 1)   </span></span><br><span class="line">    <span class="comment">//使用最大值3。1表示左键，2表示右键，3表示中键   </span></span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x03</span>,                    <span class="comment">//     USAGE_MAXIMUM (Button 3)   </span></span><br><span class="line">    <span class="comment">//逻辑最小值0   </span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x00</span>,                    <span class="comment">//     LOGICAL_MINIMUM (0)   </span></span><br><span class="line">    <span class="comment">//逻辑最大值1   </span></span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0x01</span>,                    <span class="comment">//     LOGICAL_MAXIMUM (1)   </span></span><br><span class="line">    <span class="comment">//数量为3   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x03</span>,                    <span class="comment">//     REPORT_COUNT (3)   </span></span><br><span class="line">    <span class="comment">//大小为1bit   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x01</span>,                    <span class="comment">//     REPORT_SIZE (1)   </span></span><br><span class="line">    <span class="comment">//输入，变量，数值，绝对值   </span></span><br><span class="line">    <span class="comment">//以上3个bit分别表示鼠标的三个按键情况，最低位（bit-0）为左键   </span></span><br><span class="line">    <span class="comment">//bit-1为右键，bit-2为中键，按下时对应的位值为1，释放时对应的值为0   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x02</span>,                    <span class="comment">//     INPUT (Data,Var,Abs)   </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//填充5个bit，补足一个字节   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x01</span>,                    <span class="comment">//     REPORT_COUNT (1)   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x05</span>,                    <span class="comment">//     REPORT_SIZE (5)   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x03</span>,                    <span class="comment">//     INPUT (Cnst,Var,Abs)   </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//用途页为通用桌面   </span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x01</span>,                    <span class="comment">//     USAGE_PAGE (Generic Desktop)   </span></span><br><span class="line">    <span class="comment">//用途为X   </span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x30</span>,                    <span class="comment">//     USAGE (X)   </span></span><br><span class="line">    <span class="comment">//用途为Y   </span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x31</span>,                    <span class="comment">//     USAGE (Y)   </span></span><br><span class="line">    <span class="comment">//用途为滚轮   </span></span><br><span class="line">    <span class="number">0x09</span>, <span class="number">0x38</span>,                    <span class="comment">//     USAGE (Wheel)   </span></span><br><span class="line">    <span class="comment">//逻辑最小值为-127   </span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x81</span>,                    <span class="comment">//     LOGICAL_MINIMUM (-127)   </span></span><br><span class="line">    <span class="comment">//逻辑最大值为+127   </span></span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0x7f</span>,                    <span class="comment">//     LOGICAL_MAXIMUM (127)   </span></span><br><span class="line">    <span class="comment">//大小为8个bits   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x08</span>,                    <span class="comment">//     REPORT_SIZE (8)   </span></span><br><span class="line">    <span class="comment">//数量为3个，即分别代表x,y,滚轮   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x03</span>,                    <span class="comment">//     REPORT_COUNT (3)   </span></span><br><span class="line">    <span class="comment">//输入，变量，值，相对值   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x06</span>,                    <span class="comment">//     INPUT (Data,Var,Rel)   </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//关集合   </span></span><br><span class="line">    <span class="number">0xc0</span>,                          <span class="comment">//   END_COLLECTION   </span></span><br><span class="line">    <span class="number">0xc0</span>                           <span class="comment">// END_COLLECTION   </span></span><br><span class="line">&#125;;   </span><br></pre></td></tr></table></figure>

<p>通过对上面的报告分析，我们知道报告返回4个字节，没有报告ID。如果鼠标左键按下，<br>则返回01 00 00 00（十六进制值），如果右键按下，则返回02 00 00 00，如果中键按下，<br>则返回04 00 00 00，如果三个键同时按下，则返回07 00 00 00。如果鼠标往右移动则<br>第二字节返回正值，值越大移动速度越快。其它的类推。</p>
<h1 id="键盘"><a href="#键盘" class="headerlink" title="键盘"></a>键盘</h1><figure class="highlight c"><table><tr><td class="code"><pre><span class="line">code <span class="type">char</span> KeyBoardReportDescriptor[<span class="number">63</span>] = &#123;   </span><br><span class="line">   <span class="comment">//表示用途页为通用桌面设备   </span></span><br><span class="line">   <span class="number">0x05</span>, <span class="number">0x01</span>,                    <span class="comment">// USAGE_PAGE (Generic Desktop)   </span></span><br><span class="line"> </span><br><span class="line">   <span class="comment">//表示用途为键盘   </span></span><br><span class="line">   <span class="number">0x09</span>, <span class="number">0x06</span>,                    <span class="comment">// USAGE (Keyboard)   </span></span><br><span class="line">      </span><br><span class="line">   <span class="comment">//表示应用集合，必须要以END_COLLECTION来结束它，见最后的END_COLLECTION   </span></span><br><span class="line">   <span class="number">0xa1</span>, <span class="number">0x01</span>,                    <span class="comment">// COLLECTION (Application)   </span></span><br><span class="line">       </span><br><span class="line">    <span class="comment">//表示用途页为按键   </span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x07</span>,                    <span class="comment">//   USAGE_PAGE (Keyboard)   </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//用途最小值，这里为左ctrl键   </span></span><br><span class="line">    <span class="number">0x19</span>, <span class="number">0xe0</span>,                    <span class="comment">//   USAGE_MINIMUM (Keyboard LeftControl)   </span></span><br><span class="line">    <span class="comment">//用途最大值，这里为右GUI键，即window键   </span></span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0xe7</span>,                    <span class="comment">//   USAGE_MAXIMUM (Keyboard Right GUI)   </span></span><br><span class="line">    <span class="comment">//逻辑最小值为0   </span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x00</span>,                    <span class="comment">//   LOGICAL_MINIMUM (0)   </span></span><br><span class="line">    <span class="comment">//逻辑最大值为1   </span></span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0x01</span>,                    <span class="comment">//   LOGICAL_MAXIMUM (1)   </span></span><br><span class="line">    <span class="comment">//报告大小（即这个字段的宽度）为1bit，所以前面的逻辑最小值为0，逻辑最大值为1   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x01</span>,                    <span class="comment">//   REPORT_SIZE (1)   </span></span><br><span class="line">    <span class="comment">//报告的个数为8，即总共有8个bits   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x08</span>,                    <span class="comment">//   REPORT_COUNT (8)   </span></span><br><span class="line">    <span class="comment">//输入用，变量，值，绝对值。像键盘这类一般报告绝对值，   </span></span><br><span class="line">    <span class="comment">//而鼠标移动这样的则报告相对值，表示鼠标移动多少   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x02</span>,                    <span class="comment">//   INPUT (Data,Var,Abs)   </span></span><br><span class="line">    <span class="comment">//上面这这几项描述了一个输入用的字段，总共为8个bits，每个bit表示一个按键   </span></span><br><span class="line">    <span class="comment">//分别从左ctrl键到右GUI键。这8个bits刚好构成一个字节，它位于报告的第一个字节。   </span></span><br><span class="line">    <span class="comment">//它的最低位，即bit-0对应着左ctrl键，如果返回的数据该位为1，则表示左ctrl键被按下，   </span></span><br><span class="line">    <span class="comment">//否则，左ctrl键没有按下。最高位，即bit-7表示右GUI键的按下情况。中间的几个位，   </span></span><br><span class="line">    <span class="comment">//需要根据HID协议中规定的用途页表（HID Usage Tables）来确定。这里通常用来表示   </span></span><br><span class="line">    <span class="comment">//特殊键，例如ctrl，shift，del键等   </span></span><br><span class="line">  </span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//这样的数据段个数为1   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x01</span>,                    <span class="comment">//   REPORT_COUNT (1)   </span></span><br><span class="line">    <span class="comment">//每个段长度为8bits   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x08</span>,                    <span class="comment">//   REPORT_SIZE (8)   </span></span><br><span class="line">    <span class="comment">//输入用，常量，值，绝对值   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x03</span>,                    <span class="comment">//   INPUT (Cnst,Var,Abs)   </span></span><br><span class="line">       </span><br><span class="line">    <span class="comment">//上面这8个bit是常量，设备必须返回0   </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//这样的数据段个数为5   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x05</span>,                    <span class="comment">//   REPORT_COUNT (5)   </span></span><br><span class="line">    <span class="comment">//每个段大小为1bit   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x01</span>,                    <span class="comment">//   REPORT_SIZE (1)   </span></span><br><span class="line">    <span class="comment">//用途是LED，即用来控制键盘上的LED用的，因此下面会说明它是输出用   </span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x08</span>,                    <span class="comment">//   USAGE_PAGE (LEDs)   </span></span><br><span class="line">    <span class="comment">//用途最小值是Num Lock，即数字键锁定灯   </span></span><br><span class="line">    <span class="number">0x19</span>, <span class="number">0x01</span>,                    <span class="comment">//   USAGE_MINIMUM (Num Lock)   </span></span><br><span class="line">    <span class="comment">//用途最大值是Kana，这个是什么灯我也不清楚^_^   </span></span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x05</span>,                    <span class="comment">//   USAGE_MAXIMUM (Kana)   </span></span><br><span class="line">    <span class="comment">//如前面所说，这个字段是输出用的，用来控制LED。变量，值，绝对值。   </span></span><br><span class="line">    <span class="comment">//1表示灯亮，0表示灯灭   </span></span><br><span class="line">    <span class="number">0x91</span>, <span class="number">0x02</span>,                    <span class="comment">//   OUTPUT (Data,Var,Abs)   </span></span><br><span class="line">  </span><br><span class="line">    <span class="comment">//这样的数据段个数为1   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x01</span>,                    <span class="comment">//   REPORT_COUNT (1)   </span></span><br><span class="line">    <span class="comment">//每个段大小为3bits   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x03</span>,                    <span class="comment">//   REPORT_SIZE (3)   </span></span><br><span class="line">    <span class="comment">//输出用，常量，值，绝对   </span></span><br><span class="line">    <span class="number">0x91</span>, <span class="number">0x03</span>,                    <span class="comment">//   OUTPUT (Cnst,Var,Abs)       </span></span><br><span class="line">    <span class="comment">//由于要按字节对齐，而前面控制LED的只用了5个bit，   </span></span><br><span class="line">    <span class="comment">//所以后面需要附加3个不用bit，设置为常量。   </span></span><br><span class="line">  </span><br><span class="line">    </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//报告个数为6   </span></span><br><span class="line">    <span class="number">0x95</span>, <span class="number">0x06</span>,                    <span class="comment">//   REPORT_COUNT (6)   </span></span><br><span class="line">    <span class="comment">//每个段大小为8bits   </span></span><br><span class="line">    <span class="number">0x75</span>, <span class="number">0x08</span>,                    <span class="comment">//   REPORT_SIZE (8)   </span></span><br><span class="line">    <span class="comment">//逻辑最小值0   </span></span><br><span class="line">    <span class="number">0x15</span>, <span class="number">0x00</span>,                    <span class="comment">//   LOGICAL_MINIMUM (0)   </span></span><br><span class="line">    <span class="comment">//逻辑最大值255   </span></span><br><span class="line">    <span class="number">0x25</span>, <span class="number">0xFF</span>,                    <span class="comment">//   LOGICAL_MAXIMUM (255)   </span></span><br><span class="line">    <span class="comment">//用途页为按键   </span></span><br><span class="line">    <span class="number">0x05</span>, <span class="number">0x07</span>,                    <span class="comment">//   USAGE_PAGE (Keyboard)   </span></span><br><span class="line">    <span class="comment">//使用最小值为0   </span></span><br><span class="line">    <span class="number">0x19</span>, <span class="number">0x00</span>,                    <span class="comment">//   USAGE_MINIMUM (Reserved (no event indicated))   </span></span><br><span class="line">    <span class="comment">//使用最大值为0x65   </span></span><br><span class="line">    <span class="number">0x29</span>, <span class="number">0x65</span>,                    <span class="comment">//   USAGE_MAXIMUM (Keyboard Application)   </span></span><br><span class="line">    <span class="comment">//输入用，变量，数组，绝对值   </span></span><br><span class="line">    <span class="number">0x81</span>, <span class="number">0x00</span>,                    <span class="comment">//   INPUT (Data,Ary,Abs)   </span></span><br><span class="line">    <span class="comment">//以上定义了6个8bit宽的数组，每个8bit（即一个字节）用来表示一个按键，所以可以同时   </span></span><br><span class="line">    <span class="comment">//有6个按键按下。没有按键按下时，全部返回0。如果按下的键太多，导致键盘扫描系统   </span></span><br><span class="line">    <span class="comment">//无法区分按键时，则全部返回0x01，即6个0x01。如果有一个键按下，则这6个字节中的第一   </span></span><br><span class="line">    <span class="comment">//个字节为相应的键值（具体的值参看HID Usage Tables），如果两个键按下，则第1、2两个   </span></span><br><span class="line">    <span class="comment">//字节分别为相应的键值，以次类推。   </span></span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">    <span class="comment">//关集合，跟上面的对应   </span></span><br><span class="line">    <span class="number">0xc0</span>                           <span class="comment">// END_COLLECTION   </span></span><br><span class="line">&#125;;   </span><br></pre></td></tr></table></figure>



<p>   通过上面的分析，我们知道这个报告中只有一个报告，所以没有报告ID，<br>因此返回的都是实际使用的数据。总共有8字节输入，1字节输出。其中输入的<br>第一字节用来表示特殊按键，第二字节保留，后面的六字节为普通按键。</p>
<p>如果只有左ctrl键按下，则返回01 00 00 00 00 00 00 00（十六进制），</p>
<p>如果只有数字键1 按下，则返回00 00 59 00 00 00 00 00，</p>
<p>如果数字键1 和2 同时按下，则返回00 00 59 5A 00 00 00 00，</p>
<p>如果再按下左shift 键，则返回02 00 59 5A 00 00 00 00，</p>
<p>然后再释放1   键，则返回02 00 5A 00 00 00 00 00，</p>
<p>然后全部按键释放，则返回00 00 00 00 00 00 00 00。</p>
<p>这些数据（即报告）都是通过中断端点返回的。当按下Num Lock键时，PC会发送<br>输出报告，从报告描述符中我们知道，Num Lock的LED对应着输出报告的最低位，<br>当数字小键盘打开时，输出xxxxxxx1（二进制，打x的由其它的LED状态决定）；<br>当数字小键盘关闭时，输出xxxxxxx0（同前）。取出最低位就可以控制数字键锁定LED了。</p>
]]></content>
      <categories>
        <category>stm32</category>
        <category>usb</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>usb</tag>
      </tags>
  </entry>
  <entry>
    <title>stm32 USB</title>
    <url>/2024/12/24/stm32/USB/</url>
    <content><![CDATA[<h1 id="stm32-USB"><a href="#stm32-USB" class="headerlink" title="stm32 USB"></a>stm32 USB</h1><h2 id="DEVICE"><a href="#DEVICE" class="headerlink" title="DEVICE"></a>DEVICE</h2><p><a href="https://blog.csdn.net/pq113_6/article/details/106541581">wireshark的usb抓包分析</a></p>
<p><a href="https://blog.csdn.net/pq113_6/article/details/108528855">STM32F103 USB EP0通信数据详解</a></p>
<p><a href="http://www.mcublog.cn/software/2020_03/usb-endpoint/">USB的端点描述符详解</a></p>
<h3 id="Custom-HID"><a href="#Custom-HID" class="headerlink" title="Custom HID"></a>Custom HID</h3><ul>
<li>1.描述符:<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__ALIGN_BEGIN <span class="type">static</span> <span class="type">uint8_t</span> CUSTOM_HID_ReportDesc_FS[USBD_CUSTOM_HID_REPORT_DESC_SIZE] __ALIGN_END =</span><br><span class="line">&#123;</span><br><span class="line">  <span class="comment">/* USER CODE BEGIN 0 */</span></span><br><span class="line">	<span class="number">0x05</span>, <span class="number">0x8c</span>, <span class="comment">/* USAGE_PAGE (ST Page) */</span></span><br><span class="line">	<span class="number">0x09</span>, <span class="number">0x01</span>, <span class="comment">/* USAGE (Demo Kit) */</span></span><br><span class="line">	<span class="number">0xa1</span>, <span class="number">0x01</span>, <span class="comment">/* COLLECTION (Application) */</span></span><br><span class="line">	 </span><br><span class="line">	<span class="comment">// The Input report </span></span><br><span class="line">	<span class="number">0x09</span>,<span class="number">0x03</span>, <span class="comment">// USAGE ID - Vendor defined </span></span><br><span class="line">	<span class="number">0x15</span>,<span class="number">0x00</span>, <span class="comment">// LOGICAL_MINIMUM (0) </span></span><br><span class="line">	<span class="number">0x26</span>,<span class="number">0x00</span>, <span class="number">0xFF</span>, <span class="comment">// LOGICAL_MAXIMUM (255) </span></span><br><span class="line">	<span class="number">0x75</span>,<span class="number">0x08</span>, <span class="comment">// REPORT_SIZE (8bit) </span></span><br><span class="line">	<span class="number">0x95</span>,<span class="number">0x40</span>, <span class="comment">// REPORT_COUNT (64Byte) </span></span><br><span class="line">	<span class="number">0x81</span>,<span class="number">0x02</span>, <span class="comment">// INPUT (Data,Var,Abs) </span></span><br><span class="line"></span><br><span class="line">	<span class="comment">// The Output report </span></span><br><span class="line">	<span class="number">0x09</span>,<span class="number">0x04</span>, <span class="comment">// USAGE ID - Vendor defined </span></span><br><span class="line">	<span class="number">0x15</span>,<span class="number">0x00</span>, <span class="comment">// LOGICAL_MINIMUM (0) </span></span><br><span class="line">	<span class="number">0x26</span>,<span class="number">0x00</span>,<span class="number">0xFF</span>, <span class="comment">// LOGICAL_MAXIMUM (255) </span></span><br><span class="line">	<span class="number">0x75</span>,<span class="number">0x08</span>, <span class="comment">// REPORT_SIZE (8bit) </span></span><br><span class="line">	<span class="number">0x95</span>,<span class="number">0x40</span>, <span class="comment">// REPORT_COUNT (64Byte) </span></span><br><span class="line">	<span class="number">0x91</span>,<span class="number">0x02</span>, <span class="comment">// OUTPUT (Data,Var,Abs) </span></span><br><span class="line">  <span class="comment">/* USER CODE END 0 */</span></span><br><span class="line">  <span class="number">0xC0</span>    <span class="comment">/*     END_COLLECTION	             */</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li>
<li>2.usbd_conf.h做buff长度修改：<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_CUSTOMHID_OUTREPORT_BUF_SIZE      64</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> USBD_CUSTOM_HID_REPORT_DESC_SIZE       33</span></span><br></pre></td></tr></table></figure>
usbd_customhid.h文件中的发送与接收长度<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> CUSTOM_HID_EPIN_SIZE               0x40</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> CUSTOM_HID_EPOUT_SIZE              0x40</span></span><br></pre></td></tr></table></figure></li>
<li>3.收发内容:<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">uint8_t</span> USB_Recive_Buffer[<span class="number">64</span>];</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span>  <span class="title function_">USBD_CUSTOM_HID_DataOut</span> <span class="params">(USBD_HandleTypeDef *pdev, </span></span><br><span class="line"><span class="params">                              <span class="type">uint8_t</span> epnum)</span></span><br><span class="line">&#123;</span><br><span class="line">  </span><br><span class="line">  USBD_CUSTOM_HID_HandleTypeDef     *hhid = (USBD_CUSTOM_HID_HandleTypeDef*)pdev-&gt;pClassData;  </span><br><span class="line">  </span><br><span class="line"> <span class="comment">/* ((USBD_CUSTOM_HID_ItfTypeDef *)pdev-&gt;pUserData)-&gt;OutEvent(hhid-&gt;Report_buf[0], </span></span><br><span class="line"><span class="comment">                                                            hhid-&gt;Report_buf[1]);</span></span><br><span class="line"><span class="comment">   </span></span><br><span class="line"><span class="comment">  USBD_LL_PrepareReceive(pdev, CUSTOM_HID_EPOUT_ADDR , hhid-&gt;Report_buf, </span></span><br><span class="line"><span class="comment">                         USBD_CUSTOMHID_OUTREPORT_BUF_SIZE);</span></span><br><span class="line"><span class="comment">	*/</span></span><br><span class="line">	USBD_CUSTOM_HID_SendReport(pdev,USB_Recive_Buffer,<span class="number">64</span>);	 </span><br><span class="line">	 USBD_LL_PrepareReceive( pdev, CUSTOM_HID_EPOUT_ADDR , USB_Recive_Buffer, <span class="keyword">sizeof</span>( USB_Recive_Buffer ) );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> USBD_OK;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ul>
<p>CDC<br>接收</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">int8_t</span> <span class="title function_">CDC_Receive_FS</span><span class="params">(<span class="type">uint8_t</span>* Buf, <span class="type">uint32_t</span> *Len)</span></span><br></pre></td></tr></table></figure>
<p>发送</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">CDC_Transmit_FS</span><br></pre></td></tr></table></figure>

<h3 id="HID-MOUSE"><a href="#HID-MOUSE" class="headerlink" title="HID_MOUSE"></a>HID_MOUSE</h3><p>Demo:鼠标每秒右移10</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mouseHID_t</span> &#123;</span></span><br><span class="line">    <span class="type">uint8_t</span> buttons;<span class="comment">//左0x0001 右0x0010 中0x0100</span></span><br><span class="line">    <span class="type">int8_t</span> x;<span class="comment">//+:右 -:左</span></span><br><span class="line">    <span class="type">int8_t</span> y;</span><br><span class="line">    <span class="type">int8_t</span> wheel;<span class="comment">//+:上 -:下</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">mouseHID_t</span> <span class="title">mouseHID</span>;</span></span><br><span class="line"></span><br><span class="line">mouseHID.buttons = <span class="number">0</span>;</span><br><span class="line">mouseHID.x = <span class="number">10</span>;</span><br><span class="line">mouseHID.y = <span class="number">0</span>;</span><br><span class="line">mouseHID.wheel = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  mouseHID.x = <span class="number">10</span>;</span><br><span class="line">  USBD_HID_SendReport(&amp;hUsbDeviceFS, (<span class="type">uint8_t</span>*)&amp;mouseHID, <span class="keyword">sizeof</span>(<span class="keyword">struct</span> mouseHID_t));</span><br><span class="line">  HAL_Delay(<span class="number">1000</span>);</span><br></pre></td></tr></table></figure>


<p>HID_KEY</p>
<p>usbd_hid.h文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> HID_EPIN_SIZE  0x08</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> HID_MOUSE_REPORT_DESC_SIZE 63</span></span><br></pre></td></tr></table></figure>
<p>usbd_desc.c文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//  #define USBD_VID     0x1111</span></span><br><span class="line">  <span class="meta">#<span class="keyword">define</span> USBD_PID_FS  0x1111</span></span><br></pre></td></tr></table></figure>
<p>usbd_hid.c文件</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="number">0x01</span>,   <span class="comment">/*nInterfaceProtocol : 0=none, 1=keyboard, 2=mouse*/</span></span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">HID_MOUSE_ReportDesc[HID_MOUSE_REPORT_DESC_SIZE]</span><br><span class="line"> <span class="number">0x05</span>, <span class="number">0x01</span>, <span class="comment">// USAGE_PAGE (Generic Desktop) //63</span></span><br><span class="line"> <span class="number">0x09</span>, <span class="number">0x06</span>, <span class="comment">// USAGE (Keyboard)</span></span><br><span class="line"> <span class="number">0xa1</span>, <span class="number">0x01</span>, <span class="comment">// COLLECTION (Application)</span></span><br><span class="line"> <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="comment">// USAGE_PAGE (Keyboard)</span></span><br><span class="line"> <span class="number">0x19</span>, <span class="number">0xe0</span>, <span class="comment">// USAGE_MINIMUM (Keyboard LeftControl)</span></span><br><span class="line"> <span class="number">0x29</span>, <span class="number">0xe7</span>, <span class="comment">// USAGE_MAXIMUM (Keyboard Right GUI)</span></span><br><span class="line"> <span class="number">0x15</span>, <span class="number">0x00</span>, <span class="comment">// LOGICAL_MINIMUM (0)</span></span><br><span class="line"> <span class="number">0x25</span>, <span class="number">0x01</span>, <span class="comment">// LOGICAL_MAXIMUM (1)</span></span><br><span class="line"> <span class="number">0x75</span>, <span class="number">0x01</span>, <span class="comment">// REPORT_SIZE (1)</span></span><br><span class="line"> <span class="number">0x95</span>, <span class="number">0x08</span>, <span class="comment">// REPORT_COUNT (8)</span></span><br><span class="line"> <span class="number">0x81</span>, <span class="number">0x02</span>, <span class="comment">// INPUT (Data,Var,Abs)</span></span><br><span class="line"> <span class="number">0x95</span>, <span class="number">0x01</span>, <span class="comment">// REPORT_COUNT (1)</span></span><br><span class="line"> <span class="number">0x75</span>, <span class="number">0x08</span>, <span class="comment">// REPORT_SIZE (8)</span></span><br><span class="line"> <span class="number">0x81</span>, <span class="number">0x03</span>, <span class="comment">// INPUT (Cnst,Var,Abs)</span></span><br><span class="line"> <span class="number">0x95</span>, <span class="number">0x05</span>, <span class="comment">// REPORT_COUNT (5)</span></span><br><span class="line"> <span class="number">0x75</span>, <span class="number">0x01</span>, <span class="comment">// REPORT_SIZE (1)</span></span><br><span class="line"> <span class="number">0x05</span>, <span class="number">0x08</span>, <span class="comment">// USAGE_PAGE (LEDs)</span></span><br><span class="line"> <span class="number">0x19</span>, <span class="number">0x01</span>, <span class="comment">// USAGE_MINIMUM (Num Lock)</span></span><br><span class="line"> <span class="number">0x29</span>, <span class="number">0x05</span>, <span class="comment">// USAGE_MAXIMUM (Kana)</span></span><br><span class="line"> <span class="number">0x91</span>, <span class="number">0x02</span>, <span class="comment">// OUTPUT (Data,Var,Abs)</span></span><br><span class="line"> <span class="number">0x95</span>, <span class="number">0x01</span>, <span class="comment">// REPORT_COUNT (1)</span></span><br><span class="line"> <span class="number">0x75</span>, <span class="number">0x03</span>, <span class="comment">// REPORT_SIZE (3)</span></span><br><span class="line"> <span class="number">0x91</span>, <span class="number">0x03</span>, <span class="comment">// OUTPUT (Cnst,Var,Abs)</span></span><br><span class="line"> <span class="number">0x95</span>, <span class="number">0x06</span>, <span class="comment">// REPORT_COUNT (6)</span></span><br><span class="line"> <span class="number">0x75</span>, <span class="number">0x08</span>, <span class="comment">// REPORT_SIZE (8)</span></span><br><span class="line"> <span class="number">0x15</span>, <span class="number">0x00</span>, <span class="comment">// LOGICAL_MINIMUM (0)</span></span><br><span class="line"> <span class="number">0x25</span>, <span class="number">0x65</span>, <span class="comment">// LOGICAL_MAXIMUM (101)</span></span><br><span class="line"> <span class="number">0x05</span>, <span class="number">0x07</span>, <span class="comment">// USAGE_PAGE (Keyboard)</span></span><br><span class="line"> <span class="number">0x19</span>, <span class="number">0x00</span>, <span class="comment">// USAGE_MINIMUM (Reserved (no event indicated))</span></span><br><span class="line"> <span class="number">0x29</span>, <span class="number">0x65</span>, <span class="comment">// USAGE_MAXIMUM (Keyboard Application)</span></span><br><span class="line"> <span class="number">0x81</span>, <span class="number">0x00</span>, <span class="comment">// INPUT (Data,Ary,Abs)</span></span><br><span class="line"> <span class="number">0xc0</span>, <span class="comment">// END_COLLECTION</span></span><br></pre></td></tr></table></figure>
<p>Demo:输出按键A</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">* buffer[0] - bit0: Left CTRL</span></span><br><span class="line"><span class="comment">*           -bit1: Left SHIFT</span></span><br><span class="line"><span class="comment">*           -bit2: Left ALT</span></span><br><span class="line"><span class="comment">*           -bit3: Left GUI</span></span><br><span class="line"><span class="comment">*           -bit4: Right CTRL</span></span><br><span class="line"><span class="comment">*           -bit5: Right SHIFT</span></span><br><span class="line"><span class="comment">*           -bit6: Right ALT</span></span><br><span class="line"><span class="comment">*           -bit7: Right GUI </span></span><br><span class="line"><span class="comment">* buffer[1] - Padding = Always 0x00</span></span><br><span class="line"><span class="comment">* buffer[2] - Key 1</span></span><br><span class="line"><span class="comment">* buffer[3] - Key 2</span></span><br><span class="line"><span class="comment">* buffer[4] - Key 3</span></span><br><span class="line"><span class="comment">* buffer[5] - Key 4</span></span><br><span class="line"><span class="comment">* buffer[6] - Key 5</span></span><br><span class="line"><span class="comment">* buffer[7] - Key 6</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> buffer[<span class="number">0</span>] = <span class="number">0x02</span>; <span class="comment">//shift</span></span><br><span class="line"> buffer[<span class="number">2</span>] = <span class="number">0x04</span>; <span class="comment">// a</span></span><br><span class="line"> USBD_HID_SendReport(&amp;hUsbDeviceFS, buffer, <span class="number">8</span>); <span class="comment">//send</span></span><br><span class="line"> HAL_Delay(<span class="number">15</span>); <span class="comment">//delay</span></span><br><span class="line"></span><br><span class="line"> buffer[<span class="number">0</span>] = <span class="number">0x00</span>;</span><br><span class="line"> buffer[<span class="number">2</span>] = <span class="number">0x00</span>;</span><br><span class="line"> USBD_HID_SendReport(&amp;hUsbDeviceFS, buffer, <span class="number">8</span>);</span><br><span class="line"> HAL_Delay(<span class="number">15</span>);</span><br></pre></td></tr></table></figure>
<h2 id="HOST"><a href="#HOST" class="headerlink" title="HOST"></a>HOST</h2><p>HID_KeyMouse</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">USBMouseHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint8_t</span> temp;</span><br><span class="line">	<span class="keyword">if</span> (Appli_state == APPLICATION_READY)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="comment">//keyboard</span></span><br><span class="line">		<span class="keyword">if</span> (USBH_HID_GetDeviceType(&amp;hUsbHostFS) == HID_KEYBOARD)</span><br><span class="line">		&#123;</span><br><span class="line">			HID_KEYBD_Info_TypeDef *KeyEvent = USBH_HID_GetKeybdInfo(&amp;hUsbHostFS);</span><br><span class="line">				<span class="keyword">if</span> (temp != USBH_HID_GetASCIICode(KeyEvent))</span><br><span class="line">				&#123;</span><br><span class="line">					temp = USBH_HID_GetASCIICode(KeyEvent);</span><br><span class="line">					<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,USBH_HID_GetASCIICode(KeyEvent));</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">		<span class="comment">//mouse</span></span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span> (USBH_HID_GetDeviceType(&amp;hUsbHostFS) == HID_MOUSE)</span><br><span class="line">		&#123;</span><br><span class="line">			HID_MOUSE_Info_TypeDef *MouseEvent = USBH_HID_GetMouseInfo(&amp;hUsbHostFS);</span><br><span class="line">			<span class="keyword">if</span> (MouseEvent != <span class="literal">NULL</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;button:%d\r\n&quot;</span>,MouseEvent-&gt;buttons[<span class="number">0</span>]);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>需要对枚举状态判断</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> i;</span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line">  <span class="keyword">case</span> HOST_ENUMERATION:</span><br><span class="line"><span class="comment">//--------------------------------</span></span><br><span class="line"></span><br><span class="line">		i = <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			i++;</span><br><span class="line">			    USBH_Delay(<span class="number">10</span>); </span><br><span class="line">			<span class="keyword">if</span> (i&gt;<span class="number">200</span>)</span><br><span class="line">			&#123;</span><br><span class="line">				i = <span class="number">0</span>;</span><br><span class="line">				phost-&gt;gState = HOST_DEV_DISCONNECTED;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br></pre></td></tr></table></figure>
<p>长时间枚举失败 返回</p>
]]></content>
      <categories>
        <category>stm32</category>
        <category>usb</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>usb</tag>
      </tags>
  </entry>
  <entry>
    <title>Scrapy</title>
    <url>/2024/12/24/python/scrapy/</url>
    <content><![CDATA[<h1 id="scrapy"><a href="#scrapy" class="headerlink" title="scrapy"></a>scrapy</h1><ul>
<li><h2 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">scrapy startproject lianjia</span><br></pre></td></tr></table></figure>
</li>
<li><h2 id="打开目录"><a href="#打开目录" class="headerlink" title="打开目录"></a>打开目录</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> lianjia</span><br></pre></td></tr></table></figure></li>
<li><h2 id="新建爬虫"><a href="#新建爬虫" class="headerlink" title="新建爬虫"></a>新建爬虫</h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scrapy genspider fang wh.lianjia.com/ershoufang</span><br></pre></td></tr></table></figure></li>
<li><h2 id="运行爬虫"><a href="#运行爬虫" class="headerlink" title="运行爬虫"></a>运行爬虫</h2>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">scrapy crawl fang</span><br></pre></td></tr></table></figure></li>
</ul>
<h2 id="工程修改"><a href="#工程修改" class="headerlink" title="工程修改"></a>工程修改</h2><ul>
<li><p>settings.py<br>配置参数相关</p>
  <figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//robots.txt 规则  </span></span><br><span class="line">ROBOTSTXT_OBEY = False</span><br><span class="line"><span class="comment">//延时  </span></span><br><span class="line">DOWNLOAD_DELAY = <span class="number">0.2</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>pipelines.py<br>存储相关</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> itemadapter <span class="keyword">import</span> ItemAdapter</span><br><span class="line"><span class="keyword">import</span> csv</span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LianjiaPipeline</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">process_item</span>(<span class="params">self, item, spider</span>):</span><br><span class="line">        <span class="comment"># self.filename = &#x27;a.csv&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.filename = <span class="built_in">str</span>(item[<span class="string">&#x27;local&#x27;</span>]+<span class="string">&#x27;.csv&#x27;</span>)</span><br><span class="line">        <span class="variable language_">self</span>.file = codecs.<span class="built_in">open</span>(<span class="variable language_">self</span>.filename, <span class="string">&#x27;a&#x27;</span>, encoding=<span class="string">&#x27;gbk&#x27;</span>)<span class="comment">#&#x27;utf_8_sig&#x27;</span></span><br><span class="line">        fieldnames = [<span class="string">&#x27;local&#x27;</span>,<span class="string">&#x27;page&#x27;</span>,<span class="string">&#x27;cnt&#x27;</span>,<span class="string">&#x27;title&#x27;</span>, <span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;flood&#x27;</span>, <span class="string">&#x27;type&#x27;</span>,<span class="string">&#x27;area&#x27;</span>,<span class="string">&#x27;dir&#x27;</span>,<span class="string">&#x27;mode1&#x27;</span>,<span class="string">&#x27;mode2&#x27;</span>,<span class="string">&#x27;mode3&#x27;</span>,<span class="string">&#x27;price&#x27;</span>, <span class="string">&#x27;unit&#x27;</span>]<span class="comment">#,&#x27;year&#x27;</span></span><br><span class="line">        <span class="comment"># fieldnames = [&#x27;title&#x27;, &#x27;flood&#x27;, &#x27;address&#x27;,&#x27;price&#x27;, &#x27;unit&#x27;]     </span></span><br><span class="line">        w = csv.DictWriter(<span class="variable language_">self</span>.file, fieldnames=fieldnames)</span><br><span class="line">        w.writerow(item)</span><br><span class="line">        <span class="variable language_">self</span>.file.close()</span><br><span class="line">        <span class="keyword">return</span> item</span><br><span class="line"></span><br><span class="line"><span class="comment"># def __init__(self):</span></span><br><span class="line"><span class="comment">#     self.file = codecs.open(&#x27;zhuankou.csv&#x27;, &#x27;w&#x27;, encoding=&#x27;gbk&#x27;)#&#x27;utf_8_sig&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># def close_spider(self, spider):</span></span><br><span class="line"><span class="comment">#     self.file.close()</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
<li><p>items.py<br>注册项</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LianjiaItem</span>(scrapy.Item):</span><br><span class="line">    <span class="comment"># define the fields for your item here like:</span></span><br><span class="line">    <span class="comment"># name = scrapy.Field()</span></span><br><span class="line">    </span><br><span class="line">    local= scrapy.Field()</span><br><span class="line">    page = scrapy.Field()</span><br><span class="line">    cnt =scrapy.Field()</span><br><span class="line">    title= scrapy.Field()</span><br><span class="line">    html= scrapy.Field()</span><br><span class="line">    flood= scrapy.Field()</span><br><span class="line">    address= scrapy.Field()</span><br><span class="line"></span><br><span class="line">    <span class="built_in">type</span>= scrapy.Field()</span><br><span class="line">    area= scrapy.Field()</span><br><span class="line">    <span class="built_in">dir</span>= scrapy.Field()</span><br><span class="line">    mode1= scrapy.Field()</span><br><span class="line">    mode2= scrapy.Field()</span><br><span class="line">    <span class="comment"># year= scrapy.Field()</span></span><br><span class="line">    mode3= scrapy.Field()</span><br><span class="line"></span><br><span class="line">    price= scrapy.Field()</span><br><span class="line">    unit= scrapy.Field()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
</li>
<li><p>spiders<br>解析相关</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> scrapy</span><br><span class="line"><span class="keyword">from</span> lianjia.items <span class="keyword">import</span> LianjiaItem</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FangSpider</span>(scrapy.Spider):</span><br><span class="line">    name = <span class="string">&#x27;fang&#x27;</span></span><br><span class="line">    allowed_domains = [<span class="string">&#x27;wh.lianjia.com&#x27;</span>]</span><br><span class="line">    start_urls = [<span class="string">&#x27;http://wh.lianjia.com/ershoufang/&#x27;</span>]<span class="comment">#+pg1/</span></span><br><span class="line">    getpathall = []</span><br><span class="line">    urlnum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    #解析全部区域</span></span><br><span class="line"><span class="string">    def start_requests(self):</span></span><br><span class="line"><span class="string">        self.base = &#x27;http://wh.lianjia.com&#x27;</span></span><br><span class="line"><span class="string">        url = &#x27;http://wh.lianjia.com/ershoufang/&#x27;</span></span><br><span class="line"><span class="string">        yield scrapy.Request(url=url,callback=self.parse_url)</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string">    def parse_url(self,response):</span></span><br><span class="line"><span class="string">        locals = response.xpath(&#x27;//div[@class=&quot;position&quot;]//div[@data-role=&quot;ershoufang&quot;]//a[@title]/@href&#x27;).extract()</span></span><br><span class="line"><span class="string">        # print(locals)</span></span><br><span class="line"><span class="string">        self.getpathall.extend(locals)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        cnt = len(locals)</span></span><br><span class="line"><span class="string">        # print(cnt)</span></span><br><span class="line"><span class="string">        for list in locals:</span></span><br><span class="line"><span class="string">            url = self.base +list</span></span><br><span class="line"><span class="string">            # print(url)</span></span><br><span class="line"><span class="string">            yield scrapy.Request(url=url,meta=&#123;&#x27;flag&#x27;:cnt&#125;,callback=self.prase_local)</span></span><br><span class="line"><span class="string">            # print(list)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    def prase_local(self,response):</span></span><br><span class="line"><span class="string">        self.urlnum+=1</span></span><br><span class="line"><span class="string">        self.area = response.xpath(&#x27;//div[@class=&quot;position&quot;]//div[@data-role=&quot;ershoufang&quot;]//div[2]//a/@href&#x27;).extract()</span></span><br><span class="line"><span class="string">        # print(self.area)</span></span><br><span class="line"><span class="string">        self.getpathall.extend(self.area)</span></span><br><span class="line"><span class="string">        # print(self.urlnum)</span></span><br><span class="line"><span class="string">        num = response.meta[&#x27;flag&#x27;]</span></span><br><span class="line"><span class="string">        if num == self.urlnum:</span></span><br><span class="line"><span class="string">            set(self.getpathall)</span></span><br><span class="line"><span class="string">            for list in self.getpathall:</span></span><br><span class="line"><span class="string">                url = self.base+list</span></span><br><span class="line"><span class="string">                local = list.split(&#x27;/&#x27;)[2]</span></span><br><span class="line"><span class="string">                yield scrapy.Request(url=url,meta=&#123;&#x27;local&#x27;:local&#125;,callback=self.parse_list)</span></span><br><span class="line"><span class="string">                print(&#x27;获取区域列表&#x27;)</span></span><br><span class="line"><span class="string">                print(list)</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_requests</span>(<span class="params">self</span>):</span><br><span class="line">    <span class="comment"># def parse_list(self,response):</span></span><br><span class="line">        <span class="comment"># local = response.meta[&#x27;local&#x27;]        </span></span><br><span class="line">        total = <span class="number">100</span></span><br><span class="line">        local = <span class="string">&#x27;guanggudong&#x27;</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;解析区域:&#x27;</span>+local)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,total):</span><br><span class="line">            <span class="keyword">if</span> i &gt; <span class="number">1</span>:</span><br><span class="line">                url=<span class="string">&quot;http://wh.lianjia.com/ershoufang/&#123;0&#125;/pg&#123;1&#125;/&quot;</span>.<span class="built_in">format</span>(local,i)</span><br><span class="line">            <span class="comment"># print(url)</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                url = <span class="string">&#x27;http://wh.lianjia.com/ershoufang/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(local)</span><br><span class="line">            <span class="keyword">yield</span> scrapy.Request(url=url,meta=&#123;<span class="string">&#x27;local&#x27;</span>:local,<span class="string">&#x27;page&#x27;</span>:i&#125;,callback=<span class="variable language_">self</span>.parse)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">parse</span>(<span class="params">self, response</span>):</span><br><span class="line">        item=LianjiaItem()</span><br><span class="line">        item[<span class="string">&#x27;local&#x27;</span>] = response.meta[<span class="string">&#x27;local&#x27;</span>]</span><br><span class="line">        item[<span class="string">&#x27;page&#x27;</span>] = response.meta[<span class="string">&#x27;page&#x27;</span>]</span><br><span class="line">        xpath_parse = response.xpath(<span class="string">&#x27;//div[@class=&quot;info clear&quot;]&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;获取第&#123;&#125;页&quot;</span>.<span class="built_in">format</span>(item[<span class="string">&#x27;page&#x27;</span>]))</span><br><span class="line">        cnt = <span class="number">1</span></span><br><span class="line">        <span class="keyword">for</span> xpath <span class="keyword">in</span> xpath_parse:</span><br><span class="line">            item[<span class="string">&#x27;cnt&#x27;</span>] = cnt</span><br><span class="line">            item[<span class="string">&#x27;title&#x27;</span>] = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;title&quot;]//a/text()&#x27;</span>).get()</span><br><span class="line">            <span class="comment"># print(item[&#x27;title&#x27;])</span></span><br><span class="line">            item[<span class="string">&#x27;html&#x27;</span>] = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;title&quot;]//a/@href&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;flood&#x27;</span>] = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;flood&quot;]//a/text()&#x27;</span>).get()</span><br><span class="line">            <span class="comment"># item[&#x27;address&#x27;] = xpath.xpath(&#x27;.//div[@class=&quot;address&quot;]//div/text()&#x27;).get()</span></span><br><span class="line">            strinfo = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;address&quot;]//div/text()&#x27;</span>).get()</span><br><span class="line">            <span class="built_in">list</span> = strinfo.split(<span class="string">&#x27;|&#x27;</span>,<span class="number">5</span>)</span><br><span class="line">            item[<span class="string">&#x27;type&#x27;</span>] = <span class="built_in">list</span>[<span class="number">0</span>]</span><br><span class="line">            item[<span class="string">&#x27;area&#x27;</span>] = <span class="built_in">list</span>[<span class="number">1</span>]</span><br><span class="line">            item[<span class="string">&#x27;dir&#x27;</span>] = <span class="built_in">list</span>[<span class="number">2</span>]</span><br><span class="line">            item[<span class="string">&#x27;mode1&#x27;</span>] = <span class="built_in">list</span>[<span class="number">3</span>]</span><br><span class="line">            item[<span class="string">&#x27;mode2&#x27;</span>] = <span class="built_in">list</span>[<span class="number">4</span>]</span><br><span class="line">            item[<span class="string">&#x27;mode3&#x27;</span>] = <span class="built_in">list</span>[<span class="number">5</span>]</span><br><span class="line"></span><br><span class="line">            item[<span class="string">&#x27;price&#x27;</span>] = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;totalPrice totalPrice2&quot;]//span//text()&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;price&#x27;</span>] += xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;totalPrice totalPrice2&quot;]//i[2]//text()&#x27;</span>).get()</span><br><span class="line">            item[<span class="string">&#x27;unit&#x27;</span>] = xpath.xpath(<span class="string">&#x27;.//div[@class=&quot;unitPrice&quot;]//span//text()&#x27;</span>).get()</span><br><span class="line">            cnt+=<span class="number">1</span></span><br><span class="line">            <span class="keyword">yield</span>(item)</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <categories>
        <category>python</category>
        <category>爬虫</category>
      </categories>
      <tags>
        <tag>python</tag>
        <tag>爬虫</tag>
      </tags>
  </entry>
  <entry>
    <title>编译断言</title>
    <url>/2024/12/24/stm32/assert/</url>
    <content><![CDATA[<h1 id="编译断言"><a href="#编译断言" class="headerlink" title="编译断言"></a><code>编译断言</code></h1><h2 id="编译期间断言判断"><a href="#编译期间断言判断" class="headerlink" title="编译期间断言判断"></a>编译期间断言判断</h2><h3 id="利用枚举数判断"><a href="#利用枚举数判断" class="headerlink" title="利用枚举数判断"></a>利用枚举数判断</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> COMPILER_CONCAT_(a, b) a##b</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPILER_CONCAT(a, b) COMPILER_CONCAT_(a, b)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Divide by zero if the the expression is false.  This</span></span><br><span class="line"><span class="comment">// causes an error at compile time.</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// The special value &#x27;__COUNTER__&#x27; is used to create a unique value to</span></span><br><span class="line"><span class="comment">// append to &#x27;compiler_assert_&#x27; to create a unique token.  This prevents</span></span><br><span class="line"><span class="comment">// conflicts resulting from the same enum being declared multiple times.</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> COMPILER_ASSERT(e) enum &#123; COMPILER_CONCAT(compiler_assert_, __COUNTER__) = 1/((e) ? 1 : 0) &#125;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//(4位)单hex转字符</span></span><br><span class="line"><span class="type">static</span> <span class="type">char</span> <span class="title function_">hex_to_ascii</span><span class="params">(<span class="type">uint8_t</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (<span class="string">&#x27;0&#x27;</span> + (x&gt;<span class="number">9</span> ? x+<span class="number">0x27</span> : x));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8位HEX转字符串</span></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">util_write_hex8</span><span class="params">(<span class="type">char</span> *str, <span class="type">uint8_t</span> value)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">static</span> <span class="type">const</span> <span class="type">char</span> nybble_chars[] = <span class="string">&quot;0123456789abcdef&quot;</span>;</span><br><span class="line">    *(str + <span class="number">0</span>) = nybble_chars[(value &gt;&gt; <span class="number">4</span>) &amp; <span class="number">0x0F</span> ];</span><br><span class="line">    *(str + <span class="number">1</span>) = nybble_chars[(value &gt;&gt; <span class="number">0</span>) &amp; <span class="number">0x0F</span> ];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//字符转数</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> <span class="title function_">ctoh</span><span class="params">(<span class="type">char</span> c)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (c &amp; <span class="number">0x10</span>) ? <span class="comment">/*0-9*/</span> c &amp; <span class="number">0xf</span> : <span class="comment">/*A-F, a-f*/</span> (c &amp; <span class="number">0xf</span>) + <span class="number">9</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>




]]></content>
      <categories>
        <category>stm32</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>DAPLink</title>
    <url>/2024/12/24/stm32/daplink/</url>
    <content><![CDATA[<h1 id="DAPLink"><a href="#DAPLink" class="headerlink" title="DAPLink"></a><code>DAPLink</code></h1><h2 id="去掉USB的IAP功能-bootloader省掉，APP部分修改宏定义大小，可用stm32f103c8t6"><a href="#去掉USB的IAP功能-bootloader省掉，APP部分修改宏定义大小，可用stm32f103c8t6" class="headerlink" title="去掉USB的IAP功能,bootloader省掉，APP部分修改宏定义大小，可用stm32f103c8t6"></a>去掉USB的IAP功能,bootloader省掉，APP部分修改宏定义大小，可用stm32f103c8t6</h2><p>stm32f103xb_stm32f103rb_if 比stm32f103xb_if 多了g_target_family定义<br>init_family函数直接返回,多了目标配置</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">init_family();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (g_target_family &amp;&amp; g_target_family-&gt;prerun_target_config) &#123;</span><br><span class="line">    g_target_family-&gt;prerun_target_config();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @file    daplink_addr.h</span></span><br><span class="line"><span class="comment"> * @brief</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * DAPLink Interface Firmware</span></span><br><span class="line"><span class="comment"> * */</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifndef</span> DAPLINK_ADDR_H</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ADDR_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Device sizes */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_START               0x08000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_SIZE                0x00010000</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_START               0x20000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_SIZE                0x00005000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ROM sizes */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_BL_START            0x08000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_BL_SIZE             0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_CONFIG_ADMIN_START  0x08000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_CONFIG_ADMIN_SIZE   0</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_IF_START            0x08000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_IF_SIZE             0x0000FC00</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_CONFIG_USER_START   0x0800FC00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_CONFIG_USER_SIZE    0x00000400</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* RAM sizes */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_APP_START           0x20000000</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_APP_SIZE            0x00004F00</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_SHARED_START        0x20004F00</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_RAM_SHARED_SIZE         0x00000100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Flash Programming Info */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_SECTOR_SIZE             0x00000400</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_MIN_WRITE_SIZE          0x00000400</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Current build */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(DAPLINK_BL)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_APP_START            DAPLINK_ROM_BL_START</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_APP_SIZE             DAPLINK_ROM_BL_SIZE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_UPDATE_START         DAPLINK_ROM_IF_START</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_UPDATE_SIZE          DAPLINK_ROM_IF_SIZE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(DAPLINK_IF)</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_APP_START            DAPLINK_ROM_IF_START</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_APP_SIZE             DAPLINK_ROM_IF_SIZE</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_UPDATE_START         DAPLINK_ROM_BL_START</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> DAPLINK_ROM_UPDATE_SIZE          DAPLINK_ROM_BL_SIZE</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">error</span> <span class="string">&quot;Build must be either bootloader or interface&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>



<h3 id="IO-Config-h修改配置更改IO口-uart-c修改CDC串口。可引出boot0-CDC改用串口1，使用ISP烧录，增加nReset按键，增加各外设LED指示"><a href="#IO-Config-h修改配置更改IO口-uart-c修改CDC串口。可引出boot0-CDC改用串口1，使用ISP烧录，增加nReset按键，增加各外设LED指示" class="headerlink" title="IO_Config.h修改配置更改IO口,uart.c修改CDC串口。可引出boot0,CDC改用串口1，使用ISP烧录，增加nReset按键，增加各外设LED指示"></a>IO_Config.h修改配置更改IO口,uart.c修改CDC串口。可引出boot0,CDC改用串口1，使用ISP烧录，增加nReset按键，增加各外设LED指示</h3><h3 id="可以在vfs-user-c加入使用信息"><a href="#可以在vfs-user-c加入使用信息" class="headerlink" title="可以在vfs_user.c加入使用信息"></a>可以在vfs_user.c加入使用信息</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> <span class="title function_">update_details_txt_file</span><span class="params">(<span class="type">uint8_t</span> *buf, <span class="type">uint32_t</span> size, <span class="type">uint32_t</span> start)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> pos = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    pos += util_write_string_in_region(buf, size, start, pos,</span><br><span class="line">        <span class="string">&quot;Author: guoxin\r\n\r\n&quot;</span></span><br><span class="line">        <span class="comment">// Build ID</span></span><br><span class="line">        <span class="string">&quot;Build ID: (&quot;</span> COMPILER_DESCRIPTION LOCAL_MODS <span class="string">&quot;)\r\n&quot;</span>);</span><br><span class="line">    <span class="comment">// Unique ID</span></span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;Unique ID: @U\r\n&quot;</span>);</span><br><span class="line">    <span class="comment">// HIC ID</span></span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;HIC ID: @D\r\n&quot;</span>);</span><br><span class="line">    <span class="comment">// Settings</span></span><br><span class="line">    pos += setting_in_region(buf, size, start, pos, <span class="string">&quot;Auto Reset&quot;</span>, config_get_auto_rst());</span><br><span class="line">    pos += setting_in_region(buf, size, start, pos, <span class="string">&quot;Automation allowed&quot;</span>, config_get_automation_allowed());</span><br><span class="line">    pos += setting_in_region(buf, size, start, pos, <span class="string">&quot;Overflow detection&quot;</span>, config_get_overflow_detect());</span><br><span class="line">    pos += setting_in_region(buf, size, start, pos, <span class="string">&quot;Incompatible image detection&quot;</span>, config_get_detect_incompatible_target());</span><br><span class="line">    pos += setting_in_region(buf, size, start, pos, <span class="string">&quot;Page erasing&quot;</span>, config_ram_get_page_erase());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Current mode and version</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(DAPLINK_BL)</span></span><br><span class="line">    pos += util_write_string_in_region(buf, size, start, pos, <span class="string">&quot;Daplink Mode: Bootloader\r\n&quot;</span>);</span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;Bootloader Version: @V\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (info_get_interface_present()) &#123;</span><br><span class="line">        <span class="type">char</span> version[<span class="number">6</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span> &#125;;</span><br><span class="line">        pos += util_write_string_in_region(buf, size, start, pos, <span class="string">&quot;Interface Version: &quot;</span>);</span><br><span class="line">        util_write_uint32_zp(version, info_get_interface_version(), <span class="number">4</span>);</span><br><span class="line">        pos += util_write_in_region(buf, size, start, pos, version, <span class="number">6</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> defined(DAPLINK_IF)</span></span><br><span class="line">    pos += util_write_string_in_region(buf, size, start, pos, <span class="string">&quot;Daplink Mode: Interface\r\n&quot;</span>);</span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;Interface Version: @V\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DAPLINK_ROM_BL_SIZE != 0</span></span><br><span class="line">    <span class="keyword">if</span> (info_get_bootloader_present()) &#123;</span><br><span class="line">        <span class="type">char</span> version[<span class="number">6</span>] = &#123; <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span> &#125;;</span><br><span class="line">        pos += util_write_string_in_region(buf, size, start, pos, <span class="string">&quot;Bootloader Version: &quot;</span>);</span><br><span class="line">        util_write_uint32_zp(version, info_get_bootloader_version(), <span class="number">4</span>);</span><br><span class="line">        pos += util_write_in_region(buf, size, start, pos, version, <span class="number">6</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    pos += util_write_string_in_region(buf, size, start, pos,</span><br><span class="line">        <span class="comment">// Local modifications when making the build</span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> GIT_LOCAL_MODS</span></span><br><span class="line">        <span class="string">&quot;Local Mods: 1\r\n&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">else</span></span></span><br><span class="line">        <span class="string">&quot;Local Mods: 0\r\n&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="comment">// Supported USB endpoints</span></span><br><span class="line">        <span class="string">&quot;USB Interfaces: &quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> MSC_ENDPOINT</span></span><br><span class="line">        <span class="string">&quot;MSD&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> CDC_ENDPOINT</span></span><br><span class="line">        <span class="string">&quot;, CDC&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">ifdef</span> HID_ENDPOINT</span></span><br><span class="line">        <span class="string">&quot;, HID&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> (WEBUSB_INTERFACE)</span></span><br><span class="line">        <span class="string">&quot;, WebUSB&quot;</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">        <span class="string">&quot;\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> DAPLINK_ROM_BL_SIZE != 0</span></span><br><span class="line">    <span class="comment">// CRC of the bootloader (if there is one)</span></span><br><span class="line">    <span class="keyword">if</span> (info_get_bootloader_present()) &#123;</span><br><span class="line">        pos += hex32_field_in_region(buf, size, start, pos, <span class="string">&quot;Bootloader CRC&quot;</span>, info_get_crc_bootloader());</span><br><span class="line">    &#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// CRC of the interface</span></span><br><span class="line">    pos += hex32_field_in_region(buf, size, start, pos, <span class="string">&quot;Interface CRC&quot;</span>, info_get_crc_interface());</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Number of remounts that have occurred</span></span><br><span class="line">    pos += uint32_field_in_region(buf, size, start, pos, <span class="string">&quot;Remount count&quot;</span>, remount_count);</span><br><span class="line"></span><br><span class="line">    <span class="comment">//Target URL</span></span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;target mcu: stm32f103rb\r\n&quot;</span>);</span><br><span class="line"></span><br><span class="line">    pos += expand_string_in_region(buf, size, start, pos, <span class="string">&quot;\r\nUSART-&gt;TX:A2 RX:A3\r\nSWD-&gt;CLK:B13 DIO:B14 (DIO_IN:A12)\r\nJTAG-&gt;TDI:A7 TDO:A5\r\nLED:A9&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> pos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改虚拟硬盘文件</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">vfs_user_build_filesystem</span><span class="params">()</span></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//修改磁盘名称</span></span><br><span class="line"><span class="type">static</span> <span class="keyword">inline</span> <span class="type">const</span> <span class="type">char</span> * <span class="title function_">get_daplink_drive_name</span> <span class="params">( <span class="type">void</span> )</span></span><br></pre></td></tr></table></figure>





]]></content>
      <categories>
        <category>stm32</category>
        <category>DAPLink</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>DAPLink</tag>
      </tags>
  </entry>
  <entry>
    <title>objdump</title>
    <url>/2024/12/24/stm32/dump/</url>
    <content><![CDATA[<p><a href="https://www.bookstack.cn/read/linux-command/command-objdump.md">objdump - 显示二进制文件信息</a></p>
<h2 id="输出代码"><a href="#输出代码" class="headerlink" title="输出代码"></a>输出代码</h2><p>arm-none-eabi-objdump -j .text -S test.elf</p>
<h2 id="输出汇编"><a href="#输出汇编" class="headerlink" title="输出汇编"></a>输出汇编</h2><p>arm-none-eabi-objdump -D test.elf</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--archive-headers </span><br><span class="line">-a </span><br><span class="line">显示档案库的成员信息,类似ls -l将lib*.a的信息列出。 </span><br><span class="line">-b bfdname </span><br><span class="line">--target=bfdname </span><br><span class="line">指定目标码格式。这不是必须的，objdump能自动识别许多格式，比如： </span><br><span class="line">objdump -b oasys -m vax -h fu.o </span><br><span class="line">显示fu.o的头部摘要信息，明确指出该文件是Vax系统下用Oasys编译器生成的目标文件。objdump -i将给出这里可以指定的目标码格式列表。 </span><br><span class="line">-C </span><br><span class="line">--demangle </span><br><span class="line">将底层的符号名解码成用户级名字，除了去掉所开头的下划线之外，还使得C++函数名以可理解的方式显示出来。 </span><br><span class="line">--debugging </span><br><span class="line">-g </span><br><span class="line">显示调试信息。企图解析保存在文件中的调试信息并以C语言的语法显示出来。仅仅支持某些类型的调试信息。有些其他的格式被readelf -w支持。 </span><br><span class="line">-e </span><br><span class="line">--debugging-tags </span><br><span class="line">类似-g选项，但是生成的信息是和ctags工具相兼容的格式。 </span><br><span class="line">--disassemble </span><br><span class="line">-d </span><br><span class="line">从objfile中反汇编那些特定指令机器码的section。 </span><br><span class="line">-D </span><br><span class="line">--disassemble-all </span><br><span class="line">与 -d 类似，但反汇编所有section. </span><br><span class="line">--prefix-addresses </span><br><span class="line">反汇编的时候，显示每一行的完整地址。这是一种比较老的反汇编格式。 </span><br><span class="line">-EB </span><br><span class="line">-EL </span><br><span class="line">--endian=&#123;big|little&#125; </span><br><span class="line">指定目标文件的小端。这个项将影响反汇编出来的指令。在反汇编的文件没描述小端信息的时候用。例如S-records. </span><br><span class="line">-f </span><br><span class="line">--file-headers </span><br><span class="line">显示objfile中每个文件的整体头部摘要信息。 </span><br><span class="line">-h </span><br><span class="line">--section-headers </span><br><span class="line">--headers </span><br><span class="line">显示目标文件各个section的头部摘要信息。 </span><br><span class="line">-H </span><br><span class="line">--help </span><br><span class="line">简短的帮助信息。 </span><br><span class="line">-i </span><br><span class="line">--info </span><br><span class="line">显示对于 -b 或者 -m 选项可用的架构和目标格式列表。 </span><br><span class="line">-j name</span><br><span class="line">--section=name </span><br><span class="line">仅仅显示指定名称为name的section的信息 </span><br><span class="line">-l</span><br><span class="line">--line-numbers </span><br><span class="line">用文件名和行号标注相应的目标代码，仅仅和-d、-D或者-r一起使用使用-ld和使用-d的区别不是很大，在源码级调试的时候有用，要求编译时使用了-g之类的调试编译选项。 </span><br><span class="line">-m machine </span><br><span class="line">--architecture=machine </span><br><span class="line">指定反汇编目标文件时使用的架构，当待反汇编文件本身没描述架构信息的时候(比如S-records)，这个选项很有用。可以用-i选项列出这里能够指定的架构. </span><br><span class="line">--reloc </span><br><span class="line">-r </span><br><span class="line">显示文件的重定位入口。如果和-d或者-D一起使用，重定位部分以反汇编后的格式显示出来。 </span><br><span class="line">--dynamic-reloc </span><br><span class="line">-R </span><br><span class="line">显示文件的动态重定位入口，仅仅对于动态目标文件意义，比如某些共享库。 </span><br><span class="line">-s </span><br><span class="line">--full-contents </span><br><span class="line">显示指定section的完整内容。默认所有的非空section都会被显示。 </span><br><span class="line">-S </span><br><span class="line">--source </span><br><span class="line">尽可能反汇编出源代码，尤其当编译的时候指定了-g这种调试参数时，效果比较明显。隐含了-d参数。 </span><br><span class="line">--show-raw-insn </span><br><span class="line">反汇编的时候，显示每条汇编指令对应的机器码，如不指定--prefix-addresses，这将是缺省选项。 </span><br><span class="line">--no-show-raw-insn </span><br><span class="line">反汇编时，不显示汇编指令的机器码，如不指定--prefix-addresses，这将是缺省选项。 </span><br><span class="line">--start-address=address </span><br><span class="line">从指定地址开始显示数据，该选项影响-d、-r和-s选项的输出。 </span><br><span class="line">--stop-address=address </span><br><span class="line">显示数据直到指定地址为止，该项影响-d、-r和-s选项的输出。 </span><br><span class="line">-t </span><br><span class="line">--syms </span><br><span class="line">显示文件的符号表入口。类似于nm -s提供的信息 </span><br><span class="line">-T </span><br><span class="line">--dynamic-syms </span><br><span class="line">显示文件的动态符号表入口，仅仅对动态目标文件意义，比如某些共享库。它显示的信息类似于 nm -D|--dynamic 显示的信息。 </span><br><span class="line">-V </span><br><span class="line">--version </span><br><span class="line">版本信息 </span><br><span class="line">--all-headers </span><br><span class="line">-x </span><br><span class="line">显示所可用的头信息，包括符号表、重定位入口。-x 等价于-a -f -h -r -t 同时指定。 </span><br><span class="line">-z </span><br><span class="line">--disassemble-zeroes </span><br><span class="line">一般反汇编输出将省略大块的零，该选项使得这些零块也被反汇编。 </span><br><span class="line">@file 可以将选项集中到一个文件中，然后使用这个@file选项载入。</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>stm32</category>
        <category>objdump</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>objdump</tag>
      </tags>
  </entry>
  <entry>
    <title>HardFault</title>
    <url>/2024/12/24/stm32/hardfault/</url>
    <content><![CDATA[<h1 id="HardFault"><a href="#HardFault" class="headerlink" title="HardFault"></a><code>HardFault</code></h1><p>MSP的含义是Main_Stack_Pointer，即主栈<br>PSP的含义是 Process_Stack_Pointer,即任务栈</p>
<h4 id="armcortex-m的设计，一共有32个寄存器"><a href="#armcortex-m的设计，一共有32个寄存器" class="headerlink" title="armcortex-m的设计，一共有32个寄存器"></a><strong>armcortex-m的设计，一共有32个寄存器</strong></h4><p>13个通用寄存器，r0-r12<br>1个栈指针寄存器SP(r13)，PSP(SP_process)和MSP(SP_main)<br>1个链接寄存器LR(r14)，执行下一级函数自动存放LR压栈，函数返回的时会弹出LR到PC<br>1个程序计数器PC(r15)，指向当前指向的程序地址<br>1个程序状态寄存器（xPSR）  </p>
<table>
<thead>
<tr>
<th align="center"></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td align="center">r0~r3</td>
<td>用作传入函数参数，传出函数返回值。在子程序调用之间，可以将 r0-r3 用于任何用途。被调用函数在返回之前不必恢复 r0-r3。如果调用函数需要再次使用 r0-r3 的内容，则它必须保留这些内容。</td>
</tr>
<tr>
<td align="center">r4~r11</td>
<td>被用来存放函数的局部变量。如果被调用函数使用了这些寄存器，它在返回之前必须恢复这些寄存器的值。</td>
</tr>
<tr>
<td align="center">r12</td>
<td>是内部调用暂时寄存器 ip。它在过程链接胶合代码（例如，交互操作胶合代码）中用于此角色。在过程调用之间，可以将它用于任何用途。被调用函数在返回之前不必恢复 r12。</td>
</tr>
<tr>
<td align="center">r13</td>
<td>是栈指针 sp。它不能用于任何其它用途。sp 中存放的值在退出被调用函数时必须与进入时的值相同。</td>
</tr>
<tr>
<td align="center">r14</td>
<td>是链接寄存器 lr。如果您保存了返回地址，则可以在调用之间将 r14 用于其它用途，程序返回时要恢复</td>
</tr>
<tr>
<td align="center">r15</td>
<td>是程序计数器 PC。它不能用于任何其它用途。</td>
</tr>
</tbody></table>
<p><code>注意：在中断程序中，所有的寄存器都必须保护，编译器会自动保护R4～R11</code></p>
<p>不同的模式下，R0-R12、SP、LR是各有一份的，所以这样算下来，总共是32个寄存器，<br>但是在不同的模式下，并不能完全看到这32个寄存器的状态，只能看到其中的一部分。</p>
<p>自动压栈处理：<code>xPSR-&gt;PC-&gt;LR-&gt;r12-&gt;r3-&gt;r2-&gt;r1-&gt;r0</code></p>
<p>xPSP寄存器的 bit9被用来指示 SP是否需要对齐，bit9如果为1的话就需要双字对齐<br>如果为0的话就不需要双字对齐</p>
<p>当触发了PendSV异常进入中断后，系统默认是出于MSP状态的。<br>当切换任务时，就需要使用PSP作为任务堆栈指针。</p>
<p>一般使用修改LR寄存器的值来改变SP使用MSP还是PSP.</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>LR &#x3D;0xFFFFFFF9</td>
<td>使用MSP堆栈指针</td>
</tr>
<tr>
<td>LR &#x3D;0xFFFFFFFD</td>
<td>使用PSP堆栈指针</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p>所以一般PendSV中任务堆栈处理完毕后，需要使用LDR LR，&#x3D;0xFFFFFFFD<br>指令进行PSP任务堆栈的选择。再执行BX LR 指令，即可切换到堆栈保存的任务中去</p>
<p>LR寄存器记录函数或子程序调用后的返回地址，若函数又调用了函数或子程序，为了保证LR值不丢失，需要将LR入栈.<br>在异常处理时LR会被更新为特殊的EXC_RETURN数值。典型的有如下3种值：</p>
<table>
<thead>
<tr>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>0xFFFFFFF1</td>
<td>中断返回时从MSP恢复栈，返回之后操作模式为处理模式，使用MSP栈，即在中断嵌套情况下，返回上一级中断</td>
</tr>
<tr>
<td>0xFFFFFFF9</td>
<td>中断返回时从MSP恢复栈，返回之后操作模式为线程模式，使用MSP栈，该情况在只使用MSP不使用PSP时发生</td>
</tr>
<tr>
<td>0xFFFFFFFD</td>
<td>中断返回时从PSP恢复栈，返回之后操作模式为线程模式，使用PSP栈，即一般的从中断返回用户线程的情况</td>
</tr>
<tr>
<td></td>
<td></td>
</tr>
</tbody></table>
<p><a href="https://www.icode9.com/content-4-861836.html">参考</a></p>
<p>GCC下<br>daplink</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//hexdump logic on hardfault</span></span><br><span class="line">__USED __NO_RETURN <span class="type">void</span> _fault_handler(<span class="type">uint32_t</span> _lr)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">uint32_t</span> stk_ptr;</span><br><span class="line">    <span class="type">uint32_t</span> * <span class="built_in">stack</span> = (<span class="type">uint32_t</span> *)__get_MSP();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> ((_lr &amp; <span class="number">0xF</span>) == <span class="number">0xD</span>) &#123; <span class="comment">//process stack</span></span><br><span class="line">        <span class="built_in">stack</span> = (<span class="type">uint32_t</span> *)__get_PSP();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//calculate stack ptr before fault</span></span><br><span class="line">    stk_ptr = (<span class="type">uint32_t</span>)<span class="built_in">stack</span> + <span class="number">0x20</span>;</span><br><span class="line">    <span class="keyword">if</span> ((<span class="built_in">stack</span>[<span class="number">7</span>] &amp; <span class="number">0x200</span>) != <span class="number">0</span>) &#123; <span class="comment">//xpsr bit 9 align</span></span><br><span class="line">        stk_ptr += <span class="number">0x4</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((_lr &amp; <span class="number">0x10</span>) == <span class="number">0</span>) &#123; <span class="comment">//fp</span></span><br><span class="line">        stk_ptr += <span class="number">0x48</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    config_ram_add_hexdump(_lr);  <span class="comment">//EXC_RETURN</span></span><br><span class="line">    config_ram_add_hexdump(__get_PSP());</span><br><span class="line">    config_ram_add_hexdump(__get_MSP());</span><br><span class="line">    config_ram_add_hexdump(__get_CONTROL());</span><br><span class="line">    config_ram_add_hexdump(stk_ptr); <span class="comment">//SP</span></span><br><span class="line">    config_ram_add_hexdump(<span class="built_in">stack</span>[<span class="number">5</span>]);  <span class="comment">//LR</span></span><br><span class="line">    config_ram_add_hexdump(<span class="built_in">stack</span>[<span class="number">6</span>]);  <span class="comment">//PC</span></span><br><span class="line">    config_ram_add_hexdump(<span class="built_in">stack</span>[<span class="number">7</span>]);  <span class="comment">//xPSR</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> !defined(__CORTEX_M)</span></span><br><span class="line"><span class="meta">#<span class="keyword">error</span> <span class="string">&quot;__CORTEX_M not defined!!&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">elif</span> (__CORTEX_M &gt; 0x00)</span></span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;HFSR);</span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;CFSR);</span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;DFSR);</span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;AFSR);</span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;MMFAR);</span><br><span class="line">    config_ram_add_hexdump(SCB-&gt;BFAR);</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span> <span class="comment">// __CORTEX_M</span></span></span><br><span class="line"></span><br><span class="line">    util_assert(<span class="number">0</span>);</span><br><span class="line">    SystemReset();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (<span class="number">1</span>); <span class="comment">// Wait for reset</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> defined(__CC_ARM) <span class="comment">// armcc</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HardFault_Handler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">register</span> <span class="type">unsigned</span> <span class="type">int</span> _lr __asm(<span class="string">&quot;lr&quot;</span>);</span><br><span class="line">    _fault_handler(_lr);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">else</span> <span class="comment">// gcc and armclang</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HardFault_Handler</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    __ASM <span class="title function_">volatile</span> <span class="params">(</span></span><br><span class="line"><span class="params">        <span class="string">&quot;    mov    r0, lr              \n\t&quot;</span></span></span><br><span class="line"><span class="params">        <span class="string">&quot;    bl     _fault_handler      \n\t&quot;</span></span></span><br><span class="line"><span class="params">    )</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>简易dump</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">__USED __NO_RETURN <span class="type">void</span> _fault_handler(<span class="type">uint32_t</span> sp)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\narm-none-eabi-addr2line -e _____.elf -a -f %08x\n&quot;</span>,((<span class="type">uint32_t</span> *)sp)[<span class="number">6</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HardFault_Handler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">      __ASM <span class="title function_">volatile</span> <span class="params">(</span></span><br><span class="line"><span class="params">        <span class="string">&quot;    mov r0,sp                \n\t&quot;</span></span></span><br><span class="line"><span class="params">        <span class="string">&quot;    bl _fault_handler        \n\t&quot;</span></span></span><br><span class="line"><span class="params">    )</span>;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>其他信息</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_MMFSR_IACCVIOL (0x01 &lt;&lt; 0)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_MMFSR_DACCVIOL (0x01 &lt;&lt; 1)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_MMFSR_MUNSTKERR (0x01 &lt;&lt; 3)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_MMFSR_MSTKERR (0x01 &lt;&lt; 4)</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_MMFSR_MMARVALID (0x01 &lt;&lt; 7)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_IBUSERR (0x01 &lt;&lt; (0 + 8))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_PRECISERR (0x01 &lt;&lt; (1 + 8))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_IMPRECISERR (0x01 &lt;&lt; (2 + 8))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_UNSTKERR (0x01 &lt;&lt; (3 + 8))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_STKERR (0x01 &lt;&lt; (4 + 8))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_BFSR_BFARVALID (0x01 &lt;&lt; (7 + 8))</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_UNDEFINSTR (0x01 &lt;&lt; (0 + 16))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_INVSTATE (0x01 &lt;&lt; (1 + 16))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_INVPC (0x01 &lt;&lt; (2 + 16))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_NOCP (0x01 &lt;&lt; (3 + 16))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_UNALIGNED (0x01 &lt;&lt; (8 + 16))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SCB_CFSR_UFSR_DIVBYZERO (0x01 &lt;&lt; (9 + 16))</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">FAULT_PrintFaultRegs</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;MMFSR : %x[%s%s%s%s%s]\r\n&quot;</span>,</span><br><span class="line">	SCB-&gt;CFSR &amp; SCB_CFSR_MEMFAULTSR_Msk,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_MMFSR_IACCVIOL &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;IACCVIOL|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_MMFSR_DACCVIOL &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;DACCVIOL|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_MMFSR_MUNSTKERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;MUNSTKERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_MMFSR_MSTKERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;MSTKERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_MMFSR_MMARVALID &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;MMARVALID|&quot;</span>); </span><br><span class="line"></span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;BFSR : %x[%s%s%s%s%s%s]\r\n&quot;</span>,</span><br><span class="line">	SCB-&gt;CFSR &amp; SCB_CFSR_BUSFAULTSR_Msk,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_IBUSERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;IBUSERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_PRECISERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;PRECISERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_IMPRECISERR &amp; SCB-&gt;CFSR))? <span class="string">&quot;&quot;</span>:<span class="string">&quot;IMPRECISERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_UNSTKERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;UNSTKERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_STKERR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;STKERR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_BFSR_BFARVALID &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;BFARVALID|&quot;</span>);</span><br><span class="line">	 </span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;UFSR : %x[%s%s%s%s%s%s]\r\n&quot;</span>,</span><br><span class="line">	SCB-&gt;CFSR &amp; SCB_CFSR_USGFAULTSR_Msk,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_UNDEFINSTR &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;UNDEFINSTR|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_INVSTATE &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;INVSTATE|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_INVPC &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;INVPC|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_NOCP &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;NOCP|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_UNALIGNED &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;UNALIGNED|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_CFSR_UFSR_DIVBYZERO &amp; SCB-&gt;CFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;DIVBYZERO|&quot;</span>);</span><br><span class="line">	 </span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;HFSR : %x[%s%s%s]\r\n&quot;</span>,</span><br><span class="line">	SCB-&gt;HFSR,</span><br><span class="line">	(<span class="number">0</span> == (SCB_HFSR_DEBUGEVT_Msk &amp; SCB-&gt;HFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;DEBUGEVT|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_HFSR_FORCED_Msk &amp; SCB-&gt;HFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;FORCED|&quot;</span>,</span><br><span class="line">	(<span class="number">0</span> == (SCB_HFSR_VECTTBL_Msk &amp; SCB-&gt;HFSR)) ? <span class="string">&quot;&quot;</span>:<span class="string">&quot;VECTTBL|&quot;</span>);</span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;DFSR : %x\r\n&quot;</span>, SCB-&gt;DFSR);</span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;MMFAR : %x\r\n&quot;</span>, SCB-&gt;MMFAR);</span><br><span class="line">	DBG_SendPolling(<span class="string">&quot;BFAR : %x\r\n&quot;</span>, SCB-&gt;BFAR);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>stm32</category>
        <category>HardFault</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>HardFault</tag>
      </tags>
  </entry>
  <entry>
    <title>HEX文件</title>
    <url>/2024/12/24/stm32/hex/</url>
    <content><![CDATA[<h1 id="HEX文件以及特定位置写入"><a href="#HEX文件以及特定位置写入" class="headerlink" title="HEX文件以及特定位置写入"></a><code>HEX文件以及特定位置写入</code></h1><h2 id="stm32特定位置写入数据"><a href="#stm32特定位置写入数据" class="headerlink" title="stm32特定位置写入数据"></a><code>stm32特定位置写入数据</code></h2><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> __attribute__((section(<span class="string">&quot;.lua_script&quot;</span>))) script[] = &#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>&#125;;</span><br><span class="line"><span class="comment">//数组名可以去掉</span></span><br></pre></td></tr></table></figure>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">lua_script</span> <span class="number">0x08003000</span> :</span><br><span class="line">&#123;</span><br><span class="line">  . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">  <span class="title function_">KEEP</span>(*(.<span class="property">lua_script</span>))</span><br><span class="line">  . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">&#125; &gt;<span class="variable constant_">FLASH</span></span><br></pre></td></tr></table></figure>
<p>编译输出hex</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">:082D5400434445460000000065</span><br><span class="line">:042D5C00F900000872</span><br><span class="line">:042D6000CD0000089A</span><br><span class="line">:083000000102030405060000B3</span><br><span class="line">:10300800AA550000000000000000000000000000B9</span><br><span class="line">:103018000000000000A24A04001000100010001078</span><br><span class="line">:043028000010001084</span><br><span class="line">:04000005080029893D</span><br><span class="line">:00000001FF</span><br></pre></td></tr></table></figure>
<p><strong>:08300000<code>010203040506</code>0000B3</strong></p>
<p>由于链接文件多处使用”.”定位，链接器链接是按照SECTIONS里的段顺序排列的，前面的排列完之后就能计算出当前地址，私有部分最好自定义段位置，各个段不要超过地址限制<br>如：</p>
<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="title function_">FLASH_USR</span> (rx)      : <span class="variable constant_">ORIGIN</span> = <span class="number">0x8006000</span>, <span class="variable constant_">LENGTH</span> = 8K</span><br><span class="line">  .<span class="property">lua_script</span> <span class="number">0x8007F00</span>:</span><br><span class="line">  &#123;</span><br><span class="line">    . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">    <span class="title function_">KEEP</span>(*(.<span class="property">lua_script</span>))</span><br><span class="line">    . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">  &#125; &gt;<span class="variable constant_">FLASH_USR</span></span><br></pre></td></tr></table></figure>

<h2 id="stm32特定位置写入函数"><a href="#stm32特定位置写入函数" class="headerlink" title="stm32特定位置写入函数"></a><code>stm32特定位置写入函数</code></h2><figure class="highlight js"><table><tr><td class="code"><pre><span class="line">.<span class="property">lua_script2</span> <span class="number">0x80F0100</span> :</span><br><span class="line">&#123;</span><br><span class="line">  . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">  <span class="title function_">KEEP</span>(*(.<span class="property">lua_script2</span>))</span><br><span class="line">  . = <span class="title function_">ALIGN</span>(<span class="number">4</span>);</span><br><span class="line">&#125; &gt;<span class="variable constant_">FLASH_USR</span></span><br></pre></td></tr></table></figure>
<p>运行函数，地址+1</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line">(*(<span class="type">void</span>(*)())<span class="number">0x80F0100</span>+<span class="number">1</span>)();</span><br></pre></td></tr></table></figure>

<p><a href="https://www.jianshu.com/p/42823b3b7c8e">链接文件脚本说明</a></p>
<h2 id="HEX文件"><a href="#HEX文件" class="headerlink" title="HEX文件"></a><code>HEX文件</code></h2><blockquote>
<ul>
<li>第一个字节0×02表示该行数据中有两个数据（字节）</li>
<li>第二个、第三个字节0x00 0x00表示本行数据的起始地址位</li>
<li>第四个字节有0x00 0x01 0x02 0x03 0x04 0x05，分别有以下含义<blockquote>
<table>
<thead>
<tr>
<th></th>
<th></th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>‘00’</td>
<td>Data Rrecord:</td>
<td>用来记录数据，HEX文件的大部分记录都是数据记录</td>
</tr>
<tr>
<td>‘01’</td>
<td>文件结束记录：</td>
<td>用来标识文件结束，放在文件的最后，标识HEX文件的结尾</td>
</tr>
<tr>
<td>‘02’</td>
<td>扩展段地址记录：</td>
<td>用来标识扩展段地址的记录</td>
</tr>
<tr>
<td>‘03’</td>
<td>开始段地址记录：</td>
<td>开始段地址记录</td>
</tr>
<tr>
<td>‘04’</td>
<td>扩展线性地址记录：</td>
<td>用来标识扩展线性地址的记录</td>
</tr>
<tr>
<td>‘05’</td>
<td>开始线性地址记录：</td>
<td>开始线性地址记录</td>
</tr>
<tr>
<td></td>
<td></td>
<td></td>
</tr>
</tbody></table>
</blockquote>
</li>
<li>最后一个字节0xf8为校验和。校验和&#x3D; 0x100 - 累加和。在nodepad++中，如果该校验和不是绿色，则表示该校验和是错的。</li>
</ul>
</blockquote>
<p>注意，0×04标识扩展线性地址的记录，所以如020000040002f8中，拓展地址是0002。那么第二行数据的起始地址就是0002c000，即0x0002c000开始</p>
<p><a href="https://blog.csdn.net/weixin_39752827/article/details/81477686">HEX文件详解</a></p>
<h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a><code>其他</code></h2><p>KEIl编译stm32，堆栈使用超过设定便会溢出</p>
<p>GCC编译，根据链接文件排列各段，堆栈大小设置只起到判断大小是否超过RAM，对结果没有任何影响</p>
<p><a href="https://www.cnblogs.com/txqdm/p/11454102.html">ARM 之一 ELF文件、镜像（Image）文件、可执行文件、对象文件 详解</a></p>
<p>map文件可以看出Reset_Handler处开始运行，然后顺序进入函数<br>Linker script and memory map可以看出<br>__do_global_dtors_aux出自gcc中crtbegin.o</p>
<h2 id="bootloader合并"><a href="#bootloader合并" class="headerlink" title="bootloader合并"></a><code>bootloader合并</code></h2><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> BOOT_HEX=.\boot.hex</span><br><span class="line"><span class="built_in">set</span> APP_HEX=.\app.hex</span><br><span class="line"><span class="built_in">set</span> OUT_HEX=.\out.hex</span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> TEMP=.\temp.txt</span><br><span class="line"></span><br><span class="line">:HEX_STEP</span><br><span class="line"><span class="built_in">set</span> var=<span class="string">&quot;:00000001FF&quot;</span></span><br><span class="line">findstr /v %var% <span class="string">&quot;%IAP_HEX%&quot;</span> &gt;&gt;%TEMP%</span><br><span class="line"></span><br><span class="line">del %OUT_HEX%</span><br><span class="line"><span class="built_in">type</span> %TEMP% %APP_HEX% &gt;&gt; %OUT_HEX%</span><br><span class="line"></span><br><span class="line">del %TEMP%</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="jlink-烧录bat"><a href="#jlink-烧录bat" class="headerlink" title="jlink 烧录bat"></a><code>jlink 烧录bat</code></h2><p>依赖jlink.exe JLinkARM.dll</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">jlink.exe config.txt</span><br></pre></td></tr></table></figure>

<p><code>config.txt</code></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">si 1     // #选择swd接口                                                   </span><br><span class="line">speed 4000     //设置速度</span><br><span class="line">device STM32F427II</span><br><span class="line">r     //重新复位目标</span><br><span class="line">h     //挂起目标</span><br><span class="line">loadfile &quot;./out.hex&quot;</span><br><span class="line">setpc 0x08000000     //设置pc指针</span><br><span class="line">g</span><br><span class="line">q</span><br></pre></td></tr></table></figure>


]]></content>
      <categories>
        <category>stm32</category>
        <category>hex</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>hex</tag>
      </tags>
  </entry>
  <entry>
    <title>链接文件</title>
    <url>/2024/12/24/stm32/ld/</url>
    <content><![CDATA[<h1 id="链接文件"><a href="#链接文件" class="headerlink" title="链接文件"></a>链接文件</h1><p>test.c编译放入特定位置</p>
<figure class="highlight plaintext"><figcaption><span>script</span></figcaption><table><tr><td class="code"><pre><span class="line">.ccmram :</span><br><span class="line">&#123;</span><br><span class="line">  . = ALIGN(4);</span><br><span class="line">  _sccmram = .;       /* create a global symbol at ccmram start */</span><br><span class="line">  *(.ccmram)</span><br><span class="line">  *(.ccmram*)</span><br><span class="line">  *test.o(*.bss* *.data*)/*编译的结果*/</span><br><span class="line">  . = ALIGN(4);</span><br><span class="line">  _eccmram = .;       /* create a global symbol at ccmram end */</span><br><span class="line">&#125; &gt;CCMRAM AT&gt; FLASH</span><br></pre></td></tr></table></figure>
<h2 id="hardfault-error"><a href="#hardfault-error" class="headerlink" title="hardfault error"></a>hardfault error</h2><p>确定使用的是那个堆栈，MSP或者是PSP，确定以后，在内存查看窗口，输入堆栈的地址，以这个地址开始的8个32位数值，应该依次是R0,R1,R2,R3,R12,R14,R15,XPSR的数值，据此判定你的堆栈地址是不是对的(有时需要考虑堆栈的增长方向)。R14，R15的地址就是我们出错的代码所在的地址，需要在这个地址基础上，首先偶数对齐，然后向上减去8个字节。</p>
<p>需要考虑的是，在使用MSP的时候，有出错的地方并不一定在R14，R15处，而是在XPSR往后的第二个地址处，在这个附近查找，排除故障。</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">st=&gt;start: 开始</span><br><span class="line">op=&gt;operation: My Operation</span><br><span class="line">cond=&gt;condition: Yes or No?</span><br><span class="line">e=&gt;end</span><br><span class="line">st-&gt;op-&gt;cond</span><br><span class="line">cond(yes)-&gt;e</span><br><span class="line">cond(no)-&gt;op</span><br><span class="line">&amp;</span><br></pre></td></tr></table></figure>

<h1 id="闪存装载软件"><a href="#闪存装载软件" class="headerlink" title="闪存装载软件"></a>闪存装载软件</h1><p><a href="https://support.touchgfx.com/4.21/zh-CN/docs/development/board-bring-up/how-to/11-flash-loader">STM32CubeProgrammer的闪存装载软件</a></p>
<p>IAR程序放入.bss段</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#pragma section=&quot;.bss&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h1 id="openocd添加第三方设备"><a href="#openocd添加第三方设备" class="headerlink" title="openocd添加第三方设备"></a>openocd添加第三方设备</h1><ul>
<li><p>在.&#x2F;tcl&#x2F;target中,添加自己设备的.cfg文件,此文件用于编译后传递到scripts中供用户调用，此文件用于编译后传递到scripts中供用户调用</p>
</li>
<li><p>在.&#x2F;src&#x2F;flash&#x2F;nor中,添加自己设备的.c文件,此文件用于告知openocd你文件的flash烧录流程，此文件用于告知openocd你文件的flash烧录流程</p>
</li>
<li><p>在 &#x2F;src&#x2F;flash&#x2F;nor&#x2F;drivers.c中,添加自己设备的设备名,此处让openocd知晓你的设备，此处让openocd知晓你的设备.</p>
</li>
<li><p>在flash&#x2F;nor中,更改Makefile.am,令openocd的编译过程可以引用到你刚刚添加的文件.</p>
</li>
</ul>
]]></content>
      <categories>
        <category>stm32</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>CMake</title>
    <url>/2024/12/25/stm32/cmake/</url>
    <content><![CDATA[<h1 id="CMake-构建"><a href="#CMake-构建" class="headerlink" title="CMake 构建"></a>CMake 构建</h1><h2 id="下载链接"><a href="#下载链接" class="headerlink" title="下载链接"></a>下载链接</h2><p><a href="https://cmake.org/">CMake</a></p>
<p><a href="https://github.com/ninja-build/ninja/releases">Ninja</a></p>
<h2 id="环境构建"><a href="#环境构建" class="headerlink" title="环境构建"></a>环境构建</h2><p><code>cmake -G</code> 查看构建环境</p>
<ol>
<li>使用Make</li>
</ol>
<p>CMake 构建makefile 目录build下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -B build -G &quot;Unix Makefiles&quot;</span><br></pre></td></tr></table></figure>
<p>make 编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make -C build</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake --build build</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>使用Ninja</li>
</ol>
<p>CMake 构建Ninja 目录build下</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake -B build -G &quot;Ninja&quot;</span><br></pre></td></tr></table></figure>
<p>Ninja编译</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ninja -C build</span><br></pre></td></tr></table></figure>
<p>或</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cmake --build build</span><br></pre></td></tr></table></figure>
<h2 id="清理构建"><a href="#清理构建" class="headerlink" title="清理构建"></a>清理构建</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -r build</span><br></pre></td></tr></table></figure>

<h2 id="指定构建"><a href="#指定构建" class="headerlink" title="指定构建"></a>指定构建</h2><p>cmake -G 指定构建<br>3.15版本后，支持设定构建器变量<code>CMAKE_GENERATOR</code></p>
<figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span>(CMAKE_GENERATOR <span class="string">&quot;Unix Makefiles&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>? 不生效</p>
<h2 id="全编译"><a href="#全编译" class="headerlink" title="全编译"></a>全编译</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -r build;cmake -B build -G &quot;Unix Makefiles&quot;;cmake --build build</span><br></pre></td></tr></table></figure>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm -r build;cmake -B build -G &quot;Ninja&quot;;cmake --build build</span><br></pre></td></tr></table></figure>
<h2 id="指令时间"><a href="#指令时间" class="headerlink" title="指令时间"></a>指令时间</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Measure-Command &#123;rm -r build;cmake -B build -G &quot;Ninja&quot;;ninja -C build&#125;</span><br><span class="line">Measure-Command &#123;rm -r build;make&#125;</span><br></pre></td></tr></table></figure>
<h2 id="指令执行"><a href="#指令执行" class="headerlink" title="指令执行"></a>指令执行</h2><ol>
<li><p>powershell 使用<code>;</code>将指令分隔开</p>
</li>
<li><p>linux</p>
</li>
</ol>
<ul>
<li>&amp;：同时运行</li>
<li>&amp;&amp;：先后执行,执行成功后执行下一个</li>
<li>||：执行失败后，执行下一个</li>
</ul>
<h2 id="STM32CubeMX"><a href="#STM32CubeMX" class="headerlink" title="STM32CubeMX"></a>STM32CubeMX</h2><ul>
<li>v6.11 开始增加cmake编译，此版本makefile中的文件路径变化，导致编译不错，需要修改文件路径</li>
<li>v6.12 cmake编译不过，链接出错</li>
</ul>
]]></content>
      <categories>
        <category>stm32</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
  <entry>
    <title>mqtt</title>
    <url>/2024/12/24/stm32/lwip%20mqtt/</url>
    <content><![CDATA[<h1 id="LWIP-MQTT"><a href="#LWIP-MQTT" class="headerlink" title="LWIP MQTT"></a>LWIP MQTT</h1><p>调试lwip以太网MQTT连接服务器，发现如果服务器不需要用户名和密码权限则可以正常连接MQTT服务器，并能够发布和订阅消息，但连接需要用户名和密码的服务器，则提示认证失败。</p>
<p>分析发现函数<code>mqtt_client_connect</code>没有处理client结构体中的用户名和密码字段 </p>
<h3 id="原函数"><a href="#原函数" class="headerlink" title="原函数"></a>原函数</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">err_t</span></span><br><span class="line"><span class="title function_">mqtt_client_connect</span><span class="params">(<span class="type">mqtt_client_t</span> *client, <span class="type">const</span> <span class="type">ip_addr_t</span> *ip_addr, <span class="type">u16_t</span> port, <span class="type">mqtt_connection_cb_t</span> cb, <span class="type">void</span> *arg,</span></span><br><span class="line"><span class="params">                    <span class="type">const</span> <span class="keyword">struct</span> <span class="type">mqtt_connect_client_info_t</span> *client_info)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">err_t</span> err;</span><br><span class="line">  <span class="type">size_t</span> len;</span><br><span class="line">  <span class="type">u16_t</span> client_id_length;</span><br><span class="line">  <span class="comment">/* Length is the sum of 2+&quot;MQTT&quot;, protocol level, flags and keep alive */</span></span><br><span class="line">  <span class="type">u16_t</span> remaining_length = <span class="number">2</span> + <span class="number">4</span> + <span class="number">1</span> + <span class="number">1</span> + <span class="number">2</span>;</span><br><span class="line">  <span class="type">u8_t</span> flags = <span class="number">0</span>, will_topic_len = <span class="number">0</span>, will_msg_len = <span class="number">0</span>;</span><br><span class="line">  <span class="type">u16_t</span> client_user_len = <span class="number">0</span>, client_pass_len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  LWIP_ASSERT_CORE_LOCKED();</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client != NULL&quot;</span>, client != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: ip_addr != NULL&quot;</span>, ip_addr != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client_info != NULL&quot;</span>, client_info != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_id != NULL&quot;</span>, client_info-&gt;client_id != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (client-&gt;conn_state != TCP_DISCONNECTED) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_WARN, (<span class="string">&quot;mqtt_client_connect: Already connected\n&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> ERR_ISCONN;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Wipe clean */</span></span><br><span class="line">  <span class="built_in">memset</span>(client, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="type">mqtt_client_t</span>));</span><br><span class="line">  client-&gt;connect_arg = arg;</span><br><span class="line">  client-&gt;connect_cb = cb;</span><br><span class="line">  client-&gt;keep_alive = client_info-&gt;keep_alive;</span><br><span class="line">  mqtt_init_requests(client-&gt;req_list, LWIP_ARRAYSIZE(client-&gt;req_list));</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Build connect message */</span></span><br><span class="line">  <span class="keyword">if</span> (client_info-&gt;will_topic != <span class="literal">NULL</span> &amp;&amp; client_info-&gt;will_msg != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    flags |= MQTT_CONNECT_FLAG_WILL;</span><br><span class="line">    flags |= (client_info-&gt;will_qos &amp; <span class="number">3</span>) &lt;&lt; <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (client_info-&gt;will_retain) &#123;</span><br><span class="line">      flags |= MQTT_CONNECT_FLAG_WILL_RETAIN;</span><br><span class="line">    &#125;</span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;will_topic);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_topic length overflow&quot;</span>, len &lt;= <span class="number">0xFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_topic length must be &gt; 0&quot;</span>, len &gt; <span class="number">0</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    will_topic_len = (<span class="type">u8_t</span>)len;</span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;will_msg);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_msg length overflow&quot;</span>, len &lt;= <span class="number">0xFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    will_msg_len = (<span class="type">u8_t</span>)len;</span><br><span class="line">    len = remaining_length + <span class="number">2</span> + will_topic_len + <span class="number">2</span> + will_msg_len;</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (client_info-&gt;client_user != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    flags |= MQTT_CONNECT_FLAG_USERNAME;</span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;client_user);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_user length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_user length must be &gt; 0&quot;</span>, len &gt; <span class="number">0</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    client_user_len = (<span class="type">u16_t</span>)len;</span><br><span class="line">    len = remaining_length + <span class="number">2</span> + client_user_len;</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (client_info-&gt;client_pass != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    flags |= MQTT_CONNECT_FLAG_PASSWORD;</span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;client_pass);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_pass length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_pass length must be &gt; 0&quot;</span>, len &gt; <span class="number">0</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    client_pass_len = (<span class="type">u16_t</span>)len;</span><br><span class="line">    len = remaining_length + <span class="number">2</span> + client_pass_len;</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Don&#x27;t complicate things, always connect using clean session */</span></span><br><span class="line">  flags |= MQTT_CONNECT_FLAG_CLEAN_SESSION;</span><br><span class="line"></span><br><span class="line">  len = <span class="built_in">strlen</span>(client_info-&gt;client_id);</span><br><span class="line">  LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_id length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">  client_id_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  len = remaining_length + <span class="number">2</span> + client_id_length;</span><br><span class="line">  LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">  remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (mqtt_output_check_space(&amp;client-&gt;output, remaining_length) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ERR_MEM;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">if</span> LWIP_ALTCP &amp;&amp; LWIP_ALTCP_TLS</span></span><br><span class="line">  <span class="keyword">if</span> (client_info-&gt;tls_config) &#123;</span><br><span class="line">    client-&gt;conn = altcp_tls_new(client_info-&gt;tls_config, IP_GET_TYPE(ip_addr));</span><br><span class="line">  &#125; <span class="keyword">else</span></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span></span></span><br><span class="line">  &#123;</span><br><span class="line">    client-&gt;conn = altcp_tcp_new_ip_type(IP_GET_TYPE(ip_addr));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> (client-&gt;conn == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ERR_MEM;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Set arg pointer for callbacks */</span></span><br><span class="line">  altcp_arg(client-&gt;conn, client);</span><br><span class="line">  <span class="comment">/* Any local address, pick random local port number */</span></span><br><span class="line">  err = altcp_bind(client-&gt;conn, IP_ADDR_ANY, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (err != ERR_OK) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_WARN, (<span class="string">&quot;mqtt_client_connect: Error binding to local ip/port, %d\n&quot;</span>, err));</span><br><span class="line">    <span class="keyword">goto</span> tcp_fail;</span><br><span class="line">  &#125;</span><br><span class="line">  LWIP_DEBUGF(MQTT_DEBUG_TRACE, (<span class="string">&quot;mqtt_client_connect: Connecting to host: %s at port:%&quot;</span>U16_F<span class="string">&quot;\n&quot;</span>, ipaddr_ntoa(ip_addr), port));</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Connect to server */</span></span><br><span class="line">  err = altcp_connect(client-&gt;conn, ip_addr, port, mqtt_tcp_connect_cb);</span><br><span class="line">  <span class="keyword">if</span> (err != ERR_OK) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_TRACE, (<span class="string">&quot;mqtt_client_connect: Error connecting to remote ip/port, %d\n&quot;</span>, err));</span><br><span class="line">    <span class="keyword">goto</span> tcp_fail;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Set error callback */</span></span><br><span class="line">  altcp_err(client-&gt;conn, mqtt_tcp_err_cb);</span><br><span class="line">  client-&gt;conn_state = TCP_CONNECTING;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Append fixed header */</span></span><br><span class="line">  mqtt_output_append_fixed_header(&amp;client-&gt;output, MQTT_MSG_TYPE_CONNECT, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, remaining_length);</span><br><span class="line">  <span class="comment">/* Append Protocol string */</span></span><br><span class="line">  mqtt_output_append_string(&amp;client-&gt;output, <span class="string">&quot;MQTT&quot;</span>, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">/* Append Protocol level */</span></span><br><span class="line">  mqtt_output_append_u8(&amp;client-&gt;output, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">/* Append connect flags */</span></span><br><span class="line">  mqtt_output_append_u8(&amp;client-&gt;output, flags);</span><br><span class="line">  <span class="comment">/* Append keep-alive */</span></span><br><span class="line">  mqtt_output_append_u16(&amp;client-&gt;output, client_info-&gt;keep_alive);</span><br><span class="line">  <span class="comment">/* Append client id */</span></span><br><span class="line">  mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_id, client_id_length);</span><br><span class="line">  <span class="comment">/* Append will message if used */</span></span><br><span class="line">  <span class="keyword">if</span> ((flags &amp; MQTT_CONNECT_FLAG_WILL) != <span class="number">0</span>) &#123;</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;will_topic, will_topic_len);</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;will_msg, will_msg_len);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Append user name if given */</span></span><br><span class="line">  <span class="keyword">if</span> ((flags &amp; MQTT_CONNECT_FLAG_USERNAME) != <span class="number">0</span>) &#123;</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_user, client_user_len);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Append password if given */</span></span><br><span class="line">  <span class="keyword">if</span> ((flags &amp; MQTT_CONNECT_FLAG_PASSWORD) != <span class="number">0</span>) &#123;</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_pass, client_pass_len);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> ERR_OK;</span><br><span class="line"></span><br><span class="line">tcp_fail:</span><br><span class="line">  altcp_abort(client-&gt;conn);</span><br><span class="line">  client-&gt;conn = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="修改后"><a href="#修改后" class="headerlink" title="修改后"></a>修改后</h3><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">err_t</span></span><br><span class="line"><span class="title function_">mqtt_client_connect</span><span class="params">(<span class="type">mqtt_client_t</span> *client, <span class="type">const</span> <span class="type">ip_addr_t</span> *ip_addr, <span class="type">u16_t</span> port, <span class="type">mqtt_connection_cb_t</span> cb, <span class="type">void</span> *arg,</span></span><br><span class="line"><span class="params">                    <span class="type">const</span> <span class="keyword">struct</span> <span class="type">mqtt_connect_client_info_t</span> *client_info)</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="type">err_t</span> err;</span><br><span class="line">  <span class="type">size_t</span> len;</span><br><span class="line">  <span class="type">u16_t</span> client_id_length;</span><br><span class="line">  <span class="comment">/* Length is the sum of 2+&quot;MQTT&quot;, protocol level, flags and keep alive */</span></span><br><span class="line">  <span class="type">u16_t</span> remaining_length = <span class="number">2</span> + <span class="number">4</span> + <span class="number">1</span> + <span class="number">1</span> + <span class="number">2</span>;</span><br><span class="line">  <span class="type">u8_t</span> flags = <span class="number">0</span>, will_topic_len = <span class="number">0</span>, will_msg_len = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client != NULL&quot;</span>, client != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: ip_addr != NULL&quot;</span>, ip_addr != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client_info != NULL&quot;</span>, client_info != <span class="literal">NULL</span>);</span><br><span class="line">  LWIP_ASSERT(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_id != NULL&quot;</span>, client_info-&gt;client_id != <span class="literal">NULL</span>);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (client-&gt;conn_state != TCP_DISCONNECTED) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_WARN,(<span class="string">&quot;mqtt_client_connect: Already connected\n&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> ERR_ISCONN;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Wipe clean */</span></span><br><span class="line">  <span class="built_in">memset</span>(client, <span class="number">0</span>, <span class="keyword">sizeof</span>(<span class="type">mqtt_client_t</span>));</span><br><span class="line">  client-&gt;connect_arg = arg;</span><br><span class="line">  client-&gt;connect_cb = cb;</span><br><span class="line">  client-&gt;keep_alive = client_info-&gt;keep_alive;</span><br><span class="line">  mqtt_init_requests(client-&gt;req_list);</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Build connect message */</span></span><br><span class="line">  <span class="keyword">if</span> (client_info-&gt;will_topic != <span class="literal">NULL</span> &amp;&amp; client_info-&gt;will_msg != <span class="literal">NULL</span>) &#123;</span><br><span class="line">    flags |= MQTT_CONNECT_FLAG_WILL;</span><br><span class="line">    flags |= (client_info-&gt;will_qos &amp; <span class="number">3</span>) &lt;&lt; <span class="number">3</span>;</span><br><span class="line">    <span class="keyword">if</span> (client_info-&gt;will_retain) &#123;</span><br><span class="line">      flags |= MQTT_CONNECT_FLAG_WILL_RETAIN;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;will_topic);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_topic length overflow&quot;</span>, len &lt;= <span class="number">0xFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_topic length must be &gt; 0&quot;</span>, len &gt; <span class="number">0</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    will_topic_len = (<span class="type">u8_t</span>)len;</span><br><span class="line">    len = <span class="built_in">strlen</span>(client_info-&gt;will_msg);</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;will_msg length overflow&quot;</span>, len &lt;= <span class="number">0xFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    will_msg_len = (<span class="type">u8_t</span>)len;</span><br><span class="line">    len = remaining_length + <span class="number">2</span> + will_topic_len + <span class="number">2</span> + will_msg_len;</span><br><span class="line">    LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">    remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  &#125;</span><br><span class="line"> </span><br><span class="line">  <span class="comment">/* Don&#x27;t complicate things, always connect using clean session */</span></span><br><span class="line">  flags |= MQTT_CONNECT_FLAG_CLEAN_SESSION;</span><br><span class="line"></span><br><span class="line">  len = <span class="built_in">strlen</span>(client_info-&gt;client_id);</span><br><span class="line">  LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: client_info-&gt;client_id length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line">  client_id_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  len = remaining_length + <span class="number">2</span> + client_id_length;</span><br><span class="line">  LWIP_ERROR(<span class="string">&quot;mqtt_client_connect: remaining_length overflow&quot;</span>, len &lt;= <span class="number">0xFFFF</span>, <span class="keyword">return</span> ERR_VAL);</span><br><span class="line"> <span class="comment">//-------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line">    <span class="keyword">if</span>(client_info-&gt;client_user!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flags |= MQTT_CONNECT_FLAG_USERNAME;</span><br><span class="line">        len+=<span class="number">2</span> + <span class="built_in">strlen</span>(client_info-&gt;client_user);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(client_info-&gt;client_pass!=<span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flags |= MQTT_CONNECT_FLAG_PASSWORD;</span><br><span class="line">        len+=<span class="number">2</span> + <span class="built_in">strlen</span>(client_info-&gt;client_pass);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line">    remaining_length = (<span class="type">u16_t</span>)len;</span><br><span class="line">  <span class="keyword">if</span> (mqtt_output_check_space(&amp;client-&gt;output, remaining_length) == <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ERR_MEM;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  client-&gt;conn = tcp_new();</span><br><span class="line">  <span class="keyword">if</span> (client-&gt;conn == <span class="literal">NULL</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> ERR_MEM;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Set arg pointer for callbacks */</span></span><br><span class="line">  tcp_arg(client-&gt;conn, client);</span><br><span class="line">  <span class="comment">/* Any local address, pick random local port number */</span></span><br><span class="line">  err = tcp_bind(client-&gt;conn, IP_ADDR_ANY, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">if</span> (err != ERR_OK) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_WARN,(<span class="string">&quot;mqtt_client_connect: Error binding to local ip/port, %d\n&quot;</span>, err));</span><br><span class="line">    <span class="keyword">goto</span> tcp_fail;</span><br><span class="line">  &#125;</span><br><span class="line">  LWIP_DEBUGF(MQTT_DEBUG_TRACE,(<span class="string">&quot;mqtt_client_connect: Connecting to host: %s at port:%&quot;</span>U16_F<span class="string">&quot;\n&quot;</span>, ipaddr_ntoa(ip_addr), port));</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Connect to server */</span></span><br><span class="line">  err = tcp_connect(client-&gt;conn, ip_addr, port, mqtt_tcp_connect_cb);</span><br><span class="line">  <span class="keyword">if</span> (err != ERR_OK) &#123;</span><br><span class="line">    LWIP_DEBUGF(MQTT_DEBUG_TRACE,(<span class="string">&quot;mqtt_client_connect: Error connecting to remote ip/port, %d\n&quot;</span>, err));</span><br><span class="line">    <span class="keyword">goto</span> tcp_fail;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">/* Set error callback */</span></span><br><span class="line">  tcp_err(client-&gt;conn, mqtt_tcp_err_cb);</span><br><span class="line">  client-&gt;conn_state = TCP_CONNECTING;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/* Append fixed header */</span></span><br><span class="line">  mqtt_output_append_fixed_header(&amp;client-&gt;output, MQTT_MSG_TYPE_CONNECT, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, remaining_length);</span><br><span class="line">  <span class="comment">/* Append Protocol string */</span></span><br><span class="line">  mqtt_output_append_string(&amp;client-&gt;output, <span class="string">&quot;MQTT&quot;</span>, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">/* Append Protocol level */</span></span><br><span class="line">  mqtt_output_append_u8(&amp;client-&gt;output, <span class="number">4</span>);</span><br><span class="line">  <span class="comment">/* Append connect flags */</span></span><br><span class="line">  mqtt_output_append_u8(&amp;client-&gt;output, flags);</span><br><span class="line">  <span class="comment">/* Append keep-alive */</span></span><br><span class="line">  mqtt_output_append_u16(&amp;client-&gt;output, client_info-&gt;keep_alive);</span><br><span class="line">  <span class="comment">/* Append client id */</span></span><br><span class="line">  mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_id, client_id_length);</span><br><span class="line">  <span class="comment">/* Append will message if used */</span></span><br><span class="line">  <span class="keyword">if</span> ((flags &amp; MQTT_CONNECT_FLAG_WILL) != <span class="number">0</span>) &#123;</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;will_topic, will_topic_len);</span><br><span class="line">    mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;will_msg, will_msg_len);</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line">  <span class="keyword">if</span>((flags &amp; MQTT_CONNECT_FLAG_USERNAME) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_user, <span class="built_in">strlen</span>(client_info-&gt;client_user));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((flags &amp; MQTT_CONNECT_FLAG_PASSWORD) != <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        mqtt_output_append_string(&amp;client-&gt;output, client_info-&gt;client_pass, <span class="built_in">strlen</span>(client_info-&gt;client_pass));</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//-------------------------------------------------------------------------------------------------------------------------------</span></span><br><span class="line">  <span class="keyword">return</span> ERR_OK;</span><br><span class="line"></span><br><span class="line">tcp_fail:</span><br><span class="line">  tcp_abort(client-&gt;conn);</span><br><span class="line">  client-&gt;conn = <span class="literal">NULL</span>;</span><br><span class="line">  <span class="keyword">return</span> err;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-02以后的版本已经修复这个bug"><a href="#2-02以后的版本已经修复这个bug" class="headerlink" title="2.02以后的版本已经修复这个bug"></a>2.02以后的版本已经修复这个bug</h2>]]></content>
      <categories>
        <category>stm32</category>
        <category>mqtt</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>lwip</tag>
        <tag>mqtt</tag>
      </tags>
  </entry>
  <entry>
    <title>lwip宏</title>
    <url>/2024/12/24/stm32/lwip/</url>
    <content><![CDATA[<h1 id="lwip宏定义"><a href="#lwip宏定义" class="headerlink" title="lwip宏定义"></a>lwip宏定义</h1><ol>
<li><p><code>TCPIP_THREAD_PRIO</code>: 定义了lwIP协议栈中的TCP&#x2F;IP线程的优先级。可以根据系统需求进行调整。例如，如果系统中有其他高优先级任务，可以将该值设置为较低的优先级，以确保系统的稳定性。</p>
</li>
<li><p><code>DEFAULT_THREAD_PRIO</code>: 定义了默认线程的优先级。同样，可以根据系统需求进行调整。</p>
</li>
<li><p><code>SYS_LIGHTWEIGHT_PROT</code>: 定义了系统是否启用轻量级保护机制。如果启用，将使用更轻量级的保护机制来保护共享资源，以提高系统性能。</p>
</li>
<li><p><code>NO_SYS</code>: 定义了是否禁用操作系统功能。如果设置为1，将禁用操作系统功能，lwIP将在裸机环境下运行。</p>
</li>
<li><p><code>MEM_ALIGNMENT</code>: 定义了内存对齐方式。可以根据硬件平台的要求进行调整。</p>
</li>
<li><p><code>MEM_SIZE</code>: 定义了lwIP协议栈使用的内存大小。可以根据系统需求进行调整。例如，如果系统内存较小，可以减小该值以节省内存空间。</p>
</li>
<li><p><code>MEMP_NUM_PBUF</code>: 定义了可用的pbuf（数据包缓冲区）数量。可以根据系统的网络负载进行调整。例如，如果系统需要处理大量的网络数据包，可以增加该值以提高性能。</p>
</li>
<li><p><code>MEMP_NUM_UDP_PCB</code>: 定义了可用的UDP协议控制块（PCB）数量。可以根据系统的UDP连接数进行调整。</p>
</li>
<li><p><code>MEMP_NUM_TCP_PCB</code>: 定义了可用的TCP协议控制块（PCB）数量。可以根据系统的TCP连接数进行调整。</p>
</li>
<li><p><code>MEMP_NUM_TCP_PCB_LISTEN</code>: 定义了可用的TCP监听协议控制块（PCB）数量。可以根据系统的TCP监听连接数进行调整。</p>
</li>
<li><p><code>MEMP_NUM_TCP_SEG</code>: 定义了可用的TCP分段数量。可以根据系统的TCP连接数和数据传输需求进行调整。</p>
</li>
<li><p><code>MEMP_NUM_SYS_TIMEOUT</code>: 定义了可用的系统超时数量。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>MEMP_NUM_NETCONN</code>: 定义了可用的网络连接数量。可以根据系统的网络连接需求进行调整。</p>
</li>
<li><p><code>PBUF_POOL_SIZE</code>: 定义了pbuf（数据包缓冲区）池的大小。可以根据系统的网络负载进行调整。</p>
</li>
<li><p><code>PBUF_POOL_BUFSIZE</code>: 定义了pbuf（数据包缓冲区）的大小。可以根据系统的网络负载和数据包大小进行调整。</p>
</li>
<li><p><code>LWIP_SUPPORT_CUSTOM_PBUF</code>: 定义了是否支持自定义pbuf（数据包缓冲区）。如果设置为1，可以使用自定义的pbuf实现，以满足特定的需求。</p>
</li>
<li><p><code>LWIP_TCP</code>: 定义了是否启用TCP协议。如果设置为1，将启用TCP协议。</p>
</li>
<li><p><code>TCP_TTL</code>: 定义了TCP数据包的生存时间（TTL）。</p>
</li>
<li><p><code>TCP_QUEUE_OOSEQ</code>: 定义了是否启用TCP乱序队列。如果设置为1，将启用TCP乱序队列。</p>
</li>
<li><p><code>TCPIP_MBOX_SIZE</code>: 定义了TCP&#x2F;IP线程的邮箱大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>DEFAULT_TCP_RECVMBOX_SIZE</code>: 定义了TCP接收邮箱的大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>DEFAULT_ACCEPTMBOX_SIZE</code>: 定义了TCP连接接受邮箱的大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>TCP_MSS</code>: 定义了TCP最大段大小（Maximum Segment Size）。可以根据网络环境和带宽进行调整。</p>
</li>
<li><p><code>TCP_SND_BUF</code>: 定义了TCP发送缓冲区的大小。可以根据系统的需求和网络带宽进行调整。</p>
</li>
<li><p><code>TCP_SND_QUEUELEN</code>: 定义了TCP发送队列的长度。可以根据系统的需求和网络带宽进行调整。</p>
</li>
<li><p><code>TCP_WND</code>: 定义了TCP窗口大小。可以根据网络环境和带宽进行调整。</p>
</li>
<li><p><code>LWIP_ICMP</code>: 定义了是否启用ICMP协议。如果设置为1，将启用ICMP协议。</p>
</li>
<li><p><code>LWIP_DHCP</code>: 定义了是否启用DHCP协议。如果设置为1，将启用DHCP协议。</p>
</li>
<li><p><code>LWIP_UDP</code>: 定义了是否启用UDP协议。如果设置为1，将启用UDP协议。</p>
</li>
<li><p><code>UDP_TTL</code>: 定义了UDP数据包的生存时间（TTL）。</p>
</li>
<li><p><code>LWIP_STATS</code>: 定义了是否启用lwIP统计功能。如果设置为1，将启用lwIP的统计功能。</p>
</li>
<li><p><code>LWIP_PROVIDE_ERRNO</code>: 定义了是否提供errno变量。如果设置为1，将提供errno变量。</p>
</li>
<li><p><code>CHECKSUM_BY_HARDWARE</code>: 定义了是否使用硬件加速计算校验和。如果定义了该宏，将使用硬件加速计算校验和。</p>
</li>
<li><p><code>CHECKSUM_GEN_IP</code>, <code>CHECKSUM_GEN_UDP</code>, <code>CHECKSUM_GEN_TCP</code>, <code>CHECKSUM_CHECK_IP</code>, <code>CHECKSUM_CHECK_UDP</code>, <code>CHECKSUM_CHECK_TCP</code>, <code>CHECKSUM_GEN_ICMP</code>: 这些宏定义了是否生成和检查IP、UDP、TCP和ICMP数据包的校验和。根据系统的硬件和性能需求进行调整。</p>
</li>
<li><p><code>LWIP_NETCONN</code>: 定义了是否启用lwIP的netconn API。如果设置为1，将启用lwIP的netconn API。</p>
</li>
<li><p><code>LWIP_SOCKET</code>: 定义了是否启用lwIP的socket API。如果设置为1，将启用lwIP的socket API。</p>
</li>
<li><p><code>LWIP_COMPAT_MUTEX</code>: 定义了是否启用lwIP的互斥锁兼容模式。如果设置为1，将启用lwIP的互斥锁兼容模式。</p>
</li>
<li><p><code>LWIP_SO_RCVTIMEO</code>: 定义了是否启用lwIP的接收超时功能。如果设置为1，将启用lwIP的接收超时功能。</p>
</li>
<li><p><code>TCPIP_THREAD_STACKSIZE</code>: 定义了TCP&#x2F;IP线程的堆栈大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>DEFAULT_UDP_RECVMBOX_SIZE</code>: 定义了UDP接收邮箱的大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>DEFAULT_THREAD_STACKSIZE</code>: 定义了默认线程的堆栈大小。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>LWIP_TCP_KEEPALIVE</code>, <code>TCP_KEEPIDLE_DEFAULT</code>, <code>TCP_KEEPINTVL_DEFAULT</code>, <code>TCP_KEEPCNT_DEFAULT</code>, <code>TCP_MAXIDLE</code>: 这些宏定义了TCP保持连接的相关参数。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>LWIP_DEBUG</code>: 定义了是否启用lwIP的调试功能。如果设置为1，将启用lwIP的调试功能。</p>
</li>
<li><p><code>ICMP_DEBUG</code>: 定义了ICMP调试的级别。可以根据系统的需求进行调整。</p>
</li>
<li><p><code>LWIP_NETIF_LOOPBACK</code>: 定义了是否启用lwIP的回环接口。如果设置为1，将启用lwIP的回环接口。</p>
</li>
<li><p><code>LWIP_LOOPBACK_MAX_PBUFS</code>: 定义了回环接口的最大pbuf（数据包缓冲区）数量。可以根据系统的需求进行调整。</p>
</li>
</ol>
<p>这些宏定义可以根据具体的系统需求进行优化配置。例如，如果系统需要处理大量的TCP连接，可以增加<code>MEMP_NUM_TCP_PCB</code>和<code>MEMP_NUM_TCP_PCB_LISTEN</code>的值。如果系统内存较小，可以减小<code>MEM_SIZE</code>的值。如果系统需要支持更多的UDP连接，可以增加<code>MEMP_NUM_UDP_PCB</code>的值。通过调整这些宏定义的值，可以根据系统的需求和硬件资源进行优化配置，以提高系统性能和资源利用率。</p>
<p><a href="https://blog.csdn.net/Chuangke_Andy/article/details/115303370">lwIP核心业务逻辑</a></p>
<p>lwip 文件生成</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">TARGET=makefsdata</span><br><span class="line"></span><br><span class="line">C_INCLUDES =  \</span><br><span class="line">-I../../../<span class="keyword">include</span>/ \</span><br><span class="line">-I../../../../test/unit/</span><br><span class="line"><span class="comment">#需要添加contrib下ports\unix\port\include\arch\cc.h</span></span><br><span class="line"><span class="section">all:</span></span><br><span class="line">	gcc <span class="variable">$(C_INCLUDES)</span> -o <span class="variable">$(TARGET)</span>.exe makefsdata.c</span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	-rm <span class="variable">$(TARGET)</span>.exe</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>stm32</category>
        <category>lwip</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>lwip</tag>
      </tags>
  </entry>
  <entry>
    <title>Makefile</title>
    <url>/2024/12/24/stm32/makefile/</url>
    <content><![CDATA[<h1 id="Makefile"><a href="#Makefile" class="headerlink" title="Makefile"></a>Makefile</h1><h2 id="keil"><a href="#keil" class="headerlink" title="keil"></a>keil</h2><ul>
<li>缺点：</li>
</ul>
<ol>
<li>编译较大项目麻烦，添加文件和包含路径不方便，不易理解编译和调试的原理</li>
<li>语法上可以加GNUC规则，但是并不全</li>
<li>对于添加软件包等也较复杂</li>
</ol>
<ul>
<li>优点：</li>
</ul>
<ol>
<li>编译快</li>
<li>优化好，编译文件体积小</li>
<li>仿真方便</li>
</ol>
<p>尽量选gcc + makefile方式，如果工程庞大，可选gcc + cmake</p>
<p><a href="http://c.biancheng.net/view/7094.html">语法参考</a></p>
<h1 id="生成部分建文件夹"><a href="#生成部分建文件夹" class="headerlink" title="生成部分建文件夹"></a>生成部分建文件夹</h1><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">OBJECTS += <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(BUILD_DIR)</span>/,$(ASM_SOURCES:.s=.o)</span>)</span><br><span class="line"><span class="keyword">vpath</span> %.s <span class="variable">$(<span class="built_in">sort</span> $(<span class="built_in">dir</span> <span class="variable">$(ASM_SOURCES)</span>)</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.o: %.c Makefile | <span class="variable">$(BUILD_DIR)</span> </span><br><span class="line">      @mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$@</span>)</span></span><br><span class="line">      <span class="variable">$(CC)</span> -c <span class="variable">$(CFLAGS)</span> -Wa,-a,-ad,-alms=<span class="variable">$(BUILD_DIR)</span>/$(&lt;:.c=.lst) <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line">      @mkdir -p <span class="variable">$(<span class="built_in">dir</span> <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$&lt;</span>)</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">#    $(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(&lt;:.c=.lst) $&lt; -o $(BUILD_DIR)/$(&lt;:.c=.o)</span></span><br></pre></td></tr></table></figure>

<p>通配符</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">C_SOURCES =   \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> Template/*.c)</span> \</span><br></pre></td></tr></table></figure>
<p>排除</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">C_SOURCES := <span class="variable">$(<span class="built_in">filter</span>-out APP/glyc.c, <span class="variable">$(C_SOURCES)</span>)</span></span><br></pre></td></tr></table></figure>
<p>反汇编</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="variable">$(TARGET_ASM)</span>: <span class="variable">$(TARGET_AXF)</span></span><br><span class="line">	arm-none-eabi-objdump  -d <span class="variable">$&lt;</span> &gt; <span class="variable">$@</span> </span><br></pre></td></tr></table></figure>
<p>生成库</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">ar -rc lib.a 1.o 2.o ...</span><br></pre></td></tr></table></figure>


<p>条件</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">OS = 1</span><br><span class="line"><span class="keyword">ifeq</span>  (<span class="variable">$(OS)</span>,1)</span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="comment">###</span></span><br><span class="line"><span class="keyword">endif</span></span><br></pre></td></tr></table></figure>
<p>关键字</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">addprefix加前缀</span><br><span class="line">wildcard通配</span><br><span class="line">filter-out排除</span><br></pre></td></tr></table></figure>
<p>增加用量显示</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-Wl,--print-memory-usage</span><br></pre></td></tr></table></figure>
<p>命令合并 其他</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">all clean ocd_flash ocd_flash_softdevice:</span><br><span class="line">      make -C <span class="variable">$(DIR)</span> <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="section">openocd:</span></span><br><span class="line">    openocd -f interface/ADAPTER.cfg -f board/MYBOARD.cfg</span><br><span class="line"></span><br><span class="line"><span class="comment"># makefile添加</span></span><br><span class="line"><span class="section">debug:</span></span><br><span class="line">      openocd -f openocd.cfg &amp;</span><br><span class="line">      <span class="string">&quot;C:\Program Files (x86)\GNU Arm Embedded Toolchain\9 2020-q2-update\bin/arm-none-eabi-gdb&quot;</span> ./_build/<span class="variable">$(TARGETS)</span>.out -ex <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line">   </span><br><span class="line"><span class="section">exit:</span></span><br><span class="line">      @taskkill -f -im openocd.exe</span><br><span class="line"></span><br><span class="line"><span class="section">download:</span></span><br><span class="line">	@echo <span class="string">&quot;h&quot;</span> &gt; jlink.cfg</span><br><span class="line">	@echo <span class="string">&quot;loadfile&quot;</span> <span class="variable">$(BUILD)</span>/<span class="variable">$(TARGET)</span>.hex &gt;&gt; jlink.cfg</span><br><span class="line">	@echo <span class="string">&quot;r&quot;</span> &gt;&gt; jlink.cfg</span><br><span class="line">	@echo <span class="string">&quot;qc&quot;</span> &gt;&gt; jlink.cfg</span><br><span class="line">	@<span class="variable">$(JLINKEXE)</span> -device <span class="variable">$(CHIP)</span> -Speed 4000 -IF SWD -CommanderScript jlink.cfg</span><br><span class="line">	@<span class="variable">$(RM)</span> jlink.cfg</span><br><span class="line"><span class="comment">#系统判断：</span></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(OS)</span>,Windows_NT)</span><br><span class="line">      RM = rmdir /s /q</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">      RM = rm -rf</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="F303discovery"><a href="#F303discovery" class="headerlink" title="F303discovery"></a><code>F303discovery</code></h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"><span class="comment">##########################################################################################################################</span></span><br><span class="line"><span class="comment"># File automatically-generated by tool: [projectgenerator] version: [3.11.2] date: [Fri Dec 03 14:33:59 CST 2021]</span></span><br><span class="line"><span class="comment">##########################################################################################################################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------------</span></span><br><span class="line"><span class="comment"># Generic Makefile (based on gcc)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># ChangeLog :</span></span><br><span class="line"><span class="comment">#	2017-02-10 - Several enhancements + project update mode</span></span><br><span class="line"><span class="comment">#   2015-07-22 - first version</span></span><br><span class="line"><span class="comment"># ------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line"><span class="comment"># target</span></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line">TARGET = F303</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line"><span class="comment"># building variables</span></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line"><span class="comment"># debug build?</span></span><br><span class="line">DEBUG = 1</span><br><span class="line"><span class="comment"># optimization</span></span><br><span class="line">OPT = -Og</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># paths</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># Build path</span></span><br><span class="line">BUILD_DIR = build</span><br><span class="line"></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line"><span class="comment"># source</span></span><br><span class="line"><span class="comment">######################################</span></span><br><span class="line"><span class="comment"># C sources</span></span><br><span class="line">C_SOURCES =  \</span><br><span class="line">startup_stm32.c \</span><br><span class="line">Core/Src/main.c \</span><br><span class="line">Core/Src/gpio.c \</span><br><span class="line">Core/Src/i2c.c \</span><br><span class="line">Core/Src/spi.c \</span><br><span class="line">Core/Src/usb.c \</span><br><span class="line">Core/Src/usart.c \</span><br><span class="line">Core/Src/stm32f3xx_it.c \</span><br><span class="line">Core/Src/stm32f3xx_hal_msp.c \</span><br><span class="line">Core/Src/system_stm32f3xx.c \</span><br><span class="line">STM32F3-Discovery/stm32f3_discovery.c \</span><br><span class="line">STM32F3-Discovery/stm32f3_discovery_gyroscope.c \</span><br><span class="line">STM32F3-Discovery/stm32f3_discovery_accelerometer.c</span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_ll_usb.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_gpio.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_dma.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_exti.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart_ex.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd.c \</span></span><br><span class="line"><span class="comment"># Drivers/STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd_ex.c</span></span><br><span class="line"></span><br><span class="line">C_SOURCES+=<span class="variable">$(<span class="built_in">wildcard</span> components/commmon/*.c)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> components/i3g4250d/*.c)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> components/l3gd20/*.c)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> components/lsm303agr/*.c)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> components/lsm303dlhc/*.c)</span> \</span><br><span class="line"><span class="variable">$(<span class="built_in">wildcard</span> imu/*.c)</span></span><br><span class="line"><span class="comment"># ASM sources</span></span><br><span class="line">ASM_SOURCES =  \</span><br><span class="line"><span class="comment"># startup_stm32f303xc.s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># binaries</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line">PREFIX = arm-none-eabi-</span><br><span class="line"><span class="comment"># The gcc compiler bin path can be either defined in make command via GCC_PATH variable (&gt; make GCC_PATH=xxx)</span></span><br><span class="line"><span class="comment"># either it can be added to the PATH environment variable.</span></span><br><span class="line">GCC_PATH =  <span class="string">&quot;C:\Program Files (x86)\GNU Arm Embedded Toolchain\9 2020-q2-update\bin&quot;</span></span><br><span class="line"><span class="keyword">ifdef</span> GCC_PATH</span><br><span class="line">CC = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>gcc</span><br><span class="line">AS = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>gcc -x assembler-with-cpp</span><br><span class="line">CP = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>objcopy</span><br><span class="line">SZ = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>size</span><br><span class="line">AR = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>ar</span><br><span class="line">MP = <span class="variable">$(GCC_PATH)</span>/<span class="variable">$(PREFIX)</span>objdump</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">CC = <span class="variable">$(PREFIX)</span>gcc</span><br><span class="line">AS = <span class="variable">$(PREFIX)</span>gcc -x assembler-with-cpp</span><br><span class="line">CP = <span class="variable">$(PREFIX)</span>objcopy</span><br><span class="line">SZ = <span class="variable">$(PREFIX)</span>size</span><br><span class="line">AR = <span class="variable">$(PREFIX)</span>ar</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line">HEX = <span class="variable">$(CP)</span> -O ihex</span><br><span class="line">BIN = <span class="variable">$(CP)</span> -O binary -S</span><br><span class="line"> </span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># CFLAGS</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># cpu</span></span><br><span class="line">CPU = -mcpu=cortex-m4</span><br><span class="line"></span><br><span class="line"><span class="comment"># fpu</span></span><br><span class="line">FPU = -mfpu=fpv4-sp-d16</span><br><span class="line"></span><br><span class="line"><span class="comment"># float-abi</span></span><br><span class="line">FLOAT-ABI = -mfloat-abi=hard</span><br><span class="line"></span><br><span class="line"><span class="comment"># mcu</span></span><br><span class="line">MCU = <span class="variable">$(CPU)</span> -mthumb <span class="variable">$(FPU)</span> $(FLOAT-ABI)</span><br><span class="line"></span><br><span class="line"><span class="comment"># macros for gcc</span></span><br><span class="line"><span class="comment"># AS defines</span></span><br><span class="line">AS_DEFS = </span><br><span class="line"></span><br><span class="line"><span class="comment"># C defines</span></span><br><span class="line">C_DEFS =  \</span><br><span class="line">-DUSE_HAL_DRIVER \</span><br><span class="line">-DSTM32F303xC</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># AS includes</span></span><br><span class="line">AS_INCLUDES = </span><br><span class="line"></span><br><span class="line"><span class="comment"># C includes</span></span><br><span class="line">C_INCLUDES =  \</span><br><span class="line">-ICore/Inc \</span><br><span class="line">-IDrivers/STM32F3xx_HAL_Driver/Inc \</span><br><span class="line">-IDrivers/STM32F3xx_HAL_Driver/Inc/Legacy \</span><br><span class="line">-IDrivers/CMSIS/Device/ST/STM32F3xx/Include \</span><br><span class="line">-IDrivers/CMSIS/Include \</span><br><span class="line">-ISTM32F3-Discovery \</span><br><span class="line">-Icomponents/l3gd20 \</span><br><span class="line">-Icomponents/lsm303agr \</span><br><span class="line">-Icomponents/lsm303dlhc \</span><br><span class="line">-Icomponents/i3g4250d \</span><br><span class="line">-Iimu</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># compile gcc flags</span></span><br><span class="line">ASFLAGS = <span class="variable">$(MCU)</span> <span class="variable">$(AS_DEFS)</span> <span class="variable">$(AS_INCLUDES)</span> <span class="variable">$(OPT)</span> -Wall -fdata-sections -ffunction-sections</span><br><span class="line"></span><br><span class="line">CFLAGS = <span class="variable">$(MCU)</span> <span class="variable">$(C_DEFS)</span> <span class="variable">$(C_INCLUDES)</span> <span class="variable">$(OPT)</span> -Wall -fdata-sections -ffunction-sections</span><br><span class="line"></span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(DEBUG)</span>, 1)</span><br><span class="line">CFLAGS += -g -gdwarf-2</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Generate dependency information</span></span><br><span class="line">CFLAGS += -MMD -MP -MF<span class="string">&quot;$(@:%.o=%.d)&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># LDFLAGS</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># link script</span></span><br><span class="line">LDSCRIPT = STM32F303VCTx_FLASH.ld</span><br><span class="line"></span><br><span class="line"><span class="comment"># libraries</span></span><br><span class="line">LIBS = -lc -lm -lnosys </span><br><span class="line">LIBS += Drivers/STM32F303VCTx.lib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LIBDIR =</span><br><span class="line">LDFLAGS = <span class="variable">$(MCU)</span> -specs=nano.specs -T<span class="variable">$(LDSCRIPT)</span> <span class="variable">$(LIBDIR)</span> <span class="variable">$(LIBS)</span> -Wl,-Map=<span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.map,--cref -Wl,--gc-sections</span><br><span class="line"></span><br><span class="line"><span class="comment"># default action: build all</span></span><br><span class="line"><span class="section">all: <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.elf <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.hex <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.bin</span></span><br><span class="line"></span><br><span class="line"><span class="section">Drivers/STM32F303VCTx.lib: lib</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># build the application</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># list of objects</span></span><br><span class="line">OBJECTS = <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(BUILD_DIR)</span>/,$(<span class="built_in">notdir</span> $(C_SOURCES:.c=.o)</span>))</span><br><span class="line"><span class="keyword">vpath</span> %.c <span class="variable">$(<span class="built_in">sort</span> $(<span class="built_in">dir</span> <span class="variable">$(C_SOURCES)</span>)</span>)</span><br><span class="line"><span class="comment"># list of ASM program objects</span></span><br><span class="line">OBJECTS += <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(BUILD_DIR)</span>/,$(<span class="built_in">notdir</span> $(ASM_SOURCES:.s=.o)</span>))</span><br><span class="line"><span class="keyword">vpath</span> %.s <span class="variable">$(<span class="built_in">sort</span> $(<span class="built_in">dir</span> <span class="variable">$(ASM_SOURCES)</span>)</span>)</span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.o: %.c Makefile | <span class="variable">$(BUILD_DIR)</span> </span><br><span class="line">	<span class="variable">$(CC)</span> -c <span class="variable">$(CFLAGS)</span> -Wa,-a,-ad,-alms=<span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(<span class="built_in">notdir</span> $(&lt;:.c=.lst)</span>) <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.o: %.s Makefile | <span class="variable">$(BUILD_DIR)</span></span><br><span class="line">	<span class="variable">$(AS)</span> -c <span class="variable">$(CFLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.elf: <span class="variable">$(OBJECTS)</span> Makefile</span><br><span class="line">	<span class="variable">$(CC)</span> <span class="variable">$(OBJECTS)</span> <span class="variable">$(LDFLAGS)</span> -o <span class="variable">$@</span></span><br><span class="line">	<span class="variable">$(SZ)</span> <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.hex: <span class="variable">$(BUILD_DIR)</span>/%.elf | <span class="variable">$(BUILD_DIR)</span></span><br><span class="line">	<span class="variable">$(HEX)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span></span><br><span class="line">	</span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.bin: <span class="variable">$(BUILD_DIR)</span>/%.elf | <span class="variable">$(BUILD_DIR)</span></span><br><span class="line">	<span class="variable">$(BIN)</span> <span class="variable">$&lt;</span> <span class="variable">$@</span>	</span><br><span class="line">	</span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>:</span><br><span class="line">	mkdir <span class="variable">$@</span>		</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># clean up</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="section">clean:</span></span><br><span class="line">	-rm -fR <span class="variable">$(BUILD_DIR)</span></span><br><span class="line">  </span><br><span class="line"></span><br><span class="line"><span class="section">ocd_flash: <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.hex</span></span><br><span class="line">	openocd -f openocd.cfg -c <span class="string">&quot;program <span class="variable">$^</span> verify reset exit&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="section">debug:</span></span><br><span class="line">	openocd -f openocd.cfg &amp;</span><br><span class="line">	<span class="string">&quot;C:\Program Files (x86)\GNU Arm Embedded Toolchain\9 2020-q2-update\bin/arm-none-eabi-gdb&quot;</span> <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.elf  -ex <span class="string">&quot;target remote localhost:3333&quot;</span></span><br><span class="line">  </span><br><span class="line"><span class="section">exit:</span></span><br><span class="line">	@taskkill -f -im openocd.exe</span><br><span class="line"></span><br><span class="line"><span class="section">dump:</span></span><br><span class="line">	<span class="variable">$(MP)</span> -d <span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(TARGET)</span>.elf &gt; dump.txt</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> CFLAGS CC AR BUILD_DIR</span><br><span class="line">lib libclean:</span><br><span class="line">	make -C Drivers <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">	</span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="comment"># dependencies</span></span><br><span class="line"><span class="comment">#######################################</span></span><br><span class="line"><span class="keyword">-include</span> <span class="variable">$(<span class="built_in">wildcard</span> <span class="variable">$(BUILD_DIR)</span>/*.d)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># *** EOF ***</span></span><br></pre></td></tr></table></figure>
<h2 id="Drivers-makefile"><a href="#Drivers-makefile" class="headerlink" title="Drivers&#x2F;makefile"></a>Drivers&#x2F;makefile</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#$(wildcard STM32F3xx_HAL_Driver/Src/*.c)</span></span><br><span class="line">LIB_SOURCES+= \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_ll_usb.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_i2c_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_rcc_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_gpio.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_dma.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_cortex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pwr_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_flash_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_exti.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_spi_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_tim_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_uart_ex.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd.c \</span><br><span class="line">STM32F3xx_HAL_Driver/Src/stm32f3xx_hal_pcd_ex.c</span><br><span class="line"></span><br><span class="line">C_INCLUDES =  \</span><br><span class="line">-I../Core/Inc \</span><br><span class="line">-ISTM32F3xx_HAL_Driver/Inc \</span><br><span class="line">-ISTM32F3xx_HAL_Driver/Inc/Legacy \</span><br><span class="line">-ICMSIS/Device/ST/STM32F3xx/Include \</span><br><span class="line">-ICMSIS/Include </span><br><span class="line"></span><br><span class="line">OBJECTS = <span class="variable">$(<span class="built_in">addprefix</span> <span class="variable">$(BUILD_DIR)</span>/,$(<span class="built_in">notdir</span> $(LIB_SOURCES:.c=.o)</span>))</span><br><span class="line"><span class="keyword">vpath</span> %.c <span class="variable">$(<span class="built_in">sort</span> $(<span class="built_in">dir</span> <span class="variable">$(LIB_SOURCES)</span>)</span>)</span><br><span class="line"><span class="comment"># list of ASM program objects</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>/%.o: %.c <span class="variable">$(BUILD_DIR)</span> </span><br><span class="line">	@<span class="variable">$(CC)</span> -c <span class="variable">$(CFLAGS)</span> <span class="variable">$(C_INCLUDES)</span> -Wa,-a,-ad,-alms=<span class="variable">$(BUILD_DIR)</span>/<span class="variable">$(<span class="built_in">notdir</span> $(&lt;:.c=.lst)</span>) <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line">	@echo <span class="string">&quot;Compiled &quot;</span><span class="variable">$&lt;</span><span class="string">&quot;\n&quot;</span></span><br><span class="line"><span class="variable">$(BUILD_DIR)</span>:</span><br><span class="line">	mkdir <span class="variable">$@</span></span><br><span class="line">	</span><br><span class="line">HALLIB = STM32F303VCTx.lib</span><br><span class="line"><span class="section">lib: <span class="variable">$(HALLIB)</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$(HALLIB)</span>:<span class="variable">$(BUILD_DIR)</span> <span class="variable">$(OBJECTS)</span></span><br><span class="line">	<span class="variable">$(AR)</span> -r <span class="variable">$@</span>  <span class="variable">$(OBJECTS)</span> </span><br><span class="line"></span><br><span class="line"><span class="section">libclean:</span></span><br><span class="line">	rm -rf <span class="variable">$(BUILD_DIR)</span></span><br><span class="line">	rm STM32F303VCTx.lib</span><br></pre></td></tr></table></figure>


<h2 id="其他操作，打印输出"><a href="#其他操作，打印输出" class="headerlink" title="其他操作，打印输出"></a>其他操作，打印输出</h2><h3 id="输出颜色，显示命令，帮助"><a href="#输出颜色，显示命令，帮助" class="headerlink" title="输出颜色，显示命令，帮助"></a>输出颜色，显示命令，帮助</h3><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">C_SRCS := </span><br><span class="line">C_OBJS := <span class="variable">$(<span class="built_in">patsubst</span> %.c,<span class="variable">$(OBJ_FOLDER)</span>%.o,$(<span class="built_in">notdir</span> <span class="variable">$(C_SRCS)</span>)</span>)</span><br><span class="line"></span><br><span class="line">CPP_SRCS := </span><br><span class="line">CPP_OBJS := <span class="variable">$(<span class="built_in">patsubst</span> %.cpp,<span class="variable">$(OBJ_FOLDER)</span>%.o,$(<span class="built_in">notdir</span> <span class="variable">$(CPP_SRCS)</span>)</span>)</span><br><span class="line"></span><br><span class="line">S_SRCS := </span><br><span class="line">S_OBJS = <span class="variable">$(<span class="built_in">patsubst</span> %.s,<span class="variable">$(OBJ_FOLDER)</span>%.o,$(<span class="built_in">filter</span> %.s,$(<span class="built_in">notdir</span> <span class="variable">$(S_SRCS)</span>)</span>))</span><br><span class="line">S_OBJS += <span class="variable">$(<span class="built_in">patsubst</span> %.S,<span class="variable">$(OBJ_FOLDER)</span>%.o,$(<span class="built_in">filter</span> %.S,$(<span class="built_in">notdir</span> <span class="variable">$(S_SRCS)</span>)</span>))</span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Logging options</span></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable color output by default.</span></span><br><span class="line">USE_COLOR ?= 1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Normally, commands in recipes are prefixed with &#x27;@&#x27; so the command itself</span></span><br><span class="line"><span class="comment"># is not echoed by make. But if VERBOSE is defined (set to anything non-empty),</span></span><br><span class="line"><span class="comment"># then the &#x27;@&#x27; is removed from recipes. The &#x27;at&#x27; variable is used to control</span></span><br><span class="line"><span class="comment"># this.</span></span><br><span class="line"><span class="keyword">ifeq</span> <span class="string">&quot;<span class="variable">$(VERBOSE)</span>&quot;</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">at :=</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">at := @</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># These colors must be printed with the printf command. echo won&#x27;t handle the</span></span><br><span class="line"><span class="comment"># escape sequences.</span></span><br><span class="line">color_default = \033[00m</span><br><span class="line">color_bold = \033[01m</span><br><span class="line">color_red = \033[31m</span><br><span class="line">color_green = \033[32m</span><br><span class="line">color_yellow = \033[33m</span><br><span class="line">color_blue = \033[34m</span><br><span class="line">color_magenta = \033[35m</span><br><span class="line">color_cyan = \033[36m</span><br><span class="line">color_orange = \033[38;5;172m</span><br><span class="line">color_light_blue = \033[38;5;039m</span><br><span class="line">color_gray = \033[38;5;008m</span><br><span class="line">color_purple = \033[38;5;097m</span><br><span class="line"></span><br><span class="line"><span class="keyword">ifeq</span> <span class="string">&quot;<span class="variable">$(USE_COLOR)</span>&quot;</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">color_build := <span class="variable">$(color_light_blue)</span></span><br><span class="line">color_c := <span class="variable">$(color_green)</span></span><br><span class="line">color_cxx := <span class="variable">$(color_green)</span></span><br><span class="line">color_cpp := <span class="variable">$(color_orange)</span></span><br><span class="line">color_asm := <span class="variable">$(color_magenta)</span></span><br><span class="line">color_ar := <span class="variable">$(color_yellow)</span></span><br><span class="line">color_link := <span class="variable">$(color_cyan)</span></span><br><span class="line">color_convert := <span class="variable">$(color_gray)</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Used in printmessage if the color args are not present.</span></span><br><span class="line">color_ :=</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use in recipes to print color messages if printing to a terminal. If</span></span><br><span class="line"><span class="comment"># USE_COLOR is not set to 1, this reverts to a simple uncolorized printf.</span></span><br><span class="line"><span class="comment"># A newline is added to the end of the printed message.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Arguments:</span></span><br><span class="line"><span class="comment">#  1 - name of the color variable (see above), minus the &quot;color_&quot; prefix</span></span><br><span class="line"><span class="comment">#  2 - first colorized part of the message</span></span><br><span class="line"><span class="comment">#  3 - first uncolorized part of the message</span></span><br><span class="line"><span class="comment">#  4 - color name for second colorized message</span></span><br><span class="line"><span class="comment">#  5 - second colorized message</span></span><br><span class="line"><span class="comment">#  6 - second uncolorized part of the message</span></span><br><span class="line"><span class="comment">#  7 - uncolorized prefix on the whole line; this is last because it is expected to be used rarely</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># All arguments are optional.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Use like:</span></span><br><span class="line"><span class="comment">#  $(call printmessage,cyan,Building, remainder of the message...)</span></span><br><span class="line"><span class="keyword">ifeq</span> <span class="string">&quot;<span class="variable">$(USE_COLOR)</span>&quot;</span> <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="keyword">define</span> printmessage</span><br><span class="line">if [ -t 1 ]; then printf <span class="string">&quot;$(7)$(color_$(1))$(2)<span class="variable">$(color_default)</span>$(3)$(color_$(4))$(5)<span class="variable">$(color_default)</span>$(6)\n&quot;</span> ; \</span><br><span class="line"><span class="keyword">else</span> printf <span class="string">&quot;$(7)$(2)$(3)$(5)$(6)\n&quot;</span> ; fi</span><br><span class="line"><span class="keyword">endef</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">define</span> printmessage</span><br><span class="line">printf <span class="string">&quot;$(7)$(2)$(3)$(5)$(6)\n&quot;</span></span><br><span class="line"><span class="keyword">endef</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># Recipes</span></span><br><span class="line"><span class="comment">#-------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile C sources.</span></span><br><span class="line"><span class="variable">$(OBJ_FOLDER)</span>%.o : %.c</span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,c,Compiling, <span class="variable">$&lt;</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(CC)</span> <span class="variable">$(CFLAGS)</span> <span class="variable">$(COMMON_FLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Compile C++ sources.</span></span><br><span class="line"><span class="variable">$(OBJ_FOLDER)</span>%.o : %.cpp</span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,cxx,Compiling, <span class="variable">$&lt;</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(CXX)</span> <span class="variable">$(CXXFLAGS)</span> <span class="variable">$(COMMON_FLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Preprocess and assemble .S sources.</span></span><br><span class="line"><span class="variable">$(OBJ_FOLDER)</span>%.o : %.S</span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,asm,Assembling, <span class="variable">$&lt;</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(AS)</span> <span class="variable">$(ASFLAGS)</span> <span class="variable">$(COMMON_FLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Assemble .s sources.</span></span><br><span class="line"><span class="variable">$(OBJ_FOLDER)</span>%.o : %.s</span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,asm,Assembling, <span class="variable">$&lt;</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(AS)</span> <span class="variable">$(ASFLAGS)</span> <span class="variable">$(COMMON_FLAGS)</span> <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(OUT_DIR)</span>:</span><br><span class="line"><span class="keyword">ifeq</span> (<span class="variable">$(OS)</span>,Windows_NT)</span><br><span class="line">	<span class="variable">$(at)</span>-mkdir <span class="variable">$(OUT_DIR)</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(<span class="built_in">shell</span> mkdir <span class="variable">$(OBJ_FOLDER)</span> 2&gt;/dev/null)</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Tool invocations</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(LD_SCRIPT)</span>: <span class="variable">$(LD_SCRIPT_IN)</span></span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,cpp,Preprocessing, <span class="variable">$&lt;</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(CPP)</span> <span class="variable">$(CPP_FLAGS)</span> <span class="variable">$(LD_CPP_FLAGS)</span> <span class="variable">$(INC_DIRS_F)</span> <span class="variable">$(CC_SYMBOLS)</span> -MMD <span class="variable">$&lt;</span> -o <span class="variable">$@</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET_OUT)</span>: <span class="variable">$(LD_SCRIPT)</span> <span class="variable">$(C_OBJS)</span> <span class="variable">$(CPP_OBJS)</span> <span class="variable">$(S_OBJS)</span></span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,link,Linking, <span class="variable">$@</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(LD)</span> <span class="variable">$(LIB_PATHS)</span> -o <span class="variable">$@</span> <span class="variable">$(CPP_OBJS)</span> <span class="variable">$(C_OBJS)</span> <span class="variable">$(S_OBJS)</span> <span class="variable">$(O_OBJS)</span> <span class="variable">$(LIBS)</span> <span class="variable">$(LD_OPTIONS)</span></span><br><span class="line">	<span class="variable">$(at)</span><span class="variable">$(SIZE)</span> --totals <span class="variable">$(TARGET_OUT)</span></span><br><span class="line">	<span class="variable">$(at)</span>-<span class="variable">$(NM)</span> <span class="variable">$(NMFLAGS)</span> <span class="variable">$(TARGET_OUT)</span> &gt; <span class="variable">$(OBJ_FOLDER)</span><span class="variable">$(TARGET)</span>-symbol-table.txt</span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET_HEX)</span>: <span class="variable">$(TARGET_OUT)</span></span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,convert,Converting, <span class="variable">$@</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span>@<span class="variable">$(OBJCOPY)</span> -O ihex <span class="variable">$(TARGET_OUT)</span>  <span class="variable">$(TARGET_HEX)</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$(TARGET_BIN)</span>: <span class="variable">$(TARGET_OUT)</span></span><br><span class="line">	@<span class="variable">$(<span class="built_in">call</span> printmessage,convert,Converting, <span class="variable">$@</span>)</span></span><br><span class="line">	<span class="variable">$(at)</span>@<span class="variable">$(OBJCOPY)</span> -O binary <span class="variable">$(TARGET_OUT)</span>  <span class="variable">$(TARGET_BIN)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="section">help:</span></span><br><span class="line">	@echo <span class="string">&quot;Useful targets:&quot;</span></span><br><span class="line">	@echo <span class="string">&quot; - all (default)&quot;</span></span><br><span class="line">	@echo <span class="string">&quot; - clean&quot;</span></span><br><span class="line">	@echo <span class="string">&quot; - help&quot;</span></span><br><span class="line">	@echo</span><br><span class="line">	@echo <span class="string">&quot;Options:&quot;</span></span><br><span class="line">	@echo <span class="string">&quot; - VERBOSE=&#123;0|1&#125; to show full command lines.&quot;</span></span><br><span class="line">	@echo <span class="string">&quot; - USE_COLOR=&#123;0|1&#125; to override color output.&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>stm32</category>
        <category>Makefile</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>Makefile</tag>
      </tags>
  </entry>
  <entry>
    <title>ws2812</title>
    <url>/2024/12/24/stm32/ws2812/</url>
    <content><![CDATA[<h2 id="WS2812驱动"><a href="#WS2812驱动" class="headerlink" title="WS2812驱动"></a>WS2812驱动</h2><h3 id="时序"><a href="#时序" class="headerlink" title="时序"></a>时序</h3><table>
<thead>
<tr>
<th>码</th>
<th>释义</th>
<th>时间</th>
</tr>
</thead>
<tbody><tr>
<td>T0H</td>
<td>0码，高电平时间</td>
<td>400±150ns</td>
</tr>
<tr>
<td>T0H</td>
<td>1码，高电平时间</td>
<td>850±150ns</td>
</tr>
<tr>
<td>T0L</td>
<td>0码，低电平时间</td>
<td>850±150ns</td>
</tr>
<tr>
<td>T0L</td>
<td>1码，低电平时间</td>
<td>400±150ns</td>
</tr>
<tr>
<td>RES</td>
<td>复位低电平时间</td>
<td>&gt;50us</td>
</tr>
</tbody></table>
<h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="定时器"><a href="#定时器" class="headerlink" title="定时器"></a>定时器</h4><ul>
<li>PWM通道</li>
<li>ARR &#x3D; 时钟频率 * 1.2  </li>
<li>其余默认(0分频，向上计数，PWM1…)</li>
</ul>
<h4 id="DMA配置"><a href="#DMA配置" class="headerlink" title="DMA配置"></a>DMA配置</h4><ul>
<li>DMA中断默认开启，时钟中断不需要开</li>
<li>添加DMA，对应定时器和通道，Memory to Peripheral,Very High，<br>Mode Normal,Increment Memory,Data Width Per&#x3D;Half word,Mem &#x3D; Word</li>
</ul>
<h3 id="控制代码"><a href="#控制代码" class="headerlink" title="控制代码"></a>控制代码</h3><p>1.简单效果</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> LED_NUM	100</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint32_t</span> Led[LED_NUM];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">LEDFUN Ledfun = STREAM_Y;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Led_Func</span><span class="params">(LEDFUN sel)</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">	<span class="type">uint32_t</span> G = <span class="number">0xff</span>&lt;&lt;<span class="number">16</span>;</span><br><span class="line">	<span class="type">uint32_t</span> R = <span class="number">0xff</span>&lt;&lt;<span class="number">8</span>;</span><br><span class="line">	<span class="type">uint32_t</span> B = <span class="number">0xff</span>;</span><br><span class="line">	<span class="type">uint8_t</span> i,temp;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint8_t</span> cnt;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint8_t</span> timecnt;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint32_t</span> tick = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (++timecnt &gt; <span class="number">100</span>)</span><br><span class="line">		timecnt = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span> (++cnt &gt;LED_NUM*<span class="number">2</span>)</span><br><span class="line">		cnt = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		Led[i] = <span class="number">0</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">switch</span> (sel)</span><br><span class="line">	&#123;</span><br><span class="line">	<span class="comment">//OFF</span></span><br><span class="line">		<span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"></span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">	<span class="comment">//breath;</span></span><br><span class="line"><span class="comment">//----------------------------------------------------------</span></span><br><span class="line">		<span class="keyword">case</span> BREATH_G:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">16</span>)*<span class="number">5</span>*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">16</span>)*<span class="number">5</span>*(<span class="number">100</span>-timecnt);</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> BREATH_R:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*(<span class="number">100</span>-timecnt);</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> BREATH_B:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = <span class="number">5</span>*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = <span class="number">5</span>*(<span class="number">100</span>-timecnt);</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> BREATH_Y:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">16</span>|<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = (<span class="number">1</span>&lt;&lt;<span class="number">16</span>|<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*(<span class="number">100</span>-timecnt);</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> BREATH_GY:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = (<span class="number">1</span>|<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = (<span class="number">1</span>|<span class="number">1</span>&lt;&lt;<span class="number">8</span>)*<span class="number">5</span>*(<span class="number">100</span>-timecnt);</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">				</span><br><span class="line">		<span class="keyword">case</span> BREATH_D:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					<span class="keyword">if</span> (timecnt&lt;<span class="number">50</span>)</span><br><span class="line">						Led[i] = (<span class="number">5</span>|<span class="number">3</span>&lt;&lt;<span class="number">8</span>)*timecnt;</span><br><span class="line">					<span class="keyword">else</span></span><br><span class="line">						Led[i] = (<span class="number">5</span>|<span class="number">3</span>&lt;&lt;<span class="number">8</span>)*(<span class="number">100</span>-timecnt);</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			<span class="comment">//flicker</span></span><br><span class="line"><span class="comment">//----------------------------------------------------------</span></span><br><span class="line">		<span class="keyword">case</span> FLICKER_G:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span> (timecnt%<span class="number">50</span> &gt; <span class="number">25</span>)</span><br><span class="line">					Led[i] = G;</span><br><span class="line">				<span class="keyword">else</span> </span><br><span class="line">					Led[i] = <span class="number">0</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> FLICKER_R:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span> (timecnt%<span class="number">50</span> &gt; <span class="number">25</span>)</span><br><span class="line">					Led[i] = R;</span><br><span class="line">				<span class="keyword">else</span> </span><br><span class="line">					Led[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> FLICKER_B:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span> (timecnt%<span class="number">50</span> &gt; <span class="number">25</span>)</span><br><span class="line">					Led[i] = B;</span><br><span class="line">				<span class="keyword">else</span> </span><br><span class="line">					Led[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> FLICKER_Y:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span> (timecnt%<span class="number">50</span> &gt; <span class="number">25</span>)</span><br><span class="line">					Led[i] = <span class="number">0xffff00</span>;</span><br><span class="line">				<span class="keyword">else</span> </span><br><span class="line">					Led[i] = <span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> FLICKER_GY:</span><br><span class="line">			<span class="keyword">for</span>(i = <span class="number">0</span>;i &lt; LED_NUM;i++)</span><br><span class="line">				&#123;</span><br><span class="line">				<span class="keyword">if</span> (timecnt%<span class="number">50</span> &gt; <span class="number">25</span>)</span><br><span class="line">					Led[i] = <span class="number">0xffff</span>;</span><br><span class="line">				<span class="keyword">else</span> </span><br><span class="line">					Led[i] = <span class="number">0</span>;</span><br><span class="line">		</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">			<span class="comment">//stream</span></span><br><span class="line"><span class="comment">//----------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line">		<span class="keyword">case</span> STREAM_G:</span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				Led[(i + cnt/<span class="number">2</span>)%LED_NUM]  = (i&lt;&lt;<span class="number">16</span>)*<span class="number">16</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">case</span> STREAM_R:</span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				Led[(i + cnt/<span class="number">2</span>)%LED_NUM] = (i&lt;&lt;<span class="number">8</span>)*<span class="number">16</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		</span><br><span class="line">		<span class="keyword">case</span> STREAM_B:</span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				Led[(i + cnt/<span class="number">2</span>)%LED_NUM]  = i*<span class="number">16</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		<span class="keyword">case</span> STREAM_Y:</span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>;i &lt; <span class="number">16</span>;i++)</span><br><span class="line">			&#123;</span><br><span class="line">				Led[(i + cnt/<span class="number">2</span>)%LED_NUM] = (i|i&lt;&lt;<span class="number">8</span> )*<span class="number">16</span>;</span><br><span class="line">			&#125;	</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line"><span class="comment">//----------------------------------------------------------</span></span><br><span class="line">		<span class="keyword">case</span> RAINBOW:</span><br><span class="line">			temp = LED_NUM/<span class="number">7</span>;</span><br><span class="line">			<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; temp;i++)</span><br><span class="line">				&#123;</span><br><span class="line">					Led[i+temp*<span class="number">0</span>] = R;</span><br><span class="line">					Led[i+temp*<span class="number">1</span>] = <span class="number">0x85ff00</span>;</span><br><span class="line">					Led[i+temp*<span class="number">2</span>] = <span class="number">0xffff00</span>;</span><br><span class="line">					Led[i+temp*<span class="number">3</span>] = G;</span><br><span class="line">					Led[i+temp*<span class="number">4</span>] = <span class="number">0xfc5c00</span>;</span><br><span class="line">					Led[i+temp*<span class="number">5</span>] = B;</span><br><span class="line">					Led[i+temp*<span class="number">6</span>] = <span class="number">0x0094d3</span>;</span><br><span class="line">				&#125;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>2.驱动</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;tim.h&quot;</span></span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">	<span class="type">const</span> <span class="type">uint32_t</span> head[<span class="number">2</span>];</span><br><span class="line">	<span class="type">uint32_t</span> data[LED_NUM*<span class="number">24</span>];</span><br><span class="line">	<span class="type">const</span> <span class="type">uint32_t</span> tail;</span><br><span class="line">&#125;DMA_Buffer;</span><br><span class="line"></span><br><span class="line">DMA_Buffer P_Buffer=</span><br><span class="line">&#123;</span><br><span class="line">	.head[<span class="number">0</span>] = <span class="number">0</span>,</span><br><span class="line">	.head[<span class="number">1</span>] = <span class="number">0</span>,</span><br><span class="line">	.tail = <span class="number">0</span>,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Led_Show</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">uint16_t</span> i,j;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint32_t</span> tick = <span class="number">0</span>;</span><br><span class="line">	<span class="type">static</span> <span class="type">uint32_t</span> test_cnt = <span class="number">0</span>;</span><br><span class="line">	</span><br><span class="line">	<span class="keyword">if</span> (HAL_GetTick() - tick &gt; <span class="number">40</span>)<span class="comment">//调用频率</span></span><br><span class="line">	&#123;</span><br><span class="line">		tick = HAL_GetTick();</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">return</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//----------------------------------------</span></span><br><span class="line">	<span class="comment">//测试</span></span><br><span class="line">	<span class="keyword">if</span> (++test_cnt &gt; <span class="number">200</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		test_cnt = <span class="number">0</span>;</span><br><span class="line">		Ledfun++;</span><br><span class="line">		<span class="keyword">if</span> (Ledfun == RAINBOW+<span class="number">1</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			Ledfun =BREATH_G;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//----------------------------------------</span></span><br><span class="line">	Led_Func(Ledfun);	</span><br><span class="line">	<span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; LED_NUM;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span> (j = <span class="number">0</span>;j &lt; <span class="number">24</span>;j++)</span><br><span class="line">			P_Buffer.data[<span class="number">24</span>*i+j] = (Led[i] &amp; (<span class="number">1</span> &lt;&lt; (<span class="number">23</span>-j)))? <span class="number">40</span>:<span class="number">20</span>;<span class="comment">//71:34;//根据实际修改</span></span><br><span class="line">	&#125;</span><br><span class="line">	HAL_TIM_PWM_Start_DMA(&amp;htim4, TIM_CHANNEL_1, (<span class="type">uint32_t</span> *)&amp;P_Buffer, <span class="number">2</span> + LED_NUM * <span class="number">24</span> + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//中断回调</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HAL_TIM_PWM_PulseFinishedCallback</span><span class="params">(TIM_HandleTypeDef *htim)</span></span><br><span class="line">&#123;</span><br><span class="line">    HAL_TIM_PWM_Stop(&amp;htim4,TIM_CHANNEL_1);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>stm32</category>
        <category>ws2812</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>vscode doxygen</title>
    <url>/2024/12/24/vscode/setting.json/</url>
    <content><![CDATA[<h2 id="1-ctrl-shift-p"><a href="#1-ctrl-shift-p" class="headerlink" title="1. ctrl+shift+p"></a>1. ctrl+shift+p</h2><h2 id="2-输入setting"><a href="#2-输入setting" class="headerlink" title="2. 输入setting"></a>2. 输入setting</h2><h2 id="3-选择-首选项：打开设置（json）即可"><a href="#3-选择-首选项：打开设置（json）即可" class="headerlink" title="3. 选择 首选项：打开设置（json）即可."></a>3. 选择 首选项：打开设置（json）即可.</h2><h2 id="4、将以下文件复制到json中"><a href="#4、将以下文件复制到json中" class="headerlink" title="4、将以下文件复制到json中"></a>4、将以下文件复制到json中</h2><pre><code class="json">&#123;
    &quot;tabnine.experimentalAutoImports&quot;: true,
    &quot;workbench.iconTheme&quot;: &quot;vscode-icons&quot;,

    // Doxygen documentation generator set
    &quot;doxdocgen.file.copyrightTag&quot;: [
        &quot;@copyright Copyright (c) &#123;year&#125;  武汉木仓科技股份有限公司&quot;
    ],
    &quot;doxdocgen.file.customTag&quot;: [
        &quot;@par 修改日志:&quot;,
        &quot;&lt;table&gt;&quot;,
        &quot;&lt;tr&gt;&lt;th&gt;Date       &lt;th&gt;Version &lt;th&gt;Author  &lt;th&gt;Description&quot;,
        &quot;&lt;tr&gt;&lt;td&gt;&#123;date&#125; &lt;td&gt;1.0     &lt;td&gt;chengxingjun     &lt;td&gt;内容&quot;,
        &quot;&lt;/table&gt;&quot;,
    ],
    &quot;doxdocgen.file.fileOrder&quot;: [
        &quot;file&quot;,
        &quot;brief&quot;,
        &quot;author&quot;,
        &quot;version&quot;,
        &quot;date&quot;,
        &quot;empty&quot;,
        &quot;copyright&quot;,
        &quot;empty&quot;,
        &quot;custom&quot;
    ],
    &quot;doxdocgen.file.fileTemplate&quot;: &quot;@file &#123;name&#125;&quot;,
    &quot;doxdocgen.file.versionTag&quot;: &quot;@version 1.0&quot;,
    &quot;doxdocgen.generic.authorEmail&quot;: &quot;chengxingjun@mucang.cn&quot;,
    &quot;doxdocgen.generic.authorName&quot;: &quot;chengxingjun&quot;,
    &quot;doxdocgen.generic.authorTag&quot;: &quot;@author &#123;author&#125; (&#123;email&#125;)&quot;,

    &quot;doxdocgen.generic.order&quot;: [
        &quot;brief&quot;,
        &quot;tparam&quot;,
        &quot;param&quot;,
        &quot;return&quot;
    ],
    &quot;doxdocgen.generic.paramTemplate&quot;: &quot;@param&#123;indent:8&#125;&#123;param&#125;&#123;indent:25&#125; [in/out]&quot;,
    &quot;doxdocgen.generic.returnTemplate&quot;: &quot;@return &#123;type&#125; &quot;,
    &quot;doxdocgen.generic.splitCasingSmartText&quot;: true,
    &quot;C_Cpp.updateChannel&quot;: &quot;Insiders&quot;,
    &quot;vsicons.dontShowNewVersionMessage&quot;: true,
    &quot;security.workspace.trust.untrustedFiles&quot;: &quot;open&quot;,
    &quot;cmake.configureOnOpen&quot;: true,
    &quot;http.proxySupport&quot;: &quot;off&quot;,
    &quot;cSpell.userWords&quot;: [],



&#125;
</code></pre>
]]></content>
      <categories>
        <category>vscode</category>
      </categories>
      <tags>
        <tag>vscode</tag>
      </tags>
  </entry>
  <entry>
    <title>stm32启动</title>
    <url>/2024/12/24/stm32/start/</url>
    <content><![CDATA[<h1 id="stm32启动"><a href="#stm32启动" class="headerlink" title="stm32启动"></a><code>stm32启动</code></h1><h2 id="启动方式"><a href="#启动方式" class="headerlink" title="启动方式"></a>启动方式</h2><table>
<thead>
<tr>
<th>boot0</th>
<th>boot1</th>
<th>启动方式</th>
<th></th>
</tr>
</thead>
<tbody><tr>
<td>0</td>
<td>x</td>
<td>FLASH</td>
<td>主闪存存储器</td>
</tr>
<tr>
<td>1</td>
<td>1</td>
<td>SRAM</td>
<td>内置SRAM</td>
</tr>
<tr>
<td>1</td>
<td>0</td>
<td>ISP</td>
<td>系统存储器</td>
</tr>
</tbody></table>
<h2 id="启动文件"><a href="#启动文件" class="headerlink" title="启动文件"></a>启动文件</h2><ul>
<li>声明栈顶地址(链接文件中描述)</li>
<li>声明中断向量表</li>
<li>写Reset_Handler中断服务函数逻辑<blockquote>
<p>清空.bss段<br>FLASH中.data段加载入RAM<br>SystemInit,main函数跳转</p>
</blockquote>
</li>
</ul>
<figure class="highlight armasm"><table><tr><td class="code"><pre><span class="line">  .syntax unified</span><br><span class="line">	.cpu cortex-m4</span><br><span class="line">	.fpu softvfp</span><br><span class="line">	<span class="meta">.thumb</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">.global</span>	g_pfnVectors</span><br><span class="line"><span class="symbol">.global</span>	Default_Handler</span><br><span class="line"></span><br><span class="line"><span class="comment">/* start address for the initialization values of the .data section.</span></span><br><span class="line"><span class="comment">defined in linker script */</span></span><br><span class="line"><span class="symbol">.word</span>	_sidata</span><br><span class="line"><span class="comment">/* start address for the .data section. defined in linker script */</span></span><br><span class="line"><span class="symbol">.word</span>	_sdata</span><br><span class="line"><span class="comment">/* end address for the .data section. defined in linker script */</span></span><br><span class="line"><span class="symbol">.word</span>	_edata</span><br><span class="line"><span class="comment">/* start address for the .bss section. defined in linker script */</span></span><br><span class="line"><span class="symbol">.word</span>	_sbss</span><br><span class="line"><span class="comment">/* end address for the .bss section. defined in linker script */</span></span><br><span class="line"><span class="symbol">.word</span>	_ebss</span><br><span class="line"></span><br><span class="line"><span class="symbol">.equ</span>  BootRAM,        <span class="number">0xF1E0F85F</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  This is the code that gets called when the processor first</span></span><br><span class="line"><span class="comment"> *          starts execution following a reset event. Only the absolutely</span></span><br><span class="line"><span class="comment"> *          necessary set is performed, after which the application</span></span><br><span class="line"><span class="comment"> *          supplied main() routine is called.</span></span><br><span class="line"><span class="comment"> * @param  None</span></span><br><span class="line"><span class="comment"> * @retval : None</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line">    <span class="meta">.section</span>	<span class="meta">.text</span>.Reset_Handler</span><br><span class="line">	.weak	Reset_Handler</span><br><span class="line">	.type	Reset_Handler, %<span class="meta">function</span></span><br><span class="line"><span class="symbol">Reset_Handler:</span></span><br><span class="line">  <span class="keyword">ldr</span>   <span class="built_in">sp</span>, <span class="symbol">=_estack</span>    <span class="comment">/* Atollic update: set stack pointer */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* Copy the data segment initializers from flash to SRAM */</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r0</span>, <span class="symbol">=_sdata</span><span class="comment">/*start data*/</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r1</span>, <span class="symbol">=_edata</span><span class="comment">/*end data */</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r2</span>, <span class="symbol">=_sidata</span><span class="comment">/*start .data */</span></span><br><span class="line">  <span class="keyword">movs</span> <span class="built_in">r3</span>, <span class="number">#0</span></span><br><span class="line">  <span class="keyword">b</span> LoopCopyDataInit</span><br><span class="line"></span><br><span class="line"><span class="symbol">CopyDataInit:</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r4</span>, [<span class="built_in">r2</span>, <span class="built_in">r3</span>]</span><br><span class="line">  <span class="keyword">str</span> <span class="built_in">r4</span>, [<span class="built_in">r0</span>, <span class="built_in">r3</span>]</span><br><span class="line">  <span class="keyword">adds</span> <span class="built_in">r3</span>, <span class="built_in">r3</span>, <span class="number">#4</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">LoopCopyDataInit:</span></span><br><span class="line">  <span class="keyword">adds</span> <span class="built_in">r4</span>, <span class="built_in">r0</span>, <span class="built_in">r3</span></span><br><span class="line">  <span class="keyword">cmp</span> <span class="built_in">r4</span>, <span class="built_in">r1</span></span><br><span class="line">  <span class="keyword">bcc</span> CopyDataInit</span><br><span class="line">  </span><br><span class="line"><span class="comment">/* Zero fill the bss segment. */</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r2</span>, <span class="symbol">=_sbss</span></span><br><span class="line">  <span class="keyword">ldr</span> <span class="built_in">r4</span>, <span class="symbol">=_ebss</span></span><br><span class="line">  <span class="keyword">movs</span> <span class="built_in">r3</span>, <span class="number">#0</span></span><br><span class="line">  <span class="keyword">b</span> LoopFillZerobss</span><br><span class="line"></span><br><span class="line"><span class="symbol">FillZerobss:</span></span><br><span class="line">  <span class="keyword">str</span>  <span class="built_in">r3</span>, [<span class="built_in">r2</span>]</span><br><span class="line">  <span class="keyword">adds</span> <span class="built_in">r2</span>, <span class="built_in">r2</span>, <span class="number">#4</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">LoopFillZerobss:</span></span><br><span class="line">  <span class="keyword">cmp</span> <span class="built_in">r2</span>, <span class="built_in">r4</span></span><br><span class="line">  <span class="keyword">bcc</span> FillZerobss</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Call the clock system intitialization function.*/</span></span><br><span class="line">    <span class="keyword">bl</span>  SystemInit</span><br><span class="line"><span class="comment">/* Call static constructors */</span></span><br><span class="line">    <span class="keyword">bl</span> __libc_init_array</span><br><span class="line"><span class="comment">/* Call the application&#x27;s entry point.*/</span></span><br><span class="line">	<span class="keyword">bl</span>	main</span><br><span class="line"></span><br><span class="line"><span class="symbol">LoopForever:</span></span><br><span class="line">    <span class="keyword">b</span> LoopForever</span><br><span class="line">    </span><br><span class="line"><span class="symbol">.size</span>	Reset_Handler, .-Reset_Handler</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @brief  This is the code that gets called when the processor receives an</span></span><br><span class="line"><span class="comment"> *         unexpected interrupt.  This simply enters an infinite loop, preserving</span></span><br><span class="line"><span class="comment"> *         the system state for examination by a debugger.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param  None</span></span><br><span class="line"><span class="comment"> * @retval : None</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="meta">.section</span>	<span class="meta">.text</span>.Default_Handler,<span class="string">&quot;ax&quot;</span>,%progbits</span><br><span class="line"><span class="symbol">Default_Handler:</span></span><br><span class="line"><span class="symbol">Infinite_Loop:</span></span><br><span class="line">	<span class="keyword">b</span>	Infinite_Loop</span><br><span class="line">	.size	Default_Handler, .-Default_Handler</span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* The minimal vector table for a Cortex-M4.  Note that the proper constructs</span></span><br><span class="line"><span class="comment">* must be placed on this to ensure that it ends up at physical address</span></span><br><span class="line"><span class="comment">* 0x0000.0000.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">******************************************************************************/</span></span><br><span class="line"> 	<span class="meta">.section</span>	.isr_vector,<span class="string">&quot;a&quot;</span>,%progbits</span><br><span class="line">	.type	g_pfnVectors, %object</span><br><span class="line">	.size	g_pfnVectors, .-g_pfnVectors</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="symbol">g_pfnVectors:</span></span><br><span class="line">	<span class="meta">.word</span>	_estack</span><br><span class="line">	<span class="meta">.word</span>	Reset_Handler</span><br><span class="line">	<span class="meta">.word</span>	NMI_Handler</span><br><span class="line">	<span class="meta">.word</span>	HardFault_Handler</span><br><span class="line">	<span class="meta">.word</span>	MemManage_Handler</span><br><span class="line">	<span class="meta">.word</span>	BusFault_Handler</span><br><span class="line">	<span class="meta">.word</span>	UsageFault_Handler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	SVC_Handler</span><br><span class="line">	<span class="meta">.word</span>	DebugMon_Handler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	PendSV_Handler</span><br><span class="line">	<span class="meta">.word</span>	SysTick_Handler</span><br><span class="line">	<span class="meta">.word</span>	WWDG_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	PVD_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TAMP_STAMP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	RTC_WKUP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	FLASH_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	RCC_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI0_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI2_TSC_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel5_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel6_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA1_Channel7_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	ADC1_2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USB_HP_CAN_TX_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USB_LP_CAN_RX0_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	CAN_RX1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	CAN_SCE_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI9_5_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM1_BRK_TIM15_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM1_UP_TIM16_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM1_TRG_COM_TIM17_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM1_CC_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	I2C1_EV_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	I2C1_ER_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	I2C2_EV_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	I2C2_ER_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	SPI1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	SPI2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USART1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USART2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USART3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	EXTI15_10_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	RTC_Alarm_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USBWakeUp_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM8_BRK_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM8_UP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM8_TRG_COM_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM8_CC_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	ADC3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	SPI3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	UART4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	UART5_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM6_DAC_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	TIM7_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA2_Channel1_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA2_Channel2_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA2_Channel3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA2_Channel4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	DMA2_Channel5_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	ADC4_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	COMP1_2_3_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	COMP4_5_6_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	COMP7_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	USB_HP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USB_LP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	USBWakeUp_RMP_IRQHandler</span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	<span class="number">0</span></span><br><span class="line">	<span class="meta">.word</span>	FPU_IRQHandler</span><br><span class="line"></span><br><span class="line"><span class="comment">/*******************************************************************************</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">* Provide weak aliases for each Exception handler to the Default_Handler.</span></span><br><span class="line"><span class="comment">* As they are weak aliases, any function with the same name will override</span></span><br><span class="line"><span class="comment">* this definition.</span></span><br><span class="line"><span class="comment">*</span></span><br><span class="line"><span class="comment">*******************************************************************************/</span></span><br><span class="line"></span><br><span class="line">  .weak	NMI_Handler</span><br><span class="line">	.thumb_set NMI_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">  .weak	HardFault_Handler</span><br><span class="line">	.thumb_set HardFault_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">  .weak	MemManage_Handler</span><br><span class="line">	.thumb_set MemManage_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">  .weak	BusFault_Handler</span><br><span class="line">	.thumb_set BusFault_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	UsageFault_Handler</span><br><span class="line">	.thumb_set UsageFault_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	SVC_Handler</span><br><span class="line">	.thumb_set SVC_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DebugMon_Handler</span><br><span class="line">	.thumb_set DebugMon_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	PendSV_Handler</span><br><span class="line">	.thumb_set PendSV_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	SysTick_Handler</span><br><span class="line">	.thumb_set SysTick_Handler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	WWDG_IRQHandler</span><br><span class="line">	.thumb_set WWDG_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	PVD_IRQHandler</span><br><span class="line">	.thumb_set PVD_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TAMP_STAMP_IRQHandler</span><br><span class="line">	.thumb_set TAMP_STAMP_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	RTC_WKUP_IRQHandler</span><br><span class="line">	.thumb_set RTC_WKUP_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	FLASH_IRQHandler</span><br><span class="line">	.thumb_set FLASH_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	RCC_IRQHandler</span><br><span class="line">	.thumb_set RCC_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI0_IRQHandler</span><br><span class="line">	.thumb_set EXTI0_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI1_IRQHandler</span><br><span class="line">	.thumb_set EXTI1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI2_TSC_IRQHandler</span><br><span class="line">	.thumb_set EXTI2_TSC_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI3_IRQHandler</span><br><span class="line">	.thumb_set EXTI3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI4_IRQHandler</span><br><span class="line">	.thumb_set EXTI4_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel1_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel2_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel3_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel4_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel4_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel5_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel5_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel6_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel6_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA1_Channel7_IRQHandler</span><br><span class="line">	.thumb_set DMA1_Channel7_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	ADC1_2_IRQHandler</span><br><span class="line">	.thumb_set ADC1_2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USB_HP_CAN_TX_IRQHandler</span><br><span class="line">	.thumb_set USB_HP_CAN_TX_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USB_LP_CAN_RX0_IRQHandler</span><br><span class="line">	.thumb_set USB_LP_CAN_RX0_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	CAN_RX1_IRQHandler</span><br><span class="line">	.thumb_set CAN_RX1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	CAN_SCE_IRQHandler</span><br><span class="line">	.thumb_set CAN_SCE_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI9_5_IRQHandler</span><br><span class="line">	.thumb_set EXTI9_5_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM1_BRK_TIM15_IRQHandler</span><br><span class="line">	.thumb_set TIM1_BRK_TIM15_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM1_UP_TIM16_IRQHandler</span><br><span class="line">	.thumb_set TIM1_UP_TIM16_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM1_TRG_COM_TIM17_IRQHandler</span><br><span class="line">	.thumb_set TIM1_TRG_COM_TIM17_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM1_CC_IRQHandler</span><br><span class="line">	.thumb_set TIM1_CC_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM2_IRQHandler</span><br><span class="line">	.thumb_set TIM2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM3_IRQHandler</span><br><span class="line">	.thumb_set TIM3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM4_IRQHandler</span><br><span class="line">	.thumb_set TIM4_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	I2C1_EV_IRQHandler</span><br><span class="line">	.thumb_set I2C1_EV_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	I2C1_ER_IRQHandler</span><br><span class="line">	.thumb_set I2C1_ER_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	I2C2_EV_IRQHandler</span><br><span class="line">	.thumb_set I2C2_EV_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	I2C2_ER_IRQHandler</span><br><span class="line">	.thumb_set I2C2_ER_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	SPI1_IRQHandler</span><br><span class="line">	.thumb_set SPI1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	SPI2_IRQHandler</span><br><span class="line">	.thumb_set SPI2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USART1_IRQHandler</span><br><span class="line">	.thumb_set USART1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USART2_IRQHandler</span><br><span class="line">	.thumb_set USART2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USART3_IRQHandler</span><br><span class="line">	.thumb_set USART3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	EXTI15_10_IRQHandler</span><br><span class="line">	.thumb_set EXTI15_10_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	RTC_Alarm_IRQHandler</span><br><span class="line">	.thumb_set RTC_Alarm_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	USBWakeUp_IRQHandler</span><br><span class="line">	.thumb_set USBWakeUp_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM8_BRK_IRQHandler</span><br><span class="line">	.thumb_set TIM8_BRK_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM8_UP_IRQHandler</span><br><span class="line">	.thumb_set TIM8_UP_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM8_TRG_COM_IRQHandler</span><br><span class="line">	.thumb_set TIM8_TRG_COM_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM8_CC_IRQHandler</span><br><span class="line">	.thumb_set TIM8_CC_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	ADC3_IRQHandler</span><br><span class="line">	.thumb_set ADC3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	SPI3_IRQHandler</span><br><span class="line">	.thumb_set SPI3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	UART4_IRQHandler</span><br><span class="line">	.thumb_set UART4_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	UART5_IRQHandler</span><br><span class="line">	.thumb_set UART5_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM6_DAC_IRQHandler</span><br><span class="line">	.thumb_set TIM6_DAC_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	TIM7_IRQHandler</span><br><span class="line">	.thumb_set TIM7_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA2_Channel1_IRQHandler</span><br><span class="line">	.thumb_set DMA2_Channel1_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA2_Channel2_IRQHandler</span><br><span class="line">	.thumb_set DMA2_Channel2_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA2_Channel3_IRQHandler</span><br><span class="line">	.thumb_set DMA2_Channel3_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA2_Channel4_IRQHandler</span><br><span class="line">	.thumb_set DMA2_Channel4_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	DMA2_Channel5_IRQHandler</span><br><span class="line">	.thumb_set DMA2_Channel5_IRQHandler,Default_Handler</span><br><span class="line"></span><br><span class="line">	.weak	ADC4_IRQHandler</span><br><span class="line">	.thumb_set ADC4_IRQHandler,Default_Handler	</span><br><span class="line">	</span><br><span class="line">	.weak	COMP1_2_3_IRQHandler</span><br><span class="line">	.thumb_set COMP1_2_3_IRQHandler,Default_Handler</span><br><span class="line">	</span><br><span class="line">	.weak	COMP4_5_6_IRQHandler</span><br><span class="line">	.thumb_set COMP4_5_6_IRQHandler,Default_Handler</span><br><span class="line">	</span><br><span class="line">	.weak	COMP7_IRQHandler</span><br><span class="line">	.thumb_set COMP7_IRQHandler,Default_Handler	</span><br><span class="line">	</span><br><span class="line">	.weak	USB_HP_IRQHandler</span><br><span class="line">	.thumb_set USB_HP_IRQHandler,Default_Handler</span><br><span class="line">	</span><br><span class="line">	.weak	USB_LP_IRQHandler</span><br><span class="line">	.thumb_set USB_LP_IRQHandler,Default_Handler</span><br><span class="line">	</span><br><span class="line">	.weak	USBWakeUp_RMP_IRQHandler</span><br><span class="line">	.thumb_set USBWakeUp_RMP_IRQHandler,Default_Handler</span><br><span class="line">	</span><br><span class="line">	.weak	FPU_IRQHandler</span><br><span class="line">	.thumb_set FPU_IRQHandler,Default_Handler</span><br><span class="line"><span class="comment">/************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="comment">//*****************************************************************************</span></span><br><span class="line"><span class="comment">//startup.c</span></span><br><span class="line"><span class="comment">//*****************************************************************************</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> WEAK __attribute__ ((weak))</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ALIAS(f) __attribute__ ((weak, alias (#f)))</span></span><br><span class="line"></span><br><span class="line">WEAK <span class="type">void</span> <span class="title function_">Reset_Handler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line">WEAK <span class="type">void</span> <span class="title function_">Default_Handler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">WDT_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">NMI_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">HardFault_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">MemManage_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">BusFault_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UsageFault_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SVC_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DebugMon_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PendSV_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">WWDG_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PVD_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TAMP_STAMP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RTC_WKUP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">FLASH_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RCC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI2_TSC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel5_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel6_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA1_Channel7_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ADC1_2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USB_HP_CAN_TX_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USB_LP_CAN_RX0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CAN_RX1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">CAN_SCE_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI9_5_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_BRK_TIM15_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_UP_TIM16_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_TRG_COM_TIM17_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM1_CC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C1_EV_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C1_ER_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C2_EV_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">I2C2_ER_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SPI1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SPI2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USART2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USART3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI15_10_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">RTC_Alarm_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USBWakeUp_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM8_BRK_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM8_UP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM8_TRG_COM_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM8_CC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ADC3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">SPI3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">UART5_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM6_DAC_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM7_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA2_Channel1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA2_Channel2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA2_Channel3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA2_Channel4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">DMA2_Channel5_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">ADC4_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;	</span><br><span class="line"><span class="type">void</span> <span class="title function_">COMP1_2_3_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">COMP4_5_6_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">COMP7_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USB_HP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USB_LP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">USBWakeUp_RMP_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">FPU_IRQHandler</span><span class="params">(<span class="type">void</span>)</span> <span class="title function_">ALIAS</span><span class="params">(Default_Handler)</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//*****************************************************************************</span></span><br><span class="line"><span class="comment">// The vector table.</span></span><br><span class="line"><span class="comment">//*****************************************************************************</span></span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _estack;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> (* <span class="type">const</span> g_pfnVectors[])(<span class="type">void</span>)__attribute__ ((section(<span class="string">&quot;.isr_vector&quot;</span>)));</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> (* <span class="type">const</span> g_pfnVectors[])(<span class="type">void</span>) =</span><br><span class="line">&#123;</span><br><span class="line">	(<span class="type">void</span> *)&amp;_estack,</span><br><span class="line">    Reset_Handler,</span><br><span class="line">    NMI_Handler,</span><br><span class="line">    HardFault_Handler,</span><br><span class="line">    MemManage_Handler,</span><br><span class="line">    BusFault_Handler,</span><br><span class="line">    UsageFault_Handler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    SVC_Handler,</span><br><span class="line">    DebugMon_Handler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    PendSV_Handler,</span><br><span class="line">    SysTick_Handler,</span><br><span class="line">    WWDG_IRQHandler,</span><br><span class="line">    PVD_IRQHandler,</span><br><span class="line">    TAMP_STAMP_IRQHandler,</span><br><span class="line">    RTC_WKUP_IRQHandler,</span><br><span class="line">    FLASH_IRQHandler,</span><br><span class="line">    RCC_IRQHandler,</span><br><span class="line">    EXTI0_IRQHandler,</span><br><span class="line">    EXTI1_IRQHandler,</span><br><span class="line">    EXTI2_TSC_IRQHandler,</span><br><span class="line">    EXTI3_IRQHandler,</span><br><span class="line">    EXTI4_IRQHandler,</span><br><span class="line">    DMA1_Channel1_IRQHandler,</span><br><span class="line">    DMA1_Channel2_IRQHandler,</span><br><span class="line">    DMA1_Channel3_IRQHandler,</span><br><span class="line">    DMA1_Channel4_IRQHandler,</span><br><span class="line">    DMA1_Channel5_IRQHandler,</span><br><span class="line">    DMA1_Channel6_IRQHandler,</span><br><span class="line">    DMA1_Channel7_IRQHandler,</span><br><span class="line">    ADC1_2_IRQHandler,</span><br><span class="line">    USB_HP_CAN_TX_IRQHandler,</span><br><span class="line">    USB_LP_CAN_RX0_IRQHandler,</span><br><span class="line">    CAN_RX1_IRQHandler,</span><br><span class="line">    CAN_SCE_IRQHandler,</span><br><span class="line">    EXTI9_5_IRQHandler,</span><br><span class="line">    TIM1_BRK_TIM15_IRQHandler,</span><br><span class="line">    TIM1_UP_TIM16_IRQHandler,</span><br><span class="line">    TIM1_TRG_COM_TIM17_IRQHandler,</span><br><span class="line">    TIM1_CC_IRQHandler,</span><br><span class="line">    TIM2_IRQHandler,</span><br><span class="line">    TIM3_IRQHandler,</span><br><span class="line">    TIM4_IRQHandler,</span><br><span class="line">    I2C1_EV_IRQHandler,</span><br><span class="line">    I2C1_ER_IRQHandler,</span><br><span class="line">    I2C2_EV_IRQHandler,</span><br><span class="line">    I2C2_ER_IRQHandler,</span><br><span class="line">    SPI1_IRQHandler,</span><br><span class="line">    SPI2_IRQHandler,</span><br><span class="line">    USART1_IRQHandler,</span><br><span class="line">    USART2_IRQHandler,</span><br><span class="line">    USART3_IRQHandler,</span><br><span class="line">    EXTI15_10_IRQHandler,</span><br><span class="line">    RTC_Alarm_IRQHandler,</span><br><span class="line">    USBWakeUp_IRQHandler,</span><br><span class="line">    TIM8_BRK_IRQHandler,</span><br><span class="line">    TIM8_UP_IRQHandler,</span><br><span class="line">    TIM8_TRG_COM_IRQHandler,</span><br><span class="line">    TIM8_CC_IRQHandler,</span><br><span class="line">    ADC3_IRQHandler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    SPI3_IRQHandler,</span><br><span class="line">    UART4_IRQHandler,</span><br><span class="line">    UART5_IRQHandler,</span><br><span class="line">    TIM6_DAC_IRQHandler,</span><br><span class="line">    TIM7_IRQHandler,</span><br><span class="line">    DMA2_Channel1_IRQHandler,</span><br><span class="line">    DMA2_Channel2_IRQHandler,</span><br><span class="line">    DMA2_Channel3_IRQHandler,</span><br><span class="line">    DMA2_Channel4_IRQHandler,</span><br><span class="line">    DMA2_Channel5_IRQHandler,</span><br><span class="line">    ADC4_IRQHandler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    COMP1_2_3_IRQHandler,</span><br><span class="line">    COMP4_5_6_IRQHandler,</span><br><span class="line">    COMP7_IRQHandler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    USB_HP_IRQHandler,</span><br><span class="line">    USB_LP_IRQHandler,</span><br><span class="line">    USBWakeUp_RMP_IRQHandler,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    <span class="number">0</span>,</span><br><span class="line">    FPU_IRQHandler,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _sidata;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _sdata;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _edata;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _sbss;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">unsigned</span> <span class="type">long</span> _ebss;</span><br><span class="line"></span><br><span class="line"><span class="keyword">extern</span> <span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> <span class="title function_">SystemInit</span><span class="params">()</span>;</span><br><span class="line"><span class="keyword">extern</span> <span class="type">void</span> __libc_init_array();</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Reset_Handler</span><span class="params">(<span class="type">void</span>)</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">unsigned</span> <span class="type">long</span> *pulSrc, *pulDest;</span><br><span class="line">    pulSrc = &amp;_sidata;</span><br><span class="line">    pulDest = &amp;_sdata;</span><br><span class="line">    <span class="keyword">while</span>( pulDest &lt; &amp;_edata)</span><br><span class="line">    &#123;</span><br><span class="line">        *pulDest++ = *pulSrc++;</span><br><span class="line">    &#125;</span><br><span class="line">    pulDest = &amp;_sbss;</span><br><span class="line">    <span class="keyword">while</span>(pulDest &lt; &amp;_ebss)</span><br><span class="line">    &#123;</span><br><span class="line">        *pulDest++ = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    SystemInit();</span><br><span class="line">    __libc_init_array();</span><br><span class="line">    main();</span><br><span class="line">	<span class="keyword">while</span> (<span class="number">1</span>) </span><br><span class="line">    &#123;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Default_Handler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>stm32</category>
      </categories>
      <tags>
        <tag>stm32</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 常用操作</title>
    <url>/2024/12/24/windows/windows/</url>
    <content><![CDATA[<h2 id="网页禁止复制解除"><a href="#网页禁止复制解除" class="headerlink" title="网页禁止复制解除"></a>网页禁止复制解除</h2><p>win: 在控制台F12页面Sources 快捷键 ctrl+shift+p 然后输入 javascript 找到 disabled javaScript.</p>
<h2 id="切换到旧版右键菜单："><a href="#切换到旧版右键菜单：" class="headerlink" title="切换到旧版右键菜单："></a>切换到旧版右键菜单：</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg add &quot;HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;\InprocServer32&quot; /f /ve</span><br></pre></td></tr></table></figure>

<h2 id="恢复回Win11右键菜单"><a href="#恢复回Win11右键菜单" class="headerlink" title="恢复回Win11右键菜单:"></a>恢复回Win11右键菜单:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">reg delete &quot;HKCU\Software\Classes\CLSID\&#123;86ca1aa0-34aa-4e8b-a509-50c905bae2a2&#125;&quot; /f</span><br></pre></td></tr></table></figure>

<h2 id="重启Windows资源管理器生效"><a href="#重启Windows资源管理器生效" class="headerlink" title="重启Windows资源管理器生效:"></a>重启Windows资源管理器生效:</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">taskkill /f /im explorer.exe &amp; start explorer.exe</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>windows</category>
      </categories>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>stm32 cmake</title>
    <url>/2024/12/24/stm32/stm32cmake/</url>
    <content><![CDATA[<h1 id="STM32-CMAKE"><a href="#STM32-CMAKE" class="headerlink" title="STM32 CMAKE"></a>STM32 CMAKE</h1><h2 id="FILE"><a href="#FILE" class="headerlink" title="FILE"></a>FILE</h2><figure class="highlight cmake"><table><tr><td class="code"><pre><span class="line"><span class="keyword">cmake_minimum_required</span>(VERSION <span class="number">3.22</span>)</span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This file is generated only once,</span></span><br><span class="line"><span class="comment"># and is not re-generated if converter is called multiple times.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># User is free to modify the file as much as necessary</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Setup compiler settings</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD <span class="number">11</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_STANDARD_REQUIRED <span class="keyword">ON</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_EXTENSIONS <span class="keyword">ON</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Define the build type</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">NOT</span> CMAKE_BUILD_TYPE)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_BUILD_TYPE <span class="string">&quot;Debug&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Set the project name</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_PROJECT_NAME test2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Include toolchain file</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_NAME               Generic)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_SYSTEM_PROCESSOR          arm)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER_FORCED <span class="keyword">TRUE</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER_FORCED <span class="keyword">TRUE</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER_ID GNU)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER_ID GNU)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Some default GCC settings</span></span><br><span class="line"><span class="comment"># arm-none-eabi- must be part of path environment</span></span><br><span class="line"><span class="keyword">set</span>(TOOLCHAIN_PREFIX                arm-none-eabi-)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_COMPILER                <span class="variable">$&#123;TOOLCHAIN_PREFIX&#125;</span>gcc)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_COMPILER              <span class="variable">$&#123;CMAKE_C_COMPILER&#125;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_COMPILER              <span class="variable">$&#123;TOOLCHAIN_PREFIX&#125;</span>g++)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_LINKER                    <span class="variable">$&#123;TOOLCHAIN_PREFIX&#125;</span>g++)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_OBJCOPY                   <span class="variable">$&#123;TOOLCHAIN_PREFIX&#125;</span>objcopy)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_SIZE                      <span class="variable">$&#123;TOOLCHAIN_PREFIX&#125;</span>size)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXECUTABLE_SUFFIX_ASM     <span class="string">&quot;.elf&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXECUTABLE_SUFFIX_C       <span class="string">&quot;.elf&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXECUTABLE_SUFFIX_CXX     <span class="string">&quot;.elf&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_TRY_COMPILE_TARGET_TYPE STATIC_LIBRARY)</span><br><span class="line"><span class="keyword">set</span>(LDSCRIPT STM32F103RCTx_FLASH.ld)</span><br><span class="line"><span class="comment"># MCU specific flags</span></span><br><span class="line"><span class="keyword">set</span>(TARGET_FLAGS <span class="string">&quot;-mcpu=cortex-m3 &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; $&#123;TARGET_FLAGS&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; -Wall -Wextra -Wpedantic -fdata-sections -ffunction-sections&quot;</span>)</span><br><span class="line"><span class="keyword">if</span>(CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> Debug)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; -O0 -g3&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"><span class="keyword">if</span>(CMAKE_BUILD_TYPE <span class="keyword">MATCHES</span> Release)</span><br><span class="line">    <span class="keyword">set</span>(CMAKE_C_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; -Os -g0&quot;</span>)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_ASM_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; -x assembler-with-cpp -MMD -MP&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_FLAGS <span class="string">&quot;$&#123;CMAKE_C_FLAGS&#125; -fno-rtti -fno-exceptions -fno-threadsafe-statics&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;TARGET_FLAGS&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; -T $&#123;CMAKE_SOURCE_DIR&#125;/$&#123;LDSCRIPT&#125;&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; --specs=nano.specs&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; -Wl,-Map=$&#123;CMAKE_PROJECT_NAME&#125;.map -Wl,--gc-sections&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; -Wl,--start-group -lc -lm -Wl,--end-group&quot;</span>)</span><br><span class="line"><span class="keyword">set</span>(CMAKE_C_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; -Wl,--print-memory-usage&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>(CMAKE_CXX_LINK_FLAGS <span class="string">&quot;$&#123;CMAKE_C_LINK_FLAGS&#125; -Wl,--start-group -lstdc++ -lsupc++ -Wl,--end-group&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable compile command to ease indexing with e.g. clangd</span></span><br><span class="line"><span class="keyword">set</span>(CMAKE_EXPORT_COMPILE_COMMANDS <span class="keyword">TRUE</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Core project settings</span></span><br><span class="line"><span class="keyword">project</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>)</span><br><span class="line"><span class="keyword">message</span>(<span class="string">&quot;Build type: &quot;</span> <span class="variable">$&#123;CMAKE_BUILD_TYPE&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable CMake support for ASM and C languages</span></span><br><span class="line"><span class="keyword">enable_language</span>(C ASM)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create an executable object type</span></span><br><span class="line"><span class="keyword">add_executable</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add STM32CubeMX generated sources</span></span><br><span class="line"><span class="comment"># add_subdirectory(cmake/stm32cubemx)</span></span><br><span class="line"><span class="keyword">add_custom_command</span>(</span><br><span class="line">    <span class="keyword">TARGET</span>  <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span></span><br><span class="line">    <span class="keyword">COMMAND</span> <span class="variable">$&#123;CMAKE_OBJCOPY&#125;</span> -O binary -S <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>.elf <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>.bin</span><br><span class="line">    <span class="keyword">COMMAND</span> <span class="variable">$&#123;CMAKE_OBJCOPY&#125;</span> -O ihex <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>.elf <span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span>.hex</span><br><span class="line">    )</span><br><span class="line"><span class="comment"># Link directories setup</span></span><br><span class="line"><span class="keyword">target_link_directories</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span> PRIVATE</span><br><span class="line">    <span class="comment"># Add user defined library search paths</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add sources to executable</span></span><br><span class="line"><span class="keyword">target_sources</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span> PRIVATE</span><br><span class="line">    <span class="comment"># Add user sources here</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add include paths</span></span><br><span class="line"><span class="keyword">target_include_directories</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span> PRIVATE</span><br><span class="line">    <span class="comment"># Add user defined include paths</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add project symbols (macros)</span></span><br><span class="line"><span class="keyword">target_compile_definitions</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span> PRIVATE</span><br><span class="line">    <span class="comment"># Add user defined symbols</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Add linked libraries</span></span><br><span class="line"><span class="keyword">target_link_libraries</span>(<span class="variable">$&#123;CMAKE_PROJECT_NAME&#125;</span></span><br><span class="line">    stm32cubemx</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Add user defined libraries</span></span><br><span class="line">)</span><br><span class="line"><span class="comment"># --------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 创建接口库</span></span><br><span class="line"><span class="comment"># project(stm32cubemx)</span></span><br><span class="line"><span class="keyword">add_library</span>(stm32cubemx INTERFACE)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_compile_definitions</span>(stm32cubemx INTERFACE </span><br><span class="line">	USE_HAL_DRIVER </span><br><span class="line">	STM32F103xE</span><br><span class="line">    $&lt;$&lt;CONFIG:Debug&gt;:DEBUG&gt;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_include_directories</span>(stm32cubemx INTERFACE</span><br><span class="line">    Core/Inc</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Inc</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Inc/Legacy</span><br><span class="line">    Drivers/CMSIS/Device/ST/STM32F1xx/<span class="keyword">Include</span></span><br><span class="line">    Drivers/CMSIS/<span class="keyword">Include</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">target_sources</span>(stm32cubemx INTERFACE</span><br><span class="line">    Core/Src/main.c</span><br><span class="line">    Core/Src/stm32f1xx_it.c</span><br><span class="line">    Core/Src/stm32f1xx_hal_msp.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c</span><br><span class="line">    Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c</span><br><span class="line">    Core/Src/system_stm32f1xx.c</span><br><span class="line">    Core/Src/sysmem.c</span><br><span class="line">    Core/Src/syscalls.c</span><br><span class="line">    startup_stm32f103xe.s</span><br><span class="line">)</span><br><span class="line"><span class="comment"># enable_language(C ASM)</span></span><br><span class="line"><span class="comment"># project(lib)</span></span><br><span class="line"><span class="comment"># ----------------------------------------------------------------</span></span><br><span class="line"><span class="comment"># 生成静态库</span></span><br><span class="line"><span class="keyword">set</span>(GENLIB <span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>(GENLIB <span class="keyword">MATCHES</span> <span class="number">1</span>)</span><br><span class="line"><span class="keyword">add_library</span>(lib STATIC </span><br><span class="line">Core/Src/main.c</span><br><span class="line">Core/Src/stm32f1xx_it.c</span><br><span class="line">Core/Src/stm32f1xx_hal_msp.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio_ex.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_tim_ex.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc_ex.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_gpio.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_dma.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_pwr.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_exti.c</span><br><span class="line">Core/Src/system_stm32f1xx.c</span><br><span class="line">Core/Src/sysmem.c</span><br><span class="line">Core/Src/syscalls.c</span><br><span class="line">startup_stm32f103xe.s</span><br><span class="line">)</span><br><span class="line"><span class="keyword">target_include_directories</span>(lib PUBLIC    </span><br><span class="line">Core/Inc</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Inc</span><br><span class="line">Drivers/STM32F1xx_HAL_Driver/Inc/Legacy</span><br><span class="line">Drivers/CMSIS/Device/ST/STM32F1xx/<span class="keyword">Include</span></span><br><span class="line">Drivers/CMSIS/<span class="keyword">Include</span>)</span><br><span class="line"><span class="keyword">target_compile_definitions</span>(lib PUBLIC</span><br><span class="line">	USE_HAL_DRIVER </span><br><span class="line">	STM32F103xE</span><br><span class="line">)</span><br><span class="line"><span class="keyword">endif</span>()</span><br><span class="line"><span class="comment"># ----------------------------------------------------------------</span></span><br></pre></td></tr></table></figure>

<h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><p>构建 编译</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">cmake -B build -G <span class="string">&#x27;Ninja&#x27;</span></span><br><span class="line">cmake -B build -G <span class="string">&#x27;Unix Makefiles&#x27;</span></span><br><span class="line"></span><br><span class="line">cmake --build build</span><br></pre></td></tr></table></figure>

<p>task.json</p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span>  </span><br><span class="line">    <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;2.0.0&quot;</span><span class="punctuation">,</span>  </span><br><span class="line">    <span class="attr">&quot;tasks&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ninja&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmake -B build -G &#x27;Ninja&#x27;;cmake --build build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;cmake -B build -G &#x27;Unix Makefiles&#x27;;cmake --build build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="punctuation">&#123;</span></span><br><span class="line">            <span class="attr">&quot;label&quot;</span><span class="punctuation">:</span> <span class="string">&quot;clean&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;type&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;command&quot;</span><span class="punctuation">:</span> <span class="string">&quot;rm -r build&quot;</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;problemMatcher&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">            <span class="attr">&quot;group&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">                <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;build&quot;</span><span class="punctuation">,</span></span><br><span class="line">                <span class="attr">&quot;isDefault&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line">            <span class="punctuation">&#125;</span></span><br><span class="line">        <span class="punctuation">&#125;</span></span><br><span class="line">    <span class="punctuation">]</span>  </span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure>

<h2 id="提取commit到文件"><a href="#提取commit到文件" class="headerlink" title="提取commit到文件"></a>提取commit到文件</h2><figure class="highlight bat"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">setlocal</span> enabledelayedexpansion</span><br><span class="line"> </span><br><span class="line">:: 获取当前路径</span><br><span class="line"><span class="built_in">set</span> CURRENT_DIR=<span class="variable">%cd%</span></span><br><span class="line"> </span><br><span class="line">:: 进入源代码目录</span><br><span class="line"><span class="built_in">cd</span> /d <span class="variable">%CURRENT_DIR%</span>\<span class="built_in">path</span>\to\your\source\code</span><br><span class="line"> </span><br><span class="line">:: 获取最新的commit号</span><br><span class="line"><span class="keyword">for</span> /f &quot;delims=#&quot; <span class="variable">%%a</span> <span class="keyword">in</span> (&#x27;git rev-parse --short HEAD&#x27;) <span class="keyword">do</span> @<span class="built_in">set</span> commit=<span class="variable">%%a</span></span><br><span class="line"> </span><br><span class="line">:: 将commit号写入version.h文件</span><br><span class="line"><span class="built_in">echo</span> #define COMMIT_HASH &quot;<span class="variable">%commit%</span>&quot; &gt; version.h</span><br><span class="line"> </span><br><span class="line">:: 退出源代码目录</span><br><span class="line"><span class="built_in">cd</span> /d <span class="variable">%CURRENT_DIR%</span></span><br><span class="line"> </span><br><span class="line"><span class="built_in">endlocal</span></span><br></pre></td></tr></table></figure>
<p>完整的commit号（40位SHA-1）写入文件，可以使用以下命令替换</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">git rev-parse HEAD &gt; version.h</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>stm32</category>
        <category>CMake</category>
      </categories>
      <tags>
        <tag>stm32</tag>
        <tag>CMake</tag>
      </tags>
  </entry>
</search>
